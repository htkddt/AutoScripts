diff --git i/src/sw/lib/cpptcl-2.2.5/cpptcl/details/callbacks.h w/src/sw/lib/cpptcl-2.2.5/cpptcl/details/callbacks.h
index f674dd88910..b9759a50d45 100644
--- i/src/sw/lib/cpptcl-2.2.5/cpptcl/details/callbacks.h
+++ w/src/sw/lib/cpptcl-2.2.5/cpptcl/details/callbacks.h
@@ -11,7 +11,7 @@
 // Note: this file is not supposed to be a stand-alone header
 
 #include <tuple>
-#include <utility>
+//#include <utility>
 
 template <typename R>
 class callbackn : public callback_base
diff --git i/src/sw/noc_dev/CMakeLists.txt w/src/sw/noc_dev/CMakeLists.txt
index a6b9b186291..9664017be4c 100644
--- i/src/sw/noc_dev/CMakeLists.txt
+++ w/src/sw/noc_dev/CMakeLists.txt
@@ -54,6 +54,7 @@ endif()
 
 add_link_options(-Wl,--fatal-warnings)
 #add_compile_definitions($<$<NOT:$<CONFIG:Debug>>:_FORTIFY_SOURCE=2>)
+#add_definitions(-DQT_DISABLE_DEPRECATED_BEFORE=0 -DENABLE_VSTAT -DQT_USE_QSTRINGBUILDER -DQT_NO_DEBUG -DQT_PRINTSUPPORT_LIB -DQT_WIDGETS_LIB -DQT_GUI_LIB -DQT_CORE_LIB)
 add_compile_options(
     -Wall -Wextra -Wformat -Wformat-security
     -Wno-attributes)
@@ -86,7 +87,7 @@ add_compile_definitions(NS_DLL)
 if (NOT CMAKE_CXX_STANDARD)
     set(CMAKE_CXX_STANDARD 17)
     set(CMAKE_CXX_STANDARD_REQUIRED ON)
-#    set(CMAKE_CXX_EXTENSIONS OFF)
+	set(CMAKE_CXX_EXTENSIONS OFF)
 endif()
 
 # Using interface library to resolve circular dependencies
@@ -131,9 +132,10 @@ target_link_libraries(noc_config_ip PRIVATE flexlm noc_include)
 
 add_library(nocstudio SHARED)
 target_include_directories(nocstudio PUBLIC include)
+find_package(OpenMP)
 target_link_libraries(nocstudio
     PUBLIC noc_infra noc_core ipcore
-    PRIVATE cpptcl noc_config_ns tclvfs)
+    PRIVATE cpptcl noc_config_ns tclvfs OpenMP::OpenMP_CXX)
 
 add_subdirectory(Infra)
 add_subdirectory(Isabelle)
diff --git i/src/sw/noc_dev/GUICore/CMakeLists.txt w/src/sw/noc_dev/GUICore/CMakeLists.txt
index 36906dc6973..17312b554d4 100755
--- i/src/sw/noc_dev/GUICore/CMakeLists.txt
+++ w/src/sw/noc_dev/GUICore/CMakeLists.txt
@@ -4,62 +4,33 @@ set(CMAKE_AUTORCC ON)
 set(CMAKE_AUTOUIC ON)
 set(CMAKE_PREFIX_PATH /usr/intel/pkgs/libqt/5.11.2/)
 
-find_package(Qt5 COMPONENTS Core Gui Widgets PrintSupport REQUIRED)
+if (NS_USE_QT6)
+  set(Qt6Core5Compat_DIR "/usr/intel/pkgs/libqt/6.7.2/install/lib/cmake/Qt6Core5Compat")
+  find_package(Qt6 COMPONENTS Core Gui Widgets PrintSupport Core5Compat REQUIRED)
+else()
+  find_package(Qt5 COMPONENTS Core Gui Widgets PrintSupport REQUIRED)
+endif()
 
-#GUICore
 file(GLOB gc_sources RELATIVE ${CMAKE_CURRENT_SOURCE_DIR}
     [^.]*.cpp /[^.]*.h
     DRC/[^.]*.cpp DRC/[^.]*.h
     Utils/[^.]*.cpp Utils/[^.]*.h
     Qtproperty/[^.]*.cpp Qtproperty/*/[^.]*.cpp 
     )
-#message(STATUS "gc_sources=${gc_sources}")
-
-file(GLOB gc_std_mocs RELATIVE ${CMAKE_CURRENT_SOURCE_DIR}
-    Qtproperty/[^.]*_p.h Qtproperty/*/[^.]*_p.h
-    )
-QT5_WRAP_CPP(gc_std_mocs)
-
 set(gc_includes DRC/ Gui/ Modeling/ Utils/ .)
 
-# Qt property headers need special MOC handling as the X.cpp files include the generated moc_X.cpp
-file(GLOB qtp_hdrs RELATIVE ${CMAKE_CURRENT_SOURCE_DIR}
-    Qtproperty/[^.]*.h Qtproperty/*/[^.]*.h
-    )
-list(FILTER qtp_hdrs EXCLUDE REGEX "_p.h$")
-
-#Rule to generate moc files with .cpp extension
-function(qt5_manual_moc)
-  qt5_get_moc_flags(_moc_incs)
-  foreach(_current_file ${ARGN})
-    get_filename_component(_abs_file ${_current_file} ABSOLUTE)
-    if(EXISTS ${_abs_file})
-      file(READ ${_abs_file} _contents)
-      get_filename_component(_basename ${_abs_file} NAME_WE)
-      string(REGEX MATCH "Q_OBJECT" _match "${_contents}")
-      if(_match)
-        set(_moc "${CMAKE_CURRENT_BINARY_DIR}/moc_${_basename}.cpp")
-        qt5_create_moc_command(${_abs_file} ${_moc} "${_moc_incs}" "" "" "")
-        set_property(SOURCE ${_abs_file} PROPERTY SKIP_AUTOMOC ON) # disable automoc on this file
-        string(REGEX REPLACE "[.]h$" ".cpp" _cpp_file ${_current_file})
-        set_property(SOURCE "${CMAKE_CURRENT_SOURCE_DIR}/${_cpp_file}" APPEND PROPERTY OBJECT_DEPENDS ${_moc})
-#        message(STATUS "Added dep from ${CMAKE_CURRENT_SOURCE_DIR}/${_cpp_file} to ${_moc}")
-      endif(_match)
-    endif(EXISTS ${_abs_file})
-  endforeach (_current_file)
-endfunction(qt5_manual_moc)
-
-#message(STATUS "qtp_hdrs=${qtp_hdrs}")
-qt5_manual_moc(${qtp_hdrs})
-# don't include any moc_/qrc_ files left lying around from Makefile build
-list(FILTER gc_sources EXCLUDE REGEX "^moc_.*[.]cpp")
-list(FILTER gc_sources EXCLUDE REGEX "^qrc_.*[.]cpp")
-
-## HACK: include GUI files from prototype when building GUICore
+set(CMAKE_AUTOMOC ON)
+set(CMAKE_AUTORCC ON)
+set(CMAKE_AUTOUIC ON)
 set(gui_path ../prototype)
 set(gui_includes ${gui_path} ${gui_path}/Gui/ ${gui_path}/Gui/Customized/ ${gui_path}/Gui/Delegates/ ${gui_path}/Gui/Dialogs/ ${gui_path}/Gui/Item/ ${gui_path}/Gui/Models/ ${gui_path}/Gui/View/ ${gui_path}/Modeling/ ${gui_path}/Utils/)
-## END HACK
 
 add_library(GUICore OBJECT ${gc_sources} dockresource.qrc)
 target_include_directories(GUICore PUBLIC ${gc_includes} ${CMAKE_BINARY_DIR} ${gui_includes})
-target_link_libraries(GUICore PUBLIC noc_infra noc_core ipcore tclvfs Qt5::Core Qt5::Gui Qt5::Widgets Qt5::PrintSupport pthread dl)
\ No newline at end of file
+
+
+if (NS_USE_QT6)
+  target_link_libraries(GUICore PUBLIC noc_infra noc_core ipcore tclvfs Qt6::Core Qt6::Gui Qt6::Widgets Qt6::PrintSupport Qt6::Core5Compat pthread dl)
+else()
+  target_link_libraries(GUICore PUBLIC noc_infra noc_core ipcore tclvfs Qt5::Core Qt5::Gui Qt5::Widgets Qt5::PrintSupport pthread dl)
+endif()
diff --git i/src/sw/noc_dev/GUICore/GUICore.vcxproj w/src/sw/noc_dev/GUICore/GUICore.vcxproj
index a244d2a233b..453be20f0f4 100644
--- i/src/sw/noc_dev/GUICore/GUICore.vcxproj
+++ w/src/sw/noc_dev/GUICore/GUICore.vcxproj
@@ -90,11 +90,11 @@
     <LinkIncremental>false</LinkIncremental>
   </PropertyGroup>
   <PropertyGroup Label="QtSettings" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
-    <QtInstall>Qt5.11.1</QtInstall>
+    <QtInstall>6.7.2_msvc2022_64</QtInstall>
     <QtModules>core;gui;printsupport;widgets</QtModules>
   </PropertyGroup>
   <PropertyGroup Label="QtSettings" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
-    <QtInstall>Qt5.11.1</QtInstall>
+    <QtInstall>6.7.2_msvc2019_64</QtInstall>
     <QtModules>core;gui;printsupport;widgets</QtModules>
   </PropertyGroup>
   <ImportGroup Condition="Exists('$(QtMsBuild)\qt.props')">
@@ -176,7 +176,7 @@
       <PreprocessorDefinitions>_DEBUG;_CONSOLE;_WINDOWS;UNICODE;WIN32;WIN64;QT_DISABLE_DEPRECATED_BEFORE=0;ENABLE_VSTAT;QT_USE_QSTRINGBUILDER;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <ConformanceMode>false</ConformanceMode>
       <LanguageStandard>stdcpp17</LanguageStandard>
-      <AdditionalIncludeDirectories>.;..\GUICore;..\GUICore\Utils;..\GUICore\Qtproperty;..\GUICore\DRC;Qtproperty;C:\Qt\Qt5.11.1\5.11.1\msvc2017_64\include;C:\Qt\Qt5.11.1\5.11.1\msvc2017_64\include\QtPrintSupport;C:\Qt\Qt5.11.1\5.11.1\msvc2017_64\include\QtSvg;C:\Qt\Qt5.11.1\5.11.1\msvc2017_64\include\QtWidgets;C:\Qt\Qt5.11.1\5.11.1\msvc2017_64\include\QtGui;C:\Qt\Qt5.11.1\5.11.1\msvc2017_64\include\QtANGLE;C:\Qt\Qt5.11.1\5.11.1\msvc2017_64\include\QtCore;C:\Qt\Qt5.11.1\5.11.1\msvc2017_64\mkspecs\win32-msvc2015;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <AdditionalIncludeDirectories>.;..\GUICore;..\GUICore\Utils;..\GUICore\Qtproperty;..\GUICore\DRC;Qtproperty;C:\Qt6\6.7.2\msvc2022_64\include;C:\Qt6\6.7.2\msvc2022_64\include\QtPrintSupport;C:\Qt6\6.7.2\msvc2022_64\include\QtSvg;C:\Qt6\6.7.2\msvc2022_64\include\QtWidgets;C:\Qt6\6.7.2\msvc2022_64\include\QtGui;C:\Qt6\6.7.2\msvc2022_64\include\QtANGLE;C:\Qt6\6.7.2\msvc2022_64\include\QtCore;C:\Qt6\6.7.2\msvc2022_64\mkspecs\win32-msvc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
       <MultiProcessorCompilation>true</MultiProcessorCompilation>
       <BasicRuntimeChecks>Default</BasicRuntimeChecks>
       <RuntimeTypeInfo>true</RuntimeTypeInfo>
@@ -215,7 +215,7 @@
       <PreprocessorDefinitions>_CONSOLE;_WINDOWS;UNICODE;WIN32;WIN64;QT_DISABLE_DEPRECATED_BEFORE=0;ENABLE_VSTAT;QT_USE_QSTRINGBUILDER;QT_NO_DEBUG;NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <ConformanceMode>true</ConformanceMode>
       <LanguageStandard>stdcpp17</LanguageStandard>
-      <AdditionalIncludeDirectories>.;..\GUICore;..\GUICore\Utils;..\GUICore\Qtproperty;..\GUICore\DRC;Qtproperty;C:\Qt\Qt5.11.1\5.11.1\msvc2017_64\include;C:\Qt\Qt5.11.1\5.11.1\msvc2017_64\include\QtPrintSupport;C:\Qt\Qt5.11.1\5.11.1\msvc2017_64\include\QtSvg;C:\Qt\Qt5.11.1\5.11.1\msvc2017_64\include\QtWidgets;C:\Qt\Qt5.11.1\5.11.1\msvc2017_64\include\QtGui;C:\Qt\Qt5.11.1\5.11.1\msvc2017_64\include\QtANGLE;C:\Qt\Qt5.11.1\5.11.1\msvc2017_64\include\QtCore;C:\Qt\Qt5.11.1\5.11.1\msvc2017_64\mkspecs\win32-msvc2015;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <AdditionalIncludeDirectories>.;..\GUICore;..\GUICore\Utils;..\GUICore\Qtproperty;..\GUICore\DRC;Qtproperty;C:\Qt6\6.7.2\msvc2019_64\include;C:\Qt6\6.7.2\msvc2019_64\include\QtPrintSupport;C:\Qt6\6.7.2\msvc2019_64\include\QtSvg;C:\Qt6\6.7.2\msvc2019_64\include\QtWidgets;C:\Qt6\6.7.2\msvc2019_64\include\QtGui;C:\Qt6\6.7.2\msvc2019_64\include\QtANGLE;C:\Qt6\6.7.2\msvc2019_64\include\QtCore;C:\Qt6\6.7.2\msvc2019_64\mkspecs\win32-msvc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
     </ClCompile>
     <Link>
       <SubSystem>Console</SubSystem>
diff --git i/src/sw/noc_dev/GUICore/NSDockWidget.cpp w/src/sw/noc_dev/GUICore/NSDockWidget.cpp
index 72d952afe6a..cafcbfaf58f 100644
--- i/src/sw/noc_dev/GUICore/NSDockWidget.cpp
+++ w/src/sw/noc_dev/GUICore/NSDockWidget.cpp
@@ -27,7 +27,8 @@ NSDockWidget::NSDockWidget(const QString& title, QWidget* parent, Qt::WindowFlag
         }
     });
     connect(this, &NSDockWidget::visibilityChanged, this, [this](){
-        emit dockWidgetChanged();
+        //emit dockWidgetChanged();
+	return;
     });
 }
  
diff --git i/src/sw/noc_dev/GUICore/NsTypes.cpp w/src/sw/noc_dev/GUICore/NsTypes.cpp
index ae3f0e37169..649f4a02f5e 100644
--- i/src/sw/noc_dev/GUICore/NsTypes.cpp
+++ w/src/sw/noc_dev/GUICore/NsTypes.cpp
@@ -14,8 +14,10 @@
 #include <QGraphicsItem>
 #include <QSplashScreen>
 #include <QApplication>
-#include <QDesktopWidget>
+#include <QGuiApplication>
+#include <QRegExp>
 #include <QStyleOptionGraphicsItem>
+#include <QRegularExpression>
 
 #include <cmath>
 #include <regex>
@@ -231,7 +233,7 @@ void drawAutoFitText(const QString & text, const QRectF & itemRect, QPainter * p
     QFont measureFont = painter->font();
     measureFont.setPointSizeF(FLOOR_PLAN_DEFAULT_TEXT_SIZE);
     QFontMetrics metrics(measureFont);
-    if (itemRect.width() < metrics.width(text) || itemRect.height() < FLOOR_PLAN_DEFAULT_TEXT_SIZE) {
+    if (itemRect.width() < metrics.tightBoundingRect(text).width() || itemRect.height() < FLOOR_PLAN_DEFAULT_TEXT_SIZE) {
         const float hmargin = 0.1 * itemRect.width();// horizontal margin of 10% host width
         const auto brect = itemRect.adjusted(hmargin, 0, -hmargin, 0); //reduce rect by margin
         const int flags = Qt::TextDontClip | Qt::TextWordWrap; //more flags if needed
@@ -318,7 +320,7 @@ bool imgSave(QImage * img, const QString & absFilePath, const QString & extensio
 QString wrapTextForTooltip(const QString & text, int width)
 {
     QFontMetrics fm(QToolTip::font());
-    const int row = fm.width(text) / width;
+    const int row = fm.tightBoundingRect(text).width() / width;
     if (row <= 1) return text;
     const int col = text.length() / row;
     QString tempStr = text;
@@ -452,14 +454,16 @@ double fontSizeCheck(double size)
     else return size;
 }
 
-QStringList extractNumberFromString(QString str) {
+QStringList extractNumberFromString(QString str)
+{
     QStringList result;
-    QRegExp rx("(\\d+)");
-    int pos = 0;
-    while ((pos = rx.indexIn(str, pos)) != -1) {
-        result << rx.cap(1);
-        pos += rx.matchedLength();
+    QRegularExpression rx("(\\d+)");
+    QRegularExpressionMatchIterator matchedIterator = rx.globalMatch(str);
+    while (matchedIterator.hasNext()) {
+        QRegularExpressionMatch match = matchedIterator.next();
+        result << match.captured(1);
     }
+
     return result;
 }
 
@@ -530,8 +534,8 @@ bool wordsFilter(QString text, QString filter)
 {
     // multiple words
     if (!filter.isEmpty()) {
-        QRegExp rx("(\\ |\\,|\\;|\\:|\\t)"); //RegEx for ' ' or ',' or ';' or '.' or ':' or '\t'
-        QStringList words = filter.split(rx, QString::SkipEmptyParts);
+        QRegularExpression rx("(\\ |\\,|\\;|\\:|\\t)");  // RegEx for ' ' or ',' or ';' or '.' or ':' or '\t'
+        QStringList words = filter.split(rx, Qt::SkipEmptyParts);
         for (auto const& w : words) {
             if (text.contains(w, Qt::CaseInsensitive)) {
                 return false;
@@ -546,8 +550,9 @@ QSplashScreen* createSpashScreen() {
     //generate auto-sized splash image
     QPixmap splashImage = QPixmap(":/images/cfg.png");
     QWidget* screen = nullptr;
-    screen = QApplication::desktop()->screen(QApplication::desktop()->primaryScreen());//get primary screen (splash screen only displayed on primary)
-    if (QApplication::desktop()->screenCount() == 0 || screen == nullptr)//if there is no screen registered, calculate size based on font metrics
+    //screen = QApplication::desktop()->screen(QApplication::desktop()->primaryScreen());//get primary screen (splash screen only displayed on primary)
+
+    if (screen == nullptr)  // if there is no screen registered, calculate size based on font metrics
     {
         QFontMetrics fontMet = QFontMetrics(QFont("Gotham Rounded Book", 10, 10));
         splashImage = splashImage.scaledToHeight(fontMet.height() * 18);
diff --git i/src/sw/noc_dev/GUICore/Qtproperty/qteditorfactory.cpp w/src/sw/noc_dev/GUICore/Qtproperty/qteditorfactory.cpp
index c486ef9c936..b177f91b07f 100644
--- i/src/sw/noc_dev/GUICore/Qtproperty/qteditorfactory.cpp
+++ w/src/sw/noc_dev/GUICore/Qtproperty/qteditorfactory.cpp
@@ -64,6 +64,8 @@
 #include <QPainter>
 #include <QMap>
 #include <QDebug>
+#include <QRegularExpression>
+#include <QRegularExpressionValidator>
 
 #if defined(Q_CC_MSVC)
 #    pragma warning(disable: 4786) /* MS VS 6: truncating debug info after 255 characters */
@@ -980,7 +982,7 @@ class QtLineEditFactoryPrivate : public EditorFactoryPrivate<LineEdit> {
 public:
 
     void slotPropertyChanged(QtProperty* property, const QString& value);
-    void slotRegExpChanged(QtProperty* property, const QRegExp& regExp);
+    void slotRegExpChanged(QtProperty* property, const QRegularExpression& regExp);
     void slotSetValue(const QString& value);
     void slotEchoModeChanged(QtProperty*, int);
     void slotReadOnlyChanged(QtProperty*, bool);
@@ -1002,7 +1004,7 @@ void QtLineEditFactoryPrivate::slotPropertyChanged(QtProperty * property, const
     }
 }
 
-void QtLineEditFactoryPrivate::slotRegExpChanged(QtProperty * property, const QRegExp & regExp)
+void QtLineEditFactoryPrivate::slotRegExpChanged(QtProperty* property, const QRegularExpression& regExp)
 {
     if (!m_createdEditors.contains(property))
         return;
@@ -1018,7 +1020,7 @@ void QtLineEditFactoryPrivate::slotRegExpChanged(QtProperty * property, const QR
         const QValidator* oldValidator = editor->validator();
         QValidator* newValidator = 0;
         if (regExp.isValid()) {
-            newValidator = new QRegExpValidator(regExp, editor);
+            newValidator = new QRegularExpressionValidator(QRegularExpression(regExp.pattern()), editor);
         }
         editor->setValidator(newValidator);
         if (oldValidator)
@@ -1116,8 +1118,8 @@ void QtLineEditFactory::connectPropertyManager(QtStringPropertyManager * manager
 {
     connect(manager, SIGNAL(valueChanged(QtProperty*, const QString&)),
         this, SLOT(slotPropertyChanged(QtProperty*, const QString&)));
-    connect(manager, SIGNAL(regExpChanged(QtProperty*, const QRegExp&)),
-        this, SLOT(slotRegExpChanged(QtProperty*, const QRegExp&)));
+    connect(manager, SIGNAL(regExpChanged(QtProperty*, const QRegularExpression&)),
+        this, SLOT(slotRegExpChanged(QtProperty*, const QRegularExpression&)));
     connect(manager, SIGNAL(echoModeChanged(QtProperty*, int)),
         this, SLOT(slotEchoModeChanged(QtProperty*, int)));
     connect(manager, SIGNAL(readOnlyChanged(QtProperty*, bool)),
@@ -1135,9 +1137,9 @@ QWidget* QtLineEditFactory::createEditor(QtStringPropertyManager * manager, QtPr
     LineEdit* editor = d_ptr->createEditor(property, parent);
     editor->setEchoMode((EchoMode)manager->echoMode(property));
     editor->setReadOnly(manager->isReadOnly(property));
-    QRegExp regExp = manager->regExp(property);
+    QRegularExpression regExp = manager->regExp(property);
     if (regExp.isValid()) {
-        QValidator* validator = new QRegExpValidator(regExp, editor);
+        QValidator* validator = new QRegularExpressionValidator(QRegularExpression(regExp.pattern()), editor);
         editor->setValidator(validator);
     }
     editor->setText(manager->value(property));
@@ -1158,8 +1160,8 @@ void QtLineEditFactory::disconnectPropertyManager(QtStringPropertyManager * mana
 {
     disconnect(manager, SIGNAL(valueChanged(QtProperty*, const QString&)),
         this, SLOT(slotPropertyChanged(QtProperty*, const QString&)));
-    disconnect(manager, SIGNAL(regExpChanged(QtProperty*, const QRegExp&)),
-        this, SLOT(slotRegExpChanged(QtProperty*, const QRegExp&)));
+    disconnect(manager, SIGNAL(regExpChanged(QtProperty*, const QRegularExpression&)),
+        this, SLOT(slotRegExpChanged(QtProperty*, const QRegularExpression&)));
     disconnect(manager, SIGNAL(echoModeChanged(QtProperty*, int)),
         this, SLOT(slotEchoModeChanged(QtProperty*, int)));
     disconnect(manager, SIGNAL(readOnlyChanged(QtProperty*, bool)),
@@ -1660,7 +1662,7 @@ QtCharEdit::QtCharEdit(QWidget* parent) :
 {
     QHBoxLayout* layout = new QHBoxLayout(this);
     layout->addWidget(m_lineEdit);
-    layout->setMargin(0);
+    //layout->setMargin(0);
     m_lineEdit->installEventFilter(this);
     m_lineEdit->setReadOnly(true);
     m_lineEdit->setFocusProxy(this);
@@ -1725,7 +1727,7 @@ void QtCharEdit::handleKeyEvent(QKeyEvent * e)
     }
 
     const QString text = e->text();
-    if (text.count() != 1)
+    if (text.length() != 1)
         return;
 
     const QChar c = text.at(0);
@@ -1784,7 +1786,7 @@ void QtCharEdit::keyReleaseEvent(QKeyEvent * e)
 void QtCharEdit::paintEvent(QPaintEvent*)
 {
     QStyleOption opt;
-    opt.init(this);
+    opt.initFrom(this);
     QPainter p(this);
     style()->drawPrimitive(QStyle::PE_Widget, &opt, &p, this);
 }
@@ -1980,7 +1982,7 @@ void MultiSelectComboBox::stateChanged(int aState) {
         }
     }
     if (selectedItem.endsWith(" ")) {
-        selectedItem.remove(selectedItem.count() - 1, 1);
+        selectedItem.remove(selectedItem.length() - 1, 1);
     }
 
     setSelectedItems(selectedItem);
@@ -2698,7 +2700,9 @@ void QtColorEditWidget::buttonClicked()
 {
     bool ok = false;
     QRgb oldRgba = m_color.rgba();
-    QRgb newRgba = QColorDialog::getRgba(oldRgba, &ok, this);
+    QColor oldColor(oldRgba);
+    QRgb newRgba =  // QColorDialog::getRgba(oldRgba, &ok, this);
+        QColorDialog::getColor(oldColor, this).rgba();
     if (ok && newRgba != oldRgba) {
         setValue(QColor::fromRgba(newRgba));
         emit valueChanged(m_color);
@@ -2732,7 +2736,7 @@ bool QtColorEditWidget::eventFilter(QObject * obj, QEvent * ev)
 void QtColorEditWidget::paintEvent(QPaintEvent*)
 {
     QStyleOption opt;
-    opt.init(this);
+    opt.initFrom(this);
     QPainter p(this);
     style()->drawPrimitive(QStyle::PE_Widget, &opt, &p, this);
 }
@@ -2949,7 +2953,7 @@ bool QtFontEditWidget::eventFilter(QObject * obj, QEvent * ev)
 void QtFontEditWidget::paintEvent(QPaintEvent*)
 {
     QStyleOption opt;
-    opt.init(this);
+    opt.initFrom(this);
     QPainter p(this);
     style()->drawPrimitive(QStyle::PE_Widget, &opt, &p, this);
 }
diff --git i/src/sw/noc_dev/GUICore/Qtproperty/qteditorfactory.h w/src/sw/noc_dev/GUICore/Qtproperty/qteditorfactory.h
index 2f0daf20c7e..f5ead83a14a 100644
--- i/src/sw/noc_dev/GUICore/Qtproperty/qteditorfactory.h
+++ w/src/sw/noc_dev/GUICore/Qtproperty/qteditorfactory.h
@@ -172,7 +172,7 @@ protected:
 private:
     QtLineEditFactoryPrivate* d_ptr;
     Q_DECLARE_PRIVATE(QtLineEditFactory)Q_DISABLE_COPY(QtLineEditFactory)Q_PRIVATE_SLOT(d_func(), void slotPropertyChanged(QtProperty*, const QString&))
-        Q_PRIVATE_SLOT(d_func(), void slotRegExpChanged(QtProperty*, const QRegExp&))
+            Q_PRIVATE_SLOT(d_func(), void slotRegExpChanged(QtProperty*, const QRegularExpression&))
         Q_PRIVATE_SLOT(d_func(), void slotEchoModeChanged(QtProperty*, int))
         Q_PRIVATE_SLOT(d_func(), void slotReadOnlyChanged(QtProperty*, bool))
         Q_PRIVATE_SLOT(d_func(), void slotSetValue(const QString&))
diff --git i/src/sw/noc_dev/GUICore/Qtproperty/qtpropertybrowser.h w/src/sw/noc_dev/GUICore/Qtproperty/qtpropertybrowser.h
index 1832cb8aa04..dc949c33f39 100644
--- i/src/sw/noc_dev/GUICore/Qtproperty/qtpropertybrowser.h
+++ w/src/sw/noc_dev/GUICore/Qtproperty/qtpropertybrowser.h
@@ -46,6 +46,7 @@
 #include <QKeyEvent>
 #include <QLineEdit>
 #include <QThread>
+#include <QRegExp>
 
 #if QT_VERSION >= 0x040400
 QT_BEGIN_NAMESPACE
diff --git i/src/sw/noc_dev/GUICore/Qtproperty/qtpropertybrowserutils.cpp w/src/sw/noc_dev/GUICore/Qtproperty/qtpropertybrowserutils.cpp
index 65317d1e3bf..6431a08a0b1 100644
--- i/src/sw/noc_dev/GUICore/Qtproperty/qtpropertybrowserutils.cpp
+++ w/src/sw/noc_dev/GUICore/Qtproperty/qtpropertybrowserutils.cpp
@@ -294,7 +294,7 @@ void QtBoolEdit::mousePressEvent(QMouseEvent * event)
 void QtBoolEdit::paintEvent(QPaintEvent*)
 {
     QStyleOption opt;
-    opt.init(this);
+    opt.initFrom(this);
     QPainter p(this);
     style()->drawPrimitive(QStyle::PE_Widget, &opt, &p, this);
 }
@@ -304,7 +304,7 @@ QtKeySequenceEdit::QtKeySequenceEdit(QWidget * parent) :
 {
     QHBoxLayout* layout = new QHBoxLayout(this);
     layout->addWidget(m_lineEdit);
-    layout->setMargin(0);
+    //layout->setMargin(0);
     m_lineEdit->installEventFilter(this);
     m_lineEdit->setReadOnly(true);
     m_lineEdit->setFocusProxy(this);
@@ -361,10 +361,10 @@ void QtKeySequenceEdit::handleKeyEvent(QKeyEvent * e)
         return;
 
     nextKey |= translateModifiers(e->modifiers(), e->text());
-    int k0 = m_keySequence[0];
-    int k1 = m_keySequence[1];
-    int k2 = m_keySequence[2];
-    int k3 = m_keySequence[3];
+    int k0 = m_keySequence[0].toCombined();
+    int k1 = m_keySequence[1].toCombined();
+    int k2 = m_keySequence[2].toCombined();
+    int k3 = m_keySequence[3].toCombined();
     switch (m_num) {
     case 0:
         k0 = nextKey;
@@ -454,7 +454,7 @@ void QtKeySequenceEdit::keyReleaseEvent(QKeyEvent * e)
 void QtKeySequenceEdit::paintEvent(QPaintEvent*)
 {
     QStyleOption opt;
-    opt.init(this);
+    opt.initFrom(this);
     QPainter p(this);
     style()->drawPrimitive(QStyle::PE_Widget, &opt, &p, this);
 }
@@ -471,4 +471,4 @@ bool QtKeySequenceEdit::event(QEvent * e)
 
 #if QT_VERSION >= 0x040400
 QT_END_NAMESPACE
-#endif
\ No newline at end of file
+#endif
diff --git i/src/sw/noc_dev/GUICore/Qtproperty/qtpropertymanager.cpp w/src/sw/noc_dev/GUICore/Qtproperty/qtpropertymanager.cpp
index 7f619985b54..8961659252a 100644
--- i/src/sw/noc_dev/GUICore/Qtproperty/qtpropertymanager.cpp
+++ w/src/sw/noc_dev/GUICore/Qtproperty/qtpropertymanager.cpp
@@ -453,6 +453,22 @@ static QList<QLocale::Country> countriesForLanguage(QLocale::Language language)
     return countries;
 }
 
+#else  // QT 6.7.3
+
+static QList<QLocale::Territory> territoriesForLanguage(QLocale::Language language) {
+    QList<QLocale::Territory> territories;
+    const auto locales = QLocale::matchingLocales(language, QLocale::AnyScript, QLocale::AnyTerritory);
+
+    for (const QLocale& locale : locales) {
+        QLocale::Territory territory = locale.territory();
+        if (!territories.contains(territory)) {  // Avoid duplicates
+            territories.append(territory);
+        }
+    }
+
+    return territories;
+}
+
 #endif
 
 static QList<QLocale::Country> sortCountries(const QList<QLocale::Country> & countries)
@@ -461,7 +477,7 @@ static QList<QLocale::Country> sortCountries(const QList<QLocale::Country> & cou
     QListIterator < QLocale::Country > itCountry(countries);
     while (itCountry.hasNext()) {
         QLocale::Country country = itCountry.next();
-        nameToCountry.insert(QLocale::countryToString(country), country);
+        nameToCountry.insert(QLocale::territoryToString(country), country);
     }
     return nameToCountry.values();
 }
@@ -489,10 +505,10 @@ void QtMetaEnumProvider::initLocale()
 #if QT_VERSION < 0x040300
         countries = countriesForLanguage(language);
 #else
-        countries = QLocale::countriesForLanguage(language);
+        countries = territoriesForLanguage(language);
 #endif
         if (countries.isEmpty() && language == system.language())
-            countries << system.country();
+            countries << system.territory();
 
         if (!countries.isEmpty() && !m_languageToIndex.contains(language)) {
             countries = sortCountries(countries);
@@ -504,7 +520,7 @@ void QtMetaEnumProvider::initLocale()
             int countryIdx = 0;
             while (it.hasNext()) {
                 QLocale::Country country = it.next();
-                countryNames << QLocale::countryToString(country);
+                countryNames << QLocale::territoryToString(country);
                 m_indexToCountry[langIdx][countryIdx] = country;
                 m_countryToIndex[language][country] = countryIdx;
                 ++countryIdx;
@@ -1349,14 +1365,29 @@ public:
 
     struct Data {
         Data() :
-            regExp(QString(QLatin1Char('*')), Qt::CaseSensitive, QRegExp::Wildcard), echoMode(
-                QLineEdit::Normal), readOnly(false)
+        regExp(createWildcardRegExp(QString(QLatin1Char('*')), Qt::CaseSensitive)),
+        echoMode(QLineEdit::Normal), readOnly(false)
         {
         }
+
         QString val;
-        QRegExp regExp;
+        QRegularExpression regExp;
         int echoMode;
         bool readOnly;
+
+        static QRegularExpression createWildcardRegExp(const QString& wildcard, Qt::CaseSensitivity caseSensitivity) {
+            QString regex = QRegularExpression::escape(wildcard);
+            regex.replace("\\*", ".*");
+            regex.replace("\\?", ".");
+            regex = "^" + regex + "$";
+
+            QRegularExpression regExp(regex);
+            if (caseSensitivity == Qt::CaseInsensitive) {
+                regExp.setPatternOptions(QRegularExpression::CaseInsensitiveOption);
+            }
+
+            return regExp;
+        }
     };
 
     typedef QMap<const QtProperty*, Data> PropertyValueMap;
@@ -1443,10 +1474,10 @@ QString QtStringPropertyManager::value(const QtProperty * property) const
 
  \sa setRegExp()
  */
-QRegExp QtStringPropertyManager::regExp(const QtProperty * property) const
+QRegularExpression QtStringPropertyManager::regExp(const QtProperty * property) const
 {
-    return getData<QRegExp>(d_ptr->m_values, &QtStringPropertyManagerPrivate::Data::regExp,
-        property, QRegExp());
+    return getData<QRegularExpression>(d_ptr->m_values, &QtStringPropertyManagerPrivate::Data::regExp,
+                                       property, QRegularExpression());
 }
 
 /*!
@@ -1455,7 +1486,7 @@ QRegExp QtStringPropertyManager::regExp(const QtProperty * property) const
 EchoMode QtStringPropertyManager::echoMode(const QtProperty * property) const
 {
     return (EchoMode)getData<int>(d_ptr->m_values, &QtStringPropertyManagerPrivate::Data::echoMode,
-        property, 0);
+                                  property, 0);
 }
 
 /*!
@@ -1522,7 +1553,7 @@ void QtStringPropertyManager::setValue(QtProperty * property, const QString & va
     if (data.val == val)
         return;
 
-    if (data.regExp.isValid() && !data.regExp.exactMatch(val))
+    if (data.regExp.isValid() && !data.regExp.match(val).hasMatch())
         return;
 
     data.val = val;
@@ -1539,7 +1570,7 @@ void QtStringPropertyManager::setValue(QtProperty * property, const QString & va
 
  \sa regExp(), setValue(), regExpChanged()
  */
-void QtStringPropertyManager::setRegExp(QtProperty * property, const QRegExp & regExp)
+void QtStringPropertyManager::setRegExp(QtProperty * property, const QRegularExpression & regExp)
 {
     const QtStringPropertyManagerPrivate::PropertyValueMap::iterator it = d_ptr->m_values.find(
         property);
@@ -2549,7 +2580,7 @@ void QtLocalePropertyManagerPrivate::slotEnumChanged(QtProperty * property, int
     if (QtProperty * prop = m_languageToProperty.value(property, 0)) {
         const QLocale loc = m_values[prop];
         QLocale::Language newLanguage = loc.language();
-        QLocale::Country newCountry = loc.country();
+        QLocale::Country newCountry = loc.territory();
         metaEnumProvider()->indexToLocale(value, 0, &newLanguage, 0);
         QLocale newLoc(newLanguage, newCountry);
         q_ptr->setValue(prop, newLoc);
@@ -2557,7 +2588,7 @@ void QtLocalePropertyManagerPrivate::slotEnumChanged(QtProperty * property, int
     else if (QtProperty * prop = m_countryToProperty.value(property, 0)) {
         const QLocale loc = m_values[prop];
         QLocale::Language newLanguage = loc.language();
-        QLocale::Country newCountry = loc.country();
+        QLocale::Country newCountry = loc.territory();
         metaEnumProvider()->indexToLocale(
             m_enumPropertyManager->value(m_propertyToLanguage.value(prop)), value, &newLanguage,
             &newCountry);
@@ -2677,7 +2708,7 @@ QString QtLocalePropertyManager::valueText(const QtProperty * property) const
 
     int langIdx = 0;
     int countryIdx = 0;
-    metaEnumProvider()->localeToIndex(loc.language(), loc.country(), &langIdx, &countryIdx);
+    metaEnumProvider()->localeToIndex(loc.language(), loc.territory(), &langIdx, &countryIdx);
     QString str = tr("%1, %2").arg(metaEnumProvider()->languageEnumNames().at(langIdx)).arg(
         metaEnumProvider()->countryEnumNames(loc.language()).at(countryIdx));
     return str;
@@ -2706,7 +2737,7 @@ void QtLocalePropertyManager::setValue(QtProperty * property, const QLocale & va
 
     int langIdx = 0;
     int countryIdx = 0;
-    metaEnumProvider()->localeToIndex(val.language(), val.country(), &langIdx, &countryIdx);
+    metaEnumProvider()->localeToIndex(val.language(), val.territory(), &langIdx, &countryIdx);
     if (loc.language() != val.language()) {
         d_ptr->m_enumPropertyManager->setValue(d_ptr->m_propertyToLanguage.value(property), langIdx);
         d_ptr->m_enumPropertyManager->setEnumNames(d_ptr->m_propertyToCountry.value(property),
@@ -2728,7 +2759,7 @@ void QtLocalePropertyManager::initializeProperty(QtProperty * property)
 
     int langIdx = 0;
     int countryIdx = 0;
-    metaEnumProvider()->localeToIndex(val.language(), val.country(), &langIdx, &countryIdx);
+    metaEnumProvider()->localeToIndex(val.language(), val.territory(), &langIdx, &countryIdx);
 
     QtProperty* languageProp = d_ptr->m_enumPropertyManager->addProperty();
     languageProp->setPropertyName(tr("Language"));
@@ -6288,7 +6319,7 @@ void QtFontPropertyManager::setValue(QtProperty * property, const QFont & val)
         return;
 
     const QFont oldVal = it.value();
-    if (oldVal == val && oldVal.resolve() == val.resolve())
+    if (oldVal == val)  //&& oldVal.resolve() == val.resolve())
         return;
 
     it.value() = val;
diff --git i/src/sw/noc_dev/GUICore/Qtproperty/qtpropertymanager.h w/src/sw/noc_dev/GUICore/Qtproperty/qtpropertymanager.h
index f600567b3bb..4e8aaf9bf86 100644
--- i/src/sw/noc_dev/GUICore/Qtproperty/qtpropertymanager.h
+++ w/src/sw/noc_dev/GUICore/Qtproperty/qtpropertymanager.h
@@ -175,19 +175,19 @@ public:
     ~QtStringPropertyManager();
 
     QString value(const QtProperty* property) const;
-    QRegExp regExp(const QtProperty* property) const;
+    QRegularExpression regExp(const QtProperty* property) const;
     EchoMode echoMode(const QtProperty* property) const;
     bool isReadOnly(const QtProperty* property) const;
 
 public Q_SLOTS:
     void setValue(QtProperty* property, const QString& val);
-    void setRegExp(QtProperty* property, const QRegExp& regExp);
+    void setRegExp(QtProperty* property, const QRegularExpression& regExp);
     void setEchoMode(QtProperty* property, EchoMode echoMode);
     void setReadOnly(QtProperty* property, bool readOnly);
 
 Q_SIGNALS:
     void valueChanged(QtProperty* property, const QString& val);
-    void regExpChanged(QtProperty* property, const QRegExp& regExp);
+    void regExpChanged(QtProperty* property, const QRegularExpression& regExp);
     void echoModeChanged(QtProperty* property, const int);
     void readOnlyChanged(QtProperty* property, bool);
 
diff --git i/src/sw/noc_dev/GUICore/Qtproperty/qttreepropertybrowser.cpp w/src/sw/noc_dev/GUICore/Qtproperty/qttreepropertybrowser.cpp
index 1ab780f5e38..3518ac08efc 100644
--- i/src/sw/noc_dev/GUICore/Qtproperty/qttreepropertybrowser.cpp
+++ w/src/sw/noc_dev/GUICore/Qtproperty/qttreepropertybrowser.cpp
@@ -75,9 +75,9 @@ void QtPropertyEditorView::wheelEvent(QWheelEvent* event)
     {
         if (auto pSlider = QtTreePropertyBrowser::getAbstractFontSlider())
         {
-            if (event->delta() > 0)
+            if (event->angleDelta().y() > 0)
                 pSlider->triggerAction(QAbstractSlider::SliderSingleStepAdd);
-            else if (event->delta() < 0)
+            else if (event->angleDelta().y() < 0)
                 pSlider->triggerAction(QAbstractSlider::SliderSingleStepSub);
         }
         event->accept();
@@ -593,7 +593,7 @@ void QtTreePropertyBrowserPrivate::init(QWidget * parent)
     }
 
     QHBoxLayout* layout = new QHBoxLayout(parent);
-    layout->setMargin(0);
+    //layout->setMargin(0);
     m_treeWidget = new QtPropertyEditorView(parent);
     m_treeWidget->setEditorPrivate(this);
     m_treeWidget->setIconSize(QSize(18, 18));
@@ -720,7 +720,8 @@ void QtTreePropertyBrowserPrivate::propertyInserted(QtBrowserItem * index,
     //printf("itemInserted-%p\n", index);
 
     newItem->setFlags(newItem->flags() | Qt::ItemIsEditable);
-    m_treeWidget->setItemExpanded(newItem, true);
+    //m_treeWidget->setItemExpanded(newItem, true);
+    newItem->setExpanded(true);
 
     updateItem(newItem);
 }
@@ -756,14 +757,14 @@ void QtTreePropertyBrowserPrivate::updateItem(QTreeWidgetItem * item)
     if(property->isEnabled()) {
         for (int col = 0; col < cols; ++col) {
             auto font = item->font(col);
-            QColor color = QColor(Qt::black);
+            //QColor color = QColor(Qt::black);
             if (!defaultVal.isEmpty() && (defaultVal != property->valueText())) {
                 font.setBold(true);
             } else {
                 font.setBold(false);
             }
             item->setFont(col, font);
-            item->setTextColor(col, color);
+            //item->setTextColor(col, color);
         }
     }
 
diff --git i/src/sw/noc_dev/GUICore/Utils/NsFilterWidget.cpp w/src/sw/noc_dev/GUICore/Utils/NsFilterWidget.cpp
index eb5203b5d6b..0a328200636 100644
--- i/src/sw/noc_dev/GUICore/Utils/NsFilterWidget.cpp
+++ w/src/sw/noc_dev/GUICore/Utils/NsFilterWidget.cpp
@@ -27,7 +27,7 @@ NsFilterWidget::NsFilterWidget(QWidget* parent)
     menu->addSeparator();
     m_patternGroup->setExclusive(true);
     QAction* patternAction = menu->addAction("Fixed String");
-    patternAction->setData(QVariant(int(QRegExp::FixedString)));
+    patternAction->setData(QVariant(int(PatternSyntax::FixedString)));
     patternAction->setCheckable(true);
     patternAction->setChecked(true);
     m_patternGroup->addAction(patternAction);
@@ -68,17 +68,17 @@ void NsFilterWidget::setCaseSensitivity(Qt::CaseSensitivity cs)
     m_caseSensitivityAction->setChecked(cs == Qt::CaseSensitive);
 }
 
-static inline QRegExp::PatternSyntax patternSyntaxFromAction(const QAction * a)
+static inline PatternSyntax patternSyntaxFromAction(const QAction * a)
 {
-    return static_cast<QRegExp::PatternSyntax>(a->data().toInt());
+    return static_cast<PatternSyntax>(a->data().toInt());
 }
 
-QRegExp::PatternSyntax NsFilterWidget::patternSyntax() const
+PatternSyntax NsFilterWidget::patternSyntax() const
 {
     return patternSyntaxFromAction(m_patternGroup->checkedAction());
 }
 
-void NsFilterWidget::setPatternSyntax(QRegExp::PatternSyntax s)
+void NsFilterWidget::setPatternSyntax(PatternSyntax s)
 {
     foreach(QAction * a, m_patternGroup->actions()) {
         if (patternSyntaxFromAction(a) == s) {
@@ -86,4 +86,4 @@ void NsFilterWidget::setPatternSyntax(QRegExp::PatternSyntax s)
             break;
         }
     }
-}
\ No newline at end of file
+}
diff --git i/src/sw/noc_dev/GUICore/Utils/NsFilterWidget.h w/src/sw/noc_dev/GUICore/Utils/NsFilterWidget.h
index 6e9c495f692..918f7c25380 100644
--- i/src/sw/noc_dev/GUICore/Utils/NsFilterWidget.h
+++ w/src/sw/noc_dev/GUICore/Utils/NsFilterWidget.h
@@ -2,20 +2,31 @@
 #define NSFILTERWIDGET_H
 
 #include <QLineEdit>
-#include <QRegExp>
+#include <QRegularExpression>
 
 QT_BEGIN_NAMESPACE
 #include <QAction>
 #include <QActionGroup>
 QT_END_NAMESPACE
 
-Q_DECLARE_METATYPE(QRegExp::PatternSyntax)
+// Define a custom PatternSyntax enumeration
+enum class PatternSyntax {
+    RegularExpression,
+    Wildcard,
+    FixedString,
+    RegExp,
+    RegExp2,  // Match legacy QRegExp syntax types
+    WildcardUnix,
+    W3CXmlSchema11
+};
+
+Q_DECLARE_METATYPE(PatternSyntax)
 
 class NsFilterWidget : public QLineEdit
 {
     Q_OBJECT
         Q_PROPERTY(Qt::CaseSensitivity caseSensitivity READ caseSensitivity WRITE setCaseSensitivity)
-        Q_PROPERTY(QRegExp::PatternSyntax patternSyntax READ patternSyntax WRITE setPatternSyntax)
+        Q_PROPERTY(PatternSyntax patternSyntax READ patternSyntax WRITE setPatternSyntax)
 
 public:
     explicit NsFilterWidget(QWidget* parent = nullptr);
@@ -23,8 +34,8 @@ public:
     Qt::CaseSensitivity caseSensitivity() const;
     void setCaseSensitivity(Qt::CaseSensitivity);
 
-    QRegExp::PatternSyntax patternSyntax() const;
-    void setPatternSyntax(QRegExp::PatternSyntax);
+    PatternSyntax patternSyntax() const;
+    void setPatternSyntax(PatternSyntax);
 
 signals:
     void filterChanged();
diff --git i/src/sw/noc_dev/GUICore/Utils/qcustomplot.cpp w/src/sw/noc_dev/GUICore/Utils/qcustomplot.cpp
index b36479eea03..65dbae3b205 100644
--- i/src/sw/noc_dev/GUICore/Utils/qcustomplot.cpp
+++ w/src/sw/noc_dev/GUICore/Utils/qcustomplot.cpp
@@ -3252,7 +3252,7 @@ Qt::Alignment QCPLayoutInset::insetAlignment(int index) const
     else
     {
         qDebug() << Q_FUNC_INFO << "Invalid element index:" << index;
-        return 0;
+        return Qt::AlignLeft;
     }
 }
 
@@ -6466,8 +6466,9 @@ QByteArray QCPAxisPainterPrivate::generateLabelParameterHash() const
     result.append(QByteArray::number(tickLabelRotation));
     result.append(QByteArray::number((int)substituteExponent));
     result.append(QByteArray::number((int)numberMultiplyCross));
-    result.append(tickLabelColor.name() + QByteArray::number(tickLabelColor.alpha(), 16));
-    result.append(tickLabelFont.toString());
+    result.append(tickLabelColor.name().toStdString().c_str());
+    result.append(QByteArray::number(tickLabelColor.alpha(), 16));
+    result.append(tickLabelFont.toString().toStdString().c_str());
     return result;
 }
 
@@ -7588,7 +7589,10 @@ QCPItemAnchor::QCPItemAnchor(QCustomPlot * parentPlot, QCPAbstractItem * parentI
 QCPItemAnchor::~QCPItemAnchor()
 {
     // unregister as parent at children:
-    QList<QCPItemPosition*> currentChildren(mChildren.toList());
+    QList<QCPItemPosition*> currentChildren;
+    for (auto itr = mChildren.begin(); itr != mChildren.end(); ++itr) {
+        currentChildren.push_back(*itr);
+    }
     for (int i = 0; i < currentChildren.size(); ++i)
         currentChildren.at(i)->setParentAnchor(0); // this acts back on this anchor and child removes itself from mChildren
 }
@@ -7696,7 +7700,10 @@ QCPItemPosition::~QCPItemPosition()
     // unregister as parent at children:
     // Note: this is done in ~QCPItemAnchor again, but it's important QCPItemPosition does it itself, because only then
     //       the setParentAnchor(0) call the correct QCPItemPosition::pixelPoint function instead of QCPItemAnchor::pixelPoint
-    QList<QCPItemPosition*> currentChildren(mChildren.toList());
+    QList<QCPItemPosition*> currentChildren;
+    for (auto itr = mChildren.begin(); itr != mChildren.end(); ++itr) {
+        currentChildren.push_back(*itr);
+    }
     for (int i = 0; i < currentChildren.size(); ++i)
         currentChildren.at(i)->setParentAnchor(0); // this acts back on this anchor and child removes itself from mChildren
       // unregister as child in parent:
@@ -10523,7 +10530,7 @@ void QCustomPlot::replot(QCustomPlot::RefreshPriority refreshPriority)
     painter.begin(&mPaintBuffer);
     if (painter.isActive())
     {
-        painter.setRenderHint(QPainter::HighQualityAntialiasing); // to make Antialiasing look good if using the OpenGL graphicssystem
+        //painter.setRenderHint(QPainter::HighQualityAntialiasing); // to make Antialiasing look good if using the OpenGL graphicssystem
         if (mBackgroundBrush.style() != Qt::SolidPattern && mBackgroundBrush.style() != Qt::NoBrush)
             painter.fillRect(mViewport, mBackgroundBrush);
         draw(&painter);
@@ -10751,7 +10758,8 @@ bool QCustomPlot::savePdf(const QString & fileName, bool noCosmeticPen, int widt
     printer.printEngine()->setProperty(QPrintEngine::PPK_DocumentName, pdfTitle);
     QRect oldViewport = viewport();
     setViewport(QRect(0, 0, newWidth, newHeight));
-    printer.setPaperSize(viewport().size(), QPrinter::DevicePixel);
+    //printer.setPaperSize(viewport().size(), QPrinter::DevicePixel);
+    //printer.setPaperSize(QPrinter::A4);
     QCPPainter printpainter;
     if (printpainter.begin(&printer))
     {
@@ -11120,7 +11128,7 @@ void QCustomPlot::wheelEvent(QWheelEvent * event)
     emit mouseWheel(event);
 
     // call event of affected layout element:
-    if (QCPLayoutElement * el = layoutElementAt(event->pos()))
+    if (QCPLayoutElement* el = layoutElementAt(event->position()))
         el->wheelEvent(event);
 
     QWidget::wheelEvent(event);
@@ -11818,7 +11826,7 @@ void QCPColorGradient::updateColorBuffer()
             QMap<double, QColor>::const_iterator it = mColorStops.lowerBound(position);
             if (it == mColorStops.constEnd()) // position is on or after last stop, use color of last stop
             {
-                mColorBuffer[i] = (it - 1).value().rgb();
+                mColorBuffer[i] = std::prev(it).value().rgb();
             }
             else if (it == mColorStops.constBegin()) // position is on or before first stop, use color of first stop
             {
@@ -11827,7 +11835,7 @@ void QCPColorGradient::updateColorBuffer()
             else // position is in between stops (or on an intermediate stop), interpolate color
             {
                 QMap<double, QColor>::const_iterator high = it;
-                QMap<double, QColor>::const_iterator low = it - 1;
+                QMap<double, QColor>::const_iterator low  = std::prev(it);
                 double t = (position - low.key()) / (high.key() - low.key()); // interpolation factor 0..1
                 switch (mColorInterpolation)
                 {
@@ -12834,18 +12842,18 @@ void QCPAxisRect::wheelEvent(QWheelEvent * event)
         {
             double factor;
             //qDebug() << "delta = " << event->delta();
-            double wheelSteps = event->delta() / 120.0; // a single step delta is +/-120 usually
+            double wheelSteps = event->angleDelta().y() / 120.0;  // a single step delta is +/-120 usually
             if (mRangeZoom.testFlag(Qt::Horizontal))
             {
                 factor = pow(mRangeZoomFactorHorz, wheelSteps);
                 if (mRangeZoomHorzAxis.data())
-                    mRangeZoomHorzAxis.data()->scaleRange(factor, mRangeZoomHorzAxis.data()->pixelToCoord(event->pos().x()));
+                    mRangeZoomHorzAxis.data()->scaleRange(factor, mRangeZoomHorzAxis.data()->pixelToCoord(event->position().x()));
             }
             if (mRangeZoom.testFlag(Qt::Vertical) && !mParentPlot->interactions().testFlag(QCP::iNotZoomVertically))
             {
                 factor = pow(mRangeZoomFactorVert, wheelSteps);
                 if (mRangeZoomVertAxis.data())
-                    mRangeZoomVertAxis.data()->scaleRange(factor, mRangeZoomVertAxis.data()->pixelToCoord(event->pos().y()));
+                    mRangeZoomVertAxis.data()->scaleRange(factor, mRangeZoomVertAxis.data()->pixelToCoord(event->position().y()));
             }
             mParentPlot->replot();
         }
@@ -14277,7 +14285,7 @@ void QCPColorScale::setRangeDrag(bool enabled)
     if (enabled)
         mAxisRect.data()->setRangeDrag(QCPAxis::orientation(mType));
     else
-        mAxisRect.data()->setRangeDrag(0);
+        mAxisRect.data()->setRangeDrag(Qt::Orientation(0));
 }
 
 /*!
@@ -14297,7 +14305,7 @@ void QCPColorScale::setRangeZoom(bool enabled)
     if (enabled)
         mAxisRect.data()->setRangeZoom(QCPAxis::orientation(mType));
     else
-        mAxisRect.data()->setRangeZoom(0);
+        mAxisRect.data()->setRangeZoom(Qt::Orientation(0));
 }
 
 /*!
@@ -14799,7 +14807,7 @@ void QCPGraph::setData(const QVector<float> & key, const QVector<float> & value)
     {
         newData.key = key[i];
         newData.value = value[i];
-        mData->insertMulti(newData.key, newData);
+        mData->insert(newData.key, newData);
     }
 }
 
@@ -14827,7 +14835,7 @@ void QCPGraph::setDataValueError(const QVector<double> & key, const QVector<doub
         newData.valueErrorMinus = valueError[i];
         newData.valueErrorPlus = valueError[i];
 #endif
-        mData->insertMulti(key[i], newData);
+        mData->insert(key[i], newData);
     }
 }
 
@@ -14856,7 +14864,7 @@ void QCPGraph::setDataValueError(const QVector<double> & key, const QVector<doub
         newData.valueErrorMinus = valueErrorMinus[i];
         newData.valueErrorPlus = valueErrorPlus[i];
 #endif
-        mData->insertMulti(key[i], newData);
+        mData->insert(key[i], newData);
     }
 }
 
@@ -14884,7 +14892,7 @@ void QCPGraph::setDataKeyError(const QVector<double> & key, const QVector<double
         newData.keyErrorMinus = keyError[i];
         newData.keyErrorPlus = keyError[i];
 #endif
-        mData->insertMulti(key[i], newData);
+        mData->insert(key[i], newData);
     }
 }
 
@@ -14913,7 +14921,7 @@ void QCPGraph::setDataKeyError(const QVector<double> & key, const QVector<double
         newData.keyErrorMinus = keyErrorMinus[i];
         newData.keyErrorPlus = keyErrorPlus[i];
 #endif
-        mData->insertMulti(key[i], newData);
+        mData->insert(key[i], newData);
     }
 }
 
@@ -14944,7 +14952,7 @@ void QCPGraph::setDataBothError(const QVector<double> & key, const QVector<doubl
         newData.valueErrorMinus = valueError[i];
         newData.valueErrorPlus = valueError[i];
 #endif
-        mData->insertMulti(key[i], newData);
+        mData->insert(key[i], newData);
     }
 }
 
@@ -14977,7 +14985,7 @@ void QCPGraph::setDataBothError(const QVector<double> & key, const QVector<doubl
         newData.valueErrorMinus = valueErrorMinus[i];
         newData.valueErrorPlus = valueErrorPlus[i];
 #endif
-        mData->insertMulti(key[i], newData);
+        mData->insert(key[i], newData);
     }
 }
 
@@ -15124,7 +15132,9 @@ void QCPGraph::setAdaptiveSampling(bool enabled)
 */
 void QCPGraph::addData(const QCPDataMap & dataMap)
 {
-    mData->unite(dataMap);
+    for (auto itr = dataMap.cbegin(); itr != dataMap.cend(); ++itr) {
+        mData->insert(itr.key(), itr.value());
+    }
 }
 
 /*! \overload
@@ -15137,7 +15147,7 @@ void QCPGraph::addData(const QCPDataMap & dataMap)
 */
 void QCPGraph::addData(const QCPData & data)
 {
-    mData->insertMulti(data.key, data);
+    mData->insert(data.key, data);
 }
 
 /*! \overload
@@ -15153,7 +15163,7 @@ void QCPGraph::addData(double key, double value)
     QCPData newData;
     newData.key = key;
     newData.value = value;
-    mData->insertMulti(newData.key, newData);
+    mData->insert(newData.key, newData);
 }
 
 /*! \overload
@@ -15172,7 +15182,7 @@ void QCPGraph::addData(const QVector<double> & keys, const QVector<double> & val
     {
         newData.key = keys[i];
         newData.value = values[i];
-        mData->insertMulti(newData.key, newData);
+        mData->insert(newData.key, newData);
     }
 }
 
@@ -15355,7 +15365,7 @@ void QCPGraph::draw(QCPPainter * painter)
     // check data validity if flag set:
 #ifdef QCUSTOMPLOT_CHECK_DATA
     QCPDataMap::const_iterator it;
-    for (it = mData->constBegin(); it != mData->constEnd(); ++it)
+    for (auto it = mData->constBegin(); it != mData->constEnd(); ++it)
     {
         if (QCP::isInvalidData(it.value().key, it.value().value) ||
             QCP::isInvalidData(it.value().keyErrorPlus, it.value().keyErrorMinus) ||
@@ -15923,7 +15933,7 @@ void QCPGraph::getPreparedData(QVector<QCPData> * lineData, QVector<QCPData> * s
         if (lineData)
         {
             QCPDataMap::const_iterator it = lower;
-            QCPDataMap::const_iterator upperEnd = upper + 1;
+            QCPDataMap::const_iterator upperEnd = std::next(upper);
             double minValue = it.value().value;
             double maxValue = it.value().value;
             QCPDataMap::const_iterator currentIntervalFirstPoint = it;
@@ -15954,11 +15964,11 @@ void QCPGraph::getPreparedData(QVector<QCPData> * lineData, QVector<QCPData> * s
                         lineData->append(QCPData(currentIntervalStartKey + keyEpsilon * 0.25, minValue));
                         lineData->append(QCPData(currentIntervalStartKey + keyEpsilon * 0.75, maxValue));
                         if (it.key() > currentIntervalStartKey + keyEpsilon * 2) // new pixel started further away from previous cluster, so make sure the last point of the cluster is at a real data point
-                            lineData->append(QCPData(currentIntervalStartKey + keyEpsilon * 0.8, (it - 1).value().value));
+                            lineData->append(QCPData(currentIntervalStartKey + keyEpsilon * 0.8, std::prev(it).value().value));
                     }
                     else
                         lineData->append(QCPData(currentIntervalFirstPoint.key(), currentIntervalFirstPoint.value().value));
-                    lastIntervalEndKey = (it - 1).value().key;
+                    lastIntervalEndKey = std::prev(it).value().key;
                     minValue = it.value().value;
                     maxValue = it.value().value;
                     currentIntervalFirstPoint = it;
@@ -15986,7 +15996,7 @@ void QCPGraph::getPreparedData(QVector<QCPData> * lineData, QVector<QCPData> * s
             double valueMaxRange = valueAxis->range().upper;
             double valueMinRange = valueAxis->range().lower;
             QCPDataMap::const_iterator it = lower;
-            QCPDataMap::const_iterator upperEnd = upper + 1;
+            QCPDataMap::const_iterator upperEnd = std::next(upper);
             double minValue = it.value().value;
             double maxValue = it.value().value;
             QCPDataMap::const_iterator minValueIt = it;
@@ -16074,7 +16084,7 @@ void QCPGraph::getPreparedData(QVector<QCPData> * lineData, QVector<QCPData> * s
         if (dataVector)
         {
             QCPDataMap::const_iterator it = lower;
-            QCPDataMap::const_iterator upperEnd = upper + 1;
+            QCPDataMap::const_iterator upperEnd = std::next(upper);
             dataVector->reserve(dataCount + 2); // +2 for possible fill end points
             while (it != upperEnd)
             {
@@ -16226,8 +16236,8 @@ void QCPGraph::getVisibleDataBounds(QCPDataMap::const_iterator & lower, QCPDataM
     bool lowoutlier = lbound != mData->constBegin(); // indicates whether there exist points below axis range
     bool highoutlier = ubound != mData->constEnd(); // indicates whether there exist points above axis range
 
-    lower = (lowoutlier ? lbound - 1 : lbound); // data point range that will be actually drawn
-    upper = (highoutlier ? ubound : ubound - 1); // data point range that will be actually drawn
+    lower = (lowoutlier ? std::prev(lbound) : lbound);  // data point range that will be actually drawn
+    upper = (highoutlier ? ubound : std::prev(ubound));  // data point range that will be actually drawn
 }
 
 /*!  \internal
@@ -17126,7 +17136,7 @@ void QCPCurve::setData(const QVector<double> & t, const QVector<double> & key, c
         newData.t = t[i];
         newData.key = key[i];
         newData.value = value[i];
-        mData->insertMulti(newData.t, newData);
+        mData->insert(newData.t, newData);
     }
 }
 
@@ -17146,7 +17156,7 @@ void QCPCurve::setData(const QVector<double> & key, const QVector<double> & valu
         newData.t = i; // no t vector given, so we assign t the index of the key/value pair
         newData.key = key[i];
         newData.value = value[i];
-        mData->insertMulti(newData.t, newData);
+        mData->insert(newData.t, newData);
     }
 }
 
@@ -17180,7 +17190,9 @@ void QCPCurve::setLineStyle(QCPCurve::LineStyle style)
 */
 void QCPCurve::addData(const QCPCurveDataMap & dataMap)
 {
-    mData->unite(dataMap);
+    for (auto itr = dataMap.cbegin(); itr != dataMap.cend(); ++itr) {
+        mData->insert(itr.key(), itr.value());
+    }
 }
 
 /*! \overload
@@ -17189,7 +17201,7 @@ void QCPCurve::addData(const QCPCurveDataMap & dataMap)
 */
 void QCPCurve::addData(const QCPCurveData & data)
 {
-    mData->insertMulti(data.t, data);
+    mData->insert(data.t, data);
 }
 
 /*! \overload
@@ -17202,7 +17214,7 @@ void QCPCurve::addData(double t, double key, double value)
     newData.t = t;
     newData.key = key;
     newData.value = value;
-    mData->insertMulti(newData.t, newData);
+    mData->insert(newData.t, newData);
 }
 
 /*! \overload
@@ -17217,12 +17229,12 @@ void QCPCurve::addData(double key, double value)
 {
     QCPCurveData newData;
     if (!mData->isEmpty())
-        newData.t = (mData->constEnd() - 1).key() + 1;
+        newData.t = std::prev(mData->constEnd()).key() + 1;
     else
         newData.t = 0;
     newData.key = key;
     newData.value = value;
-    mData->insertMulti(newData.t, newData);
+    mData->insert(newData.t, newData);
 }
 
 /*! \overload
@@ -17240,7 +17252,7 @@ void QCPCurve::addData(const QVector<double> & ts, const QVector<double> & keys,
         newData.t = ts[i];
         newData.key = keys[i];
         newData.value = values[i];
-        mData->insertMulti(newData.t, newData);
+        mData->insert(newData.t, newData);
     }
 }
 
@@ -17506,11 +17518,11 @@ void QCPCurve::getCurveData(QVector<QPointF> * lineData) const
         if (currentRegion == 5 || (firstPoint && mBrush.style() != Qt::NoBrush)) // current is in R, add current and last if it wasn't added already
         {
             if (!addedLastAlready) // in case curve just entered R, make sure the last point outside R is also drawn correctly
-                lineData->append(coordsToPixels((it - 1).value().key, (it - 1).value().value)); // add last point to vector
+                lineData->append(coordsToPixels(std::prev(it).value().key, std::prev(it).value().value));  // add last point to vector
             else if (lastRegion != 5) // added last already. If that's the case, we probably added it at optimized position. So go back and make sure it's at original position (else the angle changes under which this segment enters R)
             {
                 if (!firstPoint) // because on firstPoint, currentRegion is 5 and addedLastAlready is true, although there is no last point
-                    lineData->replace(lineData->size() - 1, coordsToPixels((it - 1).value().key, (it - 1).value().value));
+                    lineData->replace(lineData->size() - 1, coordsToPixels(std::prev(it).value().key, std::prev(it).value().value));
             }
             lineData->append(coordsToPixels(it.value().key, it.value().value)); // add current point to vector
             addedLastAlready = true; // so in next iteration, we don't add this point twice
@@ -17529,7 +17541,7 @@ void QCPCurve::getCurveData(QVector<QPointF> * lineData) const
             {
                 // always add last point if not added already, original:
                 if (!addedLastAlready)
-                    lineData->append(coordsToPixels((it - 1).value().key, (it - 1).value().value));
+                    lineData->append(coordsToPixels(std::prev(it).value().key, std::prev(it).value().value));
                 // add current point, original:
                 lineData->append(coordsToPixels(it.value().key, it.value().value));
             }
@@ -17537,7 +17549,7 @@ void QCPCurve::getCurveData(QVector<QPointF> * lineData) const
             {
                 // always add last point if not added already, optimized:
                 if (!addedLastAlready)
-                    lineData->append(outsideCoordsToPixels((it - 1).value().key, (it - 1).value().value, currentRegion, axisRect));
+                    lineData->append(outsideCoordsToPixels(std::prev(it).value().key, std::prev(it).value().value, currentRegion, axisRect));
                 // add current point, optimized:
                 lineData->append(outsideCoordsToPixels(it.value().key, it.value().value, currentRegion, axisRect));
             }
@@ -17552,7 +17564,7 @@ void QCPCurve::getCurveData(QVector<QPointF> * lineData) const
     }
     // If curve ends outside R, we want to add very last point so the fill looks like it should when the curve started inside R:
     if (lastRegion != 5 && mBrush.style() != Qt::NoBrush && !mData->isEmpty())
-        lineData->append(coordsToPixels((mData->constEnd() - 1).value().key, (mData->constEnd() - 1).value().value));
+        lineData->append(coordsToPixels(std::prev(mData->constEnd()).value().key, (std::prev(mData->constEnd()).value().value)));
 }
 
 /*! \internal
@@ -17848,7 +17860,7 @@ void QCPBars::setData(const QVector<double> & key, const QVector<double> & value
     {
         newData.key = key[i];
         newData.value = value[i];
-        mData->insertMulti(newData.key, newData);
+        mData->insert(newData.key, newData);
     }
 }
 
@@ -17924,7 +17936,9 @@ void QCPBars::moveAbove(QCPBars * bars)
 */
 void QCPBars::addData(const QCPBarDataMap & dataMap)
 {
-    mData->unite(dataMap);
+    for (auto itr = dataMap.cbegin(); itr != dataMap.cend(); ++itr) {
+        mData->insert(itr.key(), itr.value());
+    }
 }
 
 /*! \overload
@@ -17933,7 +17947,7 @@ void QCPBars::addData(const QCPBarDataMap & dataMap)
 */
 void QCPBars::addData(const QCPBarData & data)
 {
-    mData->insertMulti(data.key, data);
+    mData->insert(data.key, data);
 }
 
 /*! \overload
@@ -17945,7 +17959,7 @@ void QCPBars::addData(double key, double value)
     QCPBarData newData;
     newData.key = key;
     newData.value = value;
-    mData->insertMulti(newData.key, newData);
+    mData->insert(newData.key, newData);
 }
 
 /*! \overload
@@ -17961,7 +17975,7 @@ void QCPBars::addData(const QVector<double> & keys, const QVector<double> & valu
     {
         newData.key = keys[i];
         newData.value = values[i];
-        mData->insertMulti(newData.key, newData);
+        mData->insert(newData.key, newData);
     }
 }
 
@@ -21404,7 +21418,7 @@ void QCPItemTracer::updatePosition()
             if (mGraph->data()->size() > 1)
             {
                 QCPDataMap::const_iterator first = mGraph->data()->constBegin();
-                QCPDataMap::const_iterator last = mGraph->data()->constEnd() - 1;
+                QCPDataMap::const_iterator last = std::prev(mGraph->data()->constEnd());
                 if (mGraphKey < first.key())
                     position->setCoords(first.key(), first.value().value);
                 else if (mGraphKey > last.key())
@@ -21414,7 +21428,7 @@ void QCPItemTracer::updatePosition()
                     QCPDataMap::const_iterator it = mGraph->data()->lowerBound(mGraphKey);
                     if (it != first) // mGraphKey is somewhere between iterators
                     {
-                        QCPDataMap::const_iterator prevIt = it - 1;
+                        QCPDataMap::const_iterator prevIt = std::prev(it);
                         if (mInterpolating)
                         {
                             // interpolate between iterators around mGraphKey:
diff --git i/src/sw/noc_dev/GUICore/Utils/qcustomplot.h w/src/sw/noc_dev/GUICore/Utils/qcustomplot.h
index 165e18a53e4..fe07087b01f 100644
--- i/src/sw/noc_dev/GUICore/Utils/qcustomplot.h
+++ w/src/sw/noc_dev/GUICore/Utils/qcustomplot.h
@@ -43,6 +43,7 @@
 #include <QStack>
 #include <QCache>
 #include <QMargins>
+#include <QMultiMap>
 #include <qmath.h>
 #include <limits>
 #if QT_VERSION < QT_VERSION_CHECK(5, 0, 0)
@@ -2460,9 +2461,9 @@ Q_DECLARE_TYPEINFO(QCPData, Q_MOVABLE_TYPE);
   This is the container in which QCPGraph holds its data.
   \see QCPData, QCPGraph::setData
 */
-typedef QMap<float, QCPData> QCPDataMap;
-typedef QMapIterator<float, QCPData> QCPDataMapIterator;
-typedef QMutableMapIterator<float, QCPData> QCPDataMutableMapIterator;
+typedef QMultiMap<float, QCPData> QCPDataMap;
+typedef typename QCPDataMap::const_iterator QCPDataMapIterator;
+typedef typename QCPDataMap::iterator QCPDataMutableMapIterator;
 //NETSPD_HACK_QCPDATA typedef QMap<double, QCPData> QCPDataMap;
 //NETSPD_HACK_QCPDATA typedef QMapIterator<double, QCPData> QCPDataMapIterator;
 //NETSPD_HACK_QCPDATA typedef QMutableMapIterator<double, QCPData> QCPDataMutableMapIterator;
diff --git i/src/sw/noc_dev/GUICore/genericconsole.cpp w/src/sw/noc_dev/GUICore/genericconsole.cpp
index 15f9ec474f5..d8e20b2bbf0 100644
--- i/src/sw/noc_dev/GUICore/genericconsole.cpp
+++ w/src/sw/noc_dev/GUICore/genericconsole.cpp
@@ -6,6 +6,7 @@
 #include <QTabWidget>
 #include <QApplication>
 #include <QInputDialog>
+#include <QRegularExpression>
 
 #include "style.h"
 #include "genericconsole.h"
@@ -260,9 +261,8 @@ void MainConsole::onTabIndexChanged(int index)
         this->setFocus();
     } else if (index == NS::WARN) {
         QString tmp;
-        QVectorIterator<QString> iter(warningBuff.buff);
-        while (iter.hasNext()) {
-            tmp.append(iter.next());
+        for (auto itr = warningBuff.buff.begin(); itr != warningBuff.buff.end(); ++itr) {
+            tmp.append(*itr);
         }
         emit printWarning(tmp);
         warningBuff.clear();
@@ -324,7 +324,7 @@ void MainConsole::printOutput(const QString& message)
         return;
     }
 
-    QStringList messageList = QString(message).remove("ns_").split(QRegExp("(?=\\b(ERROR:|ERROR \\[|INTERNAL_ERROR:|WARN:|WARN \\[)\\b)"), QString::SkipEmptyParts);
+    QStringList messageList = QString(message).remove("ns_").split(QRegularExpression("(?=\\b(ERROR:|ERROR \\[|INTERNAL_ERROR:|WARN:|WARN \\[)\\b)"), Qt::SkipEmptyParts);
     for (auto s : messageList) {
         if (isErrorMessage(s) || isInternalErrorMessage(s)) {
             highlightErrorMessage(s);
diff --git i/src/sw/noc_dev/GUICore/genericconsole.h w/src/sw/noc_dev/GUICore/genericconsole.h
index ed7138ff964..994da25bf1d 100644
--- i/src/sw/noc_dev/GUICore/genericconsole.h
+++ w/src/sw/noc_dev/GUICore/genericconsole.h
@@ -266,7 +266,7 @@ inline void MainConsole::handleTabKeys(T* getComp, const char* promptText)
                     cmdList.push_back(cmd);
                 }
 
-                auto longestCmd = std::max_element(cmdList.begin(), cmdList.end(), [](QString left, QString right) { return left.count() < right.count(); });
+                auto longestCmd = std::max_element(cmdList.begin(), cmdList.end(), [](QString left, QString right) { return left.length() < right.length(); });
                 command = promptText + *longestCmd;
                 this->appendPlainText(command);
                 moveCursor(QTextCursor::StartOfLine);
diff --git i/src/sw/noc_dev/GUICore/genericdialog.cpp w/src/sw/noc_dev/GUICore/genericdialog.cpp
index b40fe6d1135..5936f23d027 100644
--- i/src/sw/noc_dev/GUICore/genericdialog.cpp
+++ w/src/sw/noc_dev/GUICore/genericdialog.cpp
@@ -9,7 +9,7 @@
 #include <QHeaderView>
 #include <QScrollArea>
 #include <QApplication>
-#include <QDesktopWidget>
+//#include <QDesktopWidget>
 #include <QProcessEnvironment>
 #include <QTextEdit>
 #include <QDebug>
@@ -30,7 +30,7 @@ LicenseWarningDialog::LicenseWarningDialog(const char* msg, QWidget* parent) : Q
     connect(okButton, SIGNAL(clicked()), this, SLOT(accept()));
 
     QGridLayout* buttonLayout = new QGridLayout;
-    buttonLayout->setMargin(5);
+    //buttonLayout->setMargin(5);
     buttonLayout->addWidget(okButton, 0, 0, Qt::AlignCenter);
     QHBoxLayout* layout = new QHBoxLayout;
     layout->setAlignment(Qt::AlignCenter);
@@ -49,8 +49,8 @@ LicenseWarningDialog::LicenseWarningDialog(const char* msg, QWidget* parent) : Q
     setWindowTitle("License Warning");
     setWindowIcon(QIcon(ICON_NOC_M1));
     resize(200, 50);
-    QRect scr = QApplication::desktop()->screenGeometry();
-    move(scr.center() - rect().center());
+    //QRect scr = QApplication::desktop()->screenGeometry();
+    //move(scr.center() - rect().center());
 }
 
 AboutDialog::AboutDialog(const char* productName, const std::string& licenseTxt, const char* ack, QWidget* parent) : QDialog(parent)
@@ -71,7 +71,7 @@ AboutDialog::AboutDialog(const char* productName, const std::string& licenseTxt,
     licensePath.append("<br>");
     titleText.append(licensePath);
     title->setText(titleText);
-    QStringList license = QString::fromStdString(licenseTxt).split("\n", QString::SkipEmptyParts);
+    QStringList license = QString::fromStdString(licenseTxt).split("\n", Qt::SkipEmptyParts);
     QTableWidget* tableWidget = new QTableWidget(license.count(), 2, this);
     int row = 0;
     QFont font;
@@ -255,9 +255,9 @@ void HelpMenuTreeWidget::wheelEvent(QWheelEvent* event)
     {
         if (auto mSlider = HelpAppDialog::getAbstractFontSlider())
         {
-            if (event->delta() > 0)
+            if (event->angleDelta().y() > 0)
                 mSlider->triggerAction(QAbstractSlider::SliderSingleStepAdd);
-            else if (event->delta() < 0)
+            else if (event->angleDelta().y() < 0)
                 mSlider->triggerAction(QAbstractSlider::SliderSingleStepSub);
         }
         event->accept();
@@ -270,9 +270,9 @@ void NsTextBrowser::wheelEvent(QWheelEvent* event)
 {
     if (event->modifiers().testFlag(Qt::ControlModifier)){
         savePosRatio();
-        if (event->delta() > 0){
+        if (event->angleDelta().y() > 0) {
             zoomIn();
-        } else if (event->delta() < 0){
+        } else if (event->angleDelta().y() < 0) {
             zoomOut();
         }
         updateImage();
@@ -492,7 +492,7 @@ CloseAppDialog::CloseAppDialog(QWidget* parent) : QDialog(parent)
     QGridLayout* buttonLayout = new QGridLayout;
     buttonLayout->addWidget(okButton, 0, 0, Qt::AlignRight);
     buttonLayout->addWidget(cancelButton, 0, 1, Qt::AlignLeft);
-    buttonLayout->setMargin(5);
+    //buttonLayout->setMargin(5);
 
     QVBoxLayout* mainLayout = new QVBoxLayout;
     mainLayout->addLayout(layout);
diff --git i/src/sw/noc_dev/GUICore/genericdialog.h w/src/sw/noc_dev/GUICore/genericdialog.h
index 1a79ea266f5..605dcc3a518 100644
--- i/src/sw/noc_dev/GUICore/genericdialog.h
+++ w/src/sw/noc_dev/GUICore/genericdialog.h
@@ -19,6 +19,7 @@
 #include <QDialogButtonBox>
 #include <QCheckBox>
 #include <QImageReader>
+#include <QRegExp>
 
 #include "global.h"
 #include "NsTypes.h"
@@ -512,7 +513,7 @@ void HelpAppDialog::updateHelpContents(T* guiHelp)
         connect(filterAction, &QAction::triggered, this, [this, guiHelp]() { itemFinderButtonSlot(guiHelp); });
         filterOptions->addAction(filterAction);
     }
-    for (int idx = 0; idx < items.count(); ++idx)  if (items.at(idx)->text(0).endsWith("Commands")) { items.swap(idx, 0); break; }
+    for (int idx = 0; idx < items.count(); ++idx)  if (items.at(idx)->text(0).endsWith("Commands")) { items.swapItemsAt(idx, 0); break; }
     tree->addTopLevelItems(items);
     tree->expandAll();
 }
@@ -625,7 +626,7 @@ void HelpAppDialog::itemFinderButtonSlot(T* guiHelp)
                         auto child = addTreeChild(parentNode, lineName, lineValue,
                                                   QString::fromStdString(line.html_help));
                         if (headerMatches && !itemFinderText.isEmpty()) {
-                            child->setBackgroundColor(0, QColor("#ffdab3"));
+                            child->setBackground(0, QColor("#ffdab3"));
                         }
                     }
                 }
@@ -641,7 +642,7 @@ void HelpAppDialog::itemFinderButtonSlot(T* guiHelp)
             if (headerMatches || valueMatches) {               
                 auto child = addTreeChild(treeRoot, lineName, lineValue, QString::fromStdString(line.html_help));
                 if (headerMatches && !itemFinderText.isEmpty()) {
-                    child->setBackgroundColor(0, QColor("#ffdab3"));
+                    child->setBackground(0, QColor("#ffdab3"));
                 }
             }
         }
@@ -674,7 +675,7 @@ void HelpAppDialog::itemFinderButtonSlot(T* guiHelp)
         });
     }
 
-    for (int idx = 0; idx < items.count(); ++idx)  if (items.at(idx)->text(0).endsWith("Commands")) { items.swap(idx, 0); break; }
+    for (int idx = 0; idx < items.count(); ++idx)  if (items.at(idx)->text(0).endsWith("Commands")) { items.swapItemsAt(idx, 0); break; }
     tree->addTopLevelItems(items);
     tree->expandAll();
     setUpdatesEnabled(true);
diff --git i/src/sw/noc_dev/GUICore/propertytab.cpp w/src/sw/noc_dev/GUICore/propertytab.cpp
index 3721655d889..e8f848cba28 100644
--- i/src/sw/noc_dev/GUICore/propertytab.cpp
+++ w/src/sw/noc_dev/GUICore/propertytab.cpp
@@ -20,7 +20,7 @@ void LazyLoader::clearData()
 void LazyLoader::wheelEvent(QWheelEvent* event)
 {
     // wheel down
-    if (event->delta() < 0) if (canLoadMore()) loadMore();
+    if (event->angleDelta().y() < 0) if (canLoadMore()) loadMore();
     QtTreePropertyBrowser::wheelEvent(event);
 }
 
diff --git i/src/sw/noc_dev/GUICore/propertytab.h w/src/sw/noc_dev/GUICore/propertytab.h
index 1e7fc3596d4..046df7395a3 100644
--- i/src/sw/noc_dev/GUICore/propertytab.h
+++ w/src/sw/noc_dev/GUICore/propertytab.h
@@ -116,8 +116,12 @@ public:
             addPropertyToBrowser(defaultPropertyEditor, i.value());
             ++i;
         }
-        auto keys = cateProp.keys().toVector().toStdVector();
-        setBoldProperty(defaultPropertyEditor, keys);
+        auto keys = cateProp.keys();
+        std::vector<QString> keys_vector;
+        for (auto itr = keys.begin(); itr != keys.end(); ++itr) {
+            keys_vector.push_back(*itr);
+        }
+        setBoldProperty(defaultPropertyEditor, keys_vector);
 
         // Add Property Items
         QtProperty* propertyItem = nullptr;
diff --git i/src/sw/noc_dev/IPCore/include/ProfileTM.h w/src/sw/noc_dev/IPCore/include/ProfileTM.h
index 79d08bf5192..3286f7ab0cb 100644
--- i/src/sw/noc_dev/IPCore/include/ProfileTM.h
+++ w/src/sw/noc_dev/IPCore/include/ProfileTM.h
@@ -34,6 +34,7 @@
 #include <string>
 #include <string.h>
 #include <iostream>
+#include <cstdint>
 
 namespace NetSpeed {
 //! @brief Basic design specification, a simple specification of the assemblies needed to configure
@@ -114,4 +115,4 @@ private:
 #define PROFILE_FUN_MEM PROFILE_MEM(__FUNCTION__)
 
 }  // namespace BDS
-}  // end namespace NetSpeed
\ No newline at end of file
+}  // end namespace NetSpeed
diff --git i/src/sw/noc_dev/IPStudio/CMakeLists.txt w/src/sw/noc_dev/IPStudio/CMakeLists.txt
index f16b0def465..0dfbbc529df 100755
--- i/src/sw/noc_dev/IPStudio/CMakeLists.txt
+++ w/src/sw/noc_dev/IPStudio/CMakeLists.txt
@@ -4,7 +4,12 @@ set(CMAKE_AUTORCC ON)
 set(CMAKE_AUTOUIC ON)
 set(CMAKE_PREFIX_PATH /usr/intel/pkgs/libqt/5.11.2/)
 
-find_package(Qt5 COMPONENTS Core Gui Widgets PrintSupport REQUIRED)
+
+if (NS_USE_QT6)
+  find_package(Qt6 COMPONENTS Core Gui Widgets PrintSupport REQUIRED)
+else()
+  find_package(Qt5 COMPONENTS Core Gui Widgets PrintSupport REQUIRED)
+endif()
 
 # prototype/
 file(GLOB ipgui_sources RELATIVE ${CMAKE_CURRENT_SOURCE_DIR}
@@ -23,4 +28,9 @@ list(FILTER ipgui_sources EXCLUDE REGEX "^qrc_.*[.]cpp")
 # setup executable target for NS-GUI
 add_executable(IPStudio ${ipgui_sources})
 target_include_directories(IPStudio PRIVATE ${ipgui_includes} ${CMAKE_BINARY_DIR})
-target_link_libraries(IPStudio PUBLIC noc_infra noc_core noc_config_ip ipcore tclvfs Qt5::Core Qt5::Gui Qt5::Widgets Qt5::PrintSupport pthread dl GUICore pugixml)
+
+if (NS_USE_QT6)
+  target_link_libraries(IPStudio PUBLIC noc_infra noc_core noc_config_ip ipcore tclvfs Qt6::Core Qt6::Gui Qt6::Widgets Qt6::PrintSupport pthread dl GUICore)
+else()
+  target_link_libraries(IPStudio PUBLIC noc_infra noc_core noc_config_ip ipcore tclvfs Qt5::Core Qt5::Gui Qt5::Widgets Qt5::PrintSupport pthread dl GUICore)
+endif()
diff --git i/src/sw/noc_dev/IPStudio/IPStudio.vcxproj w/src/sw/noc_dev/IPStudio/IPStudio.vcxproj
index 6ed27672e82..93718b7049b 100644
--- i/src/sw/noc_dev/IPStudio/IPStudio.vcxproj
+++ w/src/sw/noc_dev/IPStudio/IPStudio.vcxproj
@@ -94,11 +94,11 @@
     <LinkIncremental>false</LinkIncremental>
   </PropertyGroup>
   <PropertyGroup Label="QtSettings" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
-    <QtInstall>Qt5.11.1</QtInstall>
+    <QtInstall>6.7.2_msvc2017_64</QtInstall>
     <QtModules>core;gui;svg;widgets;printsupport</QtModules>
   </PropertyGroup>
   <PropertyGroup Label="QtSettings" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
-    <QtInstall>Qt5.11.1</QtInstall>
+    <QtInstall>6.7.2_msvc2017_64</QtInstall>
     <QtModules>core;gui;svg;widgets;printsupport</QtModules>
   </PropertyGroup>
   <ImportGroup Condition="Exists('$(QtMsBuild)\qt.props')">
@@ -187,7 +187,7 @@
       <EnableCOMDATFolding>true</EnableCOMDATFolding>
       <OptimizeReferences>true</OptimizeReferences>
       <GenerateDebugInformation>true</GenerateDebugInformation>
-      <AdditionalLibraryDirectories>C:\Qt\Qt5.11.1\5.11.1\msvc2017_64\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <AdditionalLibraryDirectories>C:\Qt6\6.7.2\msvc2022_64\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <AdditionalOptions>/ignore:4099 %(AdditionalOptions)</AdditionalOptions>
     </Link>
     <ResourceCompile>
diff --git i/src/sw/noc_dev/Infra/include/G.h w/src/sw/noc_dev/Infra/include/G.h
index 155817de95c..6b4d0d3084f 100644
--- i/src/sw/noc_dev/Infra/include/G.h
+++ w/src/sw/noc_dev/Infra/include/G.h
@@ -1525,7 +1525,7 @@ bool is_member(const C& c, const K& k) {
         if (c.empty()) return false;
         return c.find(k) != end(c);
     } else {
-        return std::find(begin(c),end(c),k) != end(c);
+        return std::find(std::cbegin(c), std::cend(c), k) != std::cend(c);
     }
 }
 
diff --git i/src/sw/noc_dev/Infra/include/Property_impl.h w/src/sw/noc_dev/Infra/include/Property_impl.h
index 445cca20374..3ac1ffd8f6a 100644
--- i/src/sw/noc_dev/Infra/include/Property_impl.h
+++ w/src/sw/noc_dev/Infra/include/Property_impl.h
@@ -123,13 +123,13 @@ struct ObjProperty : ObjProperty_base<OBJECT> {
                 std::function<std::string(const OBJECT*)> gf,
                 std::string lh, eco_t es, prop_cat_t cat,
                 std::function<allowed_t(const OBJECT*)> ga)
-    : ObjProperty_base<OBJECT>(help_description_t{c, a, d, lh, cat.groups, ""}, cat.cat, es, allowed_t(), ga),
+    : ObjProperty_base<OBJECT>(NetSpeed::help_description_t{c, a, d, lh, cat.groups, ""}, cat.cat, es, allowed_t(), ga),
       set_func(sf), get_func(gf) {}
     ObjProperty(std::string c, std::string a, std::string d,
                 std::function<bool(OBJECT*, const std::string& val)> sf,
                 std::function<std::string(const OBJECT*)> gf, std::string lh, eco_t es,
                 prop_cat_t cat, const allowed_t& av)
-    : ObjProperty_base<OBJECT>(help_description_t{c, a, d, lh, cat.groups, ""}, cat.cat, es, av),
+    : ObjProperty_base<OBJECT>(NetSpeed::help_description_t{c, a, d, lh, cat.groups, ""}, cat.cat, es, av),
       set_func(sf), get_func(gf) {}
 
     std::function<bool(OBJECT*, const std::string& val)> set_func; //! the setter function
@@ -146,7 +146,7 @@ struct DummyProperty : ObjProperty_base<OBJECT> {
     allowed_t get_allowed(const OBJECT* o) const override { _unused(o); return allowed_t(); }
     DummyProperty(std::string c, std::string a, std::string d, std::string lh, eco_t es, prop_cat_t cat,
                   std::function<allowed_t(const OBJECT*)> ga = std::function<allowed_t(const OBJECT*)>())
-    : ObjProperty_base<OBJECT>(help_description_t{c, a, d, lh}, cat, es, allowed_t(), ga) {}
+    : ObjProperty_base<OBJECT>(NetSpeed::help_description_t{c, a, d, lh, cat.groups, ""}, cat.cat, es, allowed_t(), ga) {}
 };
 
 //! base class for typed actions on an object
@@ -293,17 +293,17 @@ public:
               std::function<bool(OBJECT*, T val)> set_func, std::function<T(const OBJECT*)> get_func,
               T* default_value, std::function<bool(OBJECT*, T val)> check_func,
               std::function<optional<T>(std::string_view)> parse, std::function<std::string(T)> unparse)
-    : ObjProperty_base<OBJECT>(help_description_t{name, arg, desc, long_help, category.groups, ""},
+    : ObjProperty_base<OBJECT>(NetSpeed::help_description_t{name, arg, desc, long_help, category.groups, ""},
                                category.cat, eco_settable, allowed_t(), get_allowed),
       default_value(default_value), acts(std::make_unique<F_pack<OBJECT,T>>(set_func, get_func, check_func)) {}
 
-    TProperty(help_description_t help, std::string category, eco_t eco_settable, T* default_value,
+    TProperty(NetSpeed::help_description_t help, std::string category, eco_t eco_settable, T* default_value,
               std::function<allowed_t(const OBJECT*)> get_allowed,
               std::unique_ptr<T_action_pack<OBJECT, T>> ap)
     : ObjProperty_base<OBJECT>(std::move(help), category, eco_settable, allowed_t(), get_allowed),
       default_value(default_value), acts(std::move(ap)) {}
 
-    TProperty(help_description_t help, std::string category, eco_t eco_settable, T* default_value,
+    TProperty(NetSpeed::help_description_t help, std::string category, eco_t eco_settable, T* default_value,
               std::unique_ptr<T_action_pack<OBJECT, T>> ap)
     : ObjProperty_base<OBJECT>(std::move(help), category, eco_settable, allowed_t(), {}),
       default_value(default_value), acts(std::move(ap)) {}
@@ -313,7 +313,7 @@ public:
               std::function<bool(OBJECT*, T val)> set_func, std::function<T(const OBJECT*)> get_func,
               T* default_value, std::string long_help, eco_t eco_settable, prop_cat_t category,
               std::function<allowed_t(const OBJECT*)> get_allowed, std::function<bool(OBJECT*, T val)> check_func)
-    : ObjProperty_base<OBJECT>(help_description_t{name, arg, desc, long_help, category.groups, ""},
+    : ObjProperty_base<OBJECT>(NetSpeed::help_description_t{name, arg, desc, long_help, category.groups, ""},
                                category.cat, eco_settable, allowed_t(), get_allowed),
       default_value(default_value), acts(std::make_unique<F_pack<OBJECT,T>>(set_func, get_func, check_func)) {}
 
@@ -322,7 +322,7 @@ public:
               std::function<bool(OBJECT*, T val)> set_func, std::function<T(const OBJECT*)> get_func,
               T* default_value, std::string long_help, eco_t eco_settable, prop_cat_t category,
               allowed_t allowed, std::function<bool(OBJECT*, T val)> check_func)
-    : ObjProperty_base<OBJECT>(help_description_t{name, arg, desc, long_help, category.groups, ""},
+    : ObjProperty_base<OBJECT>(NetSpeed::help_description_t{name, arg, desc, long_help, category.groups, ""},
                                category.cat, eco_settable, std::move(allowed), {}),
       default_value(default_value), acts(std::make_unique<F_pack<OBJECT,T>>(set_func, get_func, check_func)) {}
 
@@ -330,7 +330,7 @@ public:
     TProperty(std::string name, std::string arg, std::string desc, std::string long_help,
               eco_t eco_settable, prop_cat_t category, T OBJECT::*ptr_member_var,
               std::function<allowed_t(const OBJECT*)> get_allowed, T* default_value = nullptr)
-    : ObjProperty_base<OBJECT>(help_description_t{name, arg, desc, long_help, category.groups, ""},
+    : ObjProperty_base<OBJECT>(NetSpeed::help_description_t{name, arg, desc, long_help, category.groups, ""},
                                category.cat, eco_settable, allowed_t(), get_allowed),
       default_value(default_value), acts(std::make_unique<Pmv_pack<OBJECT, T>>(ptr_member_var)) {}
 
@@ -338,7 +338,7 @@ public:
     TProperty(std::string name, std::string arg, std::string desc, T OBJECT::*pmv, T* default_value,
               std::string long_help, eco_t eco_settable, prop_cat_t category,
               std::function<allowed_t(const OBJECT*)> get_allowed, Check_f<OBJECT,T> check_func)
-    : ObjProperty_base<OBJECT>(help_description_t{name, arg, desc, long_help, category.groups, ""},
+    : ObjProperty_base<OBJECT>(NetSpeed::help_description_t{name, arg, desc, long_help, category.groups, ""},
                                category.cat, eco_settable, allowed_t(), get_allowed),
       default_value(default_value), acts(std::make_unique<Pmv_pack<OBJECT,T>>(pmv, check_func)) {}
 
@@ -347,7 +347,7 @@ public:
               std::function<T(const OBJECT*)> get_func, T& default_value, std::string long_help,
               eco_t eco_settable, prop_cat_t category, std::function<allowed_t(const OBJECT*)> get_allowed,
               std::function<bool(OBJECT*, T val)> check_func)
-    : ObjProperty_base<OBJECT>(help_description_t{name, arg, desc, long_help, category.groups, ""},
+    : ObjProperty_base<OBJECT>(NetSpeed::help_description_t{name, arg, desc, long_help, category.groups, ""},
                                category.cat, eco_settable,
                                allowed_t(), get_allowed),
       default_value(&default_value), acts(std::make_unique<Opmv_pack<OBJECT,T>>(pmv, get_func, check_func)) {}
@@ -356,7 +356,7 @@ public:
               eco_t eco_settable, prop_cat_t category, std::function<allowed_t(const OBJECT*)> get_allowed,
               std::function<bool(OBJECT*, T val)> set_func, std::function<T(const OBJECT*)> get_func,
               T* default_value)
-    : ObjProperty_base<OBJECT>(help_description_t{name, arg, desc, long_help, category.groups, ""},
+    : ObjProperty_base<OBJECT>(NetSpeed::help_description_t{name, arg, desc, long_help, category.groups, ""},
                                category.cat, eco_settable, allowed_t(), get_allowed),
       default_value(default_value), acts(std::make_unique<F_pack<OBJECT,T>>(set_func, get_func, set_func)) {}
 
@@ -394,14 +394,14 @@ struct StringProperty : ObjProperty_base<OBJECT> {
                    bool (OBJECT::*sf)(const std::string& val), std::string (OBJECT::*gf)() const,
                    std::string* def, std::string lh, eco_t es, prop_cat_t cat,
                    std::function<allowed_t(const OBJECT*)> ga = std::function<allowed_t(const OBJECT*)>())
-    : ObjProperty_base<OBJECT>(help_description_t{c, a, d, lh, cat.groups, ""}, cat.cat, es, allowed_t(), ga),
+    : ObjProperty_base<OBJECT>(NetSpeed::help_description_t{c, a, d, lh, cat.groups, ""}, cat.cat, es, allowed_t(), ga),
       set_func(sf), get_func(gf), default_value(def) {}
     StringProperty(std::string c, std::string a, std::string d,
                    std::function<bool(OBJECT*, const std::string&)> sf,
                    std::function<std::string(const OBJECT*)> gf, std::string* def, std::string lh,
                    eco_t es, prop_cat_t cat,
                    std::function<allowed_t(const OBJECT*)> ga = std::function<allowed_t(const OBJECT*)>())
-    : ObjProperty_base<OBJECT>(help_description_t{c, a, d, lh, cat.groups, ""}, cat.cat, es, allowed_t(), ga),
+    : ObjProperty_base<OBJECT>(NetSpeed::help_description_t{c, a, d, lh, cat.groups, ""}, cat.cat, es, allowed_t(), ga),
       set_func(sf), get_func(gf), default_value(def) {}
 
     std::function<bool(OBJECT*, const std::string&)> set_func; //! the setter function 
@@ -446,13 +446,13 @@ struct CustProperty : ObjProperty_base<OBJECT> {
                  prop_cat_t cat, std::function<bool(OBJECT*, const std::string& val)> sf,
                  std::function<std::string(const OBJECT*)> gf, T* def,
                  std::function<allowed_t(const OBJECT*)> ga = std::function<allowed_t(const OBJECT*)>())
-    : ObjProperty_base<OBJECT>(help_description_t{c, a, d, lh, cat.groups, ""}, cat.cat, es, allowed_t(), ga),
+    : ObjProperty_base<OBJECT>(NetSpeed::help_description_t{c, a, d, lh, cat.groups, ""}, cat.cat, es, allowed_t(), ga),
       set_func(std::move(sf)), get_func(std::move(gf)), default_value(def) {}
     // old argument order; TODO(remove)
     CustProperty(std::string c, std::string a, std::string d, bool (OBJECT::*sf)(const std::string& val),
                  std::string (OBJECT::*gf)() const, T* def, std::string lh, eco_t es, prop_cat_t cat,
                  std::function<allowed_t(const OBJECT*)> ga = std::function<allowed_t(const OBJECT*)>())
-    : ObjProperty_base<OBJECT>(help_description_t{c, a, d, lh, cat.groups, ""}, cat.cat, es, allowed_t(), ga),
+    : ObjProperty_base<OBJECT>(NetSpeed::help_description_t{c, a, d, lh, cat.groups, ""}, cat.cat, es, allowed_t(), ga),
       set_func(mem_fn(sf)), get_func(mem_fn(gf)), default_value(def) {}
 
     std::function<bool(OBJECT*, std::string val)> set_func; //! un-typed setter
@@ -484,7 +484,7 @@ struct CustPropertyNoDefault : ObjProperty_base<OBJECT> {
                  std::string(OBJECT::*gf)() const, std::string lh,
                  eco_t es, prop_cat_t cat,
                  std::function<allowed_t(const OBJECT*)> ga = std::function<allowed_t(const OBJECT*)>())
-    : ObjProperty_base<OBJECT>(help_description_t{c, a, d, lh, cat.groups, ""}, cat.cat, es, allowed_t(), ga),
+    : ObjProperty_base<OBJECT>(NetSpeed::help_description_t{c, a, d, lh, cat.groups, ""}, cat.cat, es, allowed_t(), ga),
       set_func(mem_fn(sf)), get_func(mem_fn(gf)) {}
 
     std::function<bool(OBJECT*, std::string val)> set_func; //! un-typed setter
@@ -573,20 +573,20 @@ struct IntProperty : ObjProperty_base<OBJECT> {
     IntProperty(std::string c, std::string a, int minv, int maxv, std::string d, bool (OBJECT::*sf)(int val),
                 int (OBJECT::*gf)() const, int& def, std::string lh, eco_t es, prop_cat_t cat,
                 std::function<allowed_t(const OBJECT*)> ga = std::function<allowed_t(const OBJECT*)>())
-    : ObjProperty_base<OBJECT>(help_description_t{c, a, d, lh, cat.groups, ""}, cat.cat, es,
+    : ObjProperty_base<OBJECT>(NetSpeed::help_description_t{c, a, d, lh, cat.groups, ""}, cat.cat, es,
                                allowed_t(minv, maxv), ga),
       set_func(std::mem_fn(sf)), get_func(std::mem_fn(gf)), default_value(&def) {}
     IntProperty(std::string c, std::string a, int minv, int maxv, std::string d,
                 std::function<bool(OBJECT*, int val)> sf, std::function<int(const OBJECT*)> gf,
                 int* def, std::string lh, eco_t es, prop_cat_t cat,
                 std::function<allowed_t(const OBJECT*)> ga = std::function<allowed_t(const OBJECT*)>())
-    : ObjProperty_base<OBJECT>(help_description_t{c, a, d, lh, cat.groups, ""}, cat.cat, es,
+    : ObjProperty_base<OBJECT>(NetSpeed::help_description_t{c, a, d, lh, cat.groups, ""}, cat.cat, es,
                                allowed_t(minv, maxv), ga),
       set_func(sf), get_func(gf), default_value(def) {}
     IntProperty(std::string c, std::string a, allowed_t at, std::string d,
                 std::function<bool(OBJECT*, int val)> sf, std::function<int(const OBJECT*)> gf,
                 int* def, std::string lh, eco_t es, prop_cat_t cat)
-    : ObjProperty_base<OBJECT>(help_description_t{c, a, d, lh, cat.groups, ""}, cat.cat, es, at,
+    : ObjProperty_base<OBJECT>(NetSpeed::help_description_t{c, a, d, lh, cat.groups, ""}, cat.cat, es, at,
                                std::function<allowed_t(const OBJECT*)>()),
       set_func(sf), get_func(gf), default_value(def) {}
 
@@ -655,13 +655,13 @@ struct BoolProperty : ObjProperty_base<OBJECT> {
 
     BoolProperty(std::string c, std::string d, bool (OBJECT::*sf)(bool val),
                  bool (OBJECT::*gf)() const, bool* def, std::string lh, eco_t es, prop_cat_t cat)
-    : ObjProperty_base<OBJECT>(help_description_t{c, "yes/no", d, lh, cat.groups, ""}, cat.cat, es,
+    : ObjProperty_base<OBJECT>(NetSpeed::help_description_t{c, "yes/no", d, lh, cat.groups, ""}, cat.cat, es,
                                allowed_t(allowed_cat::yes_no)),
       set_func(std::mem_fn(sf)), get_func(std::mem_fn(gf)),
             default_value(def) {}
     BoolProperty(std::string c, std::string d, std::function<bool(OBJECT*,bool val)> sf,
         std::function<bool(const OBJECT*)> gf, bool* def, std::string lh, eco_t es, prop_cat_t cat)
-    : ObjProperty_base<OBJECT>(help_description_t{c, "yes/no", d, lh, cat.groups, ""}, cat.cat, es,
+    : ObjProperty_base<OBJECT>(NetSpeed::help_description_t{c, "yes/no", d, lh, cat.groups, ""}, cat.cat, es,
                                allowed_t(allowed_cat::yes_no)),
       set_func(sf), get_func(gf),
         default_value(def) {}
@@ -705,7 +705,7 @@ struct RateProperty : ObjProperty_base<OBJECT> {
 
     RateProperty(std::string c, std::string a, std::string d, bool (OBJECT::*sf)(RATE_T val),
                  RATE_T (OBJECT::*gf)() const, RATE_T& def, std::string lh, eco_t es, prop_cat_t cat)
-    : ObjProperty_base<OBJECT>(help_description_t{c, a, d, lh, cat.groups, ""}, cat.cat, es,
+    : ObjProperty_base<OBJECT>(NetSpeed::help_description_t{c, a, d, lh, cat.groups, ""}, cat.cat, es,
                                allowed_t(0.0, 1.0)),
       set_func(sf), get_func(gf), default_value(&def) {}
 
@@ -749,7 +749,7 @@ struct DoubleProperty : ObjProperty_base<OBJECT> {
                    bool (OBJECT::*sf)(double val), double (OBJECT::*gf)() const, double& def,
                    std::string lh, eco_t es, prop_cat_t cat,
                    std::function<allowed_t(const OBJECT*)> ga = std::function<allowed_t(const OBJECT*)>())
-    : ObjProperty_base<OBJECT>(help_description_t{c, a, d, lh, cat.groups, ""}, cat.cat, es,
+    : ObjProperty_base<OBJECT>(NetSpeed::help_description_t{c, a, d, lh, cat.groups, ""}, cat.cat, es,
                                allowed_t(mn_v, mx_v), ga),
       set_func(std::mem_fn(sf)), get_func(std::mem_fn(gf)), default_value(&def) {}
 
@@ -757,7 +757,7 @@ struct DoubleProperty : ObjProperty_base<OBJECT> {
                    std::function<bool(OBJECT*, double val)> sf, std::function<double(const OBJECT*)> gf,
                    double* def, std::string lh, eco_t es, prop_cat_t cat,
                    std::function<allowed_t(const OBJECT*)> ga = std::function<allowed_t(const OBJECT*)>())
-    : ObjProperty_base<OBJECT>(help_description_t{c, a, d, lh, cat.groups, ""}, cat.cat, es,
+    : ObjProperty_base<OBJECT>(NetSpeed::help_description_t{c, a, d, lh, cat.groups, ""}, cat.cat, es,
                                allowed_t(mn_v, mx_v), ga),
       set_func(sf), get_func(gf), default_value(def) {}
 
@@ -772,7 +772,7 @@ struct CustDefault final : PropDefault {
                 T& v, prop_cat_t cat, std::string exp,
                 std::function<std::string(T)> to_str,
                  std::function<optional<T>(const std::string&)> of_str)
-    : PropDefault(help_description_t{n, a, d, lh, cat.groups, ""}, cat.cat, allowed_t()), var(&v),
+    : PropDefault(NetSpeed::help_description_t{n, a, d, lh, cat.groups, ""}, cat.cat, allowed_t()), var(&v),
       to_str(to_str), of_str(of_str), explanation(exp) {}
     std::string get_default() const override { return to_str(*var); }
     bool set_default(std::string s, bool is_default_settable, optional<std::string> default_is_modifiable) override {
@@ -805,7 +805,7 @@ private:
 struct BoolDefault : public PropDefault {
 public:
     BoolDefault(std::string n, std::string d, std::string lh, bool& b, prop_cat_t cat)
-    : PropDefault(help_description_t{n, "yes/no", d, lh, cat.groups, ""}, cat.cat,
+    : PropDefault(NetSpeed::help_description_t{n, "yes/no", d, lh, cat.groups, ""}, cat.cat,
                   allowed_t(allowed_cat::yes_no)),
       var(&b) {}
     std::string get_default() const override { return stringify_b(*var); }
@@ -833,7 +833,7 @@ private:
 struct IntDefault : public PropDefault {
 public:
     IntDefault(std::string n, std::string a, std::string d, std::string lh, int& v, prop_cat_t cat, allowed_t av)
-    : PropDefault(help_description_t{n, a, d, lh, cat.groups, ""}, cat.cat, av), var(&v) {}
+    : PropDefault(NetSpeed::help_description_t{n, a, d, lh, cat.groups, ""}, cat.cat, av), var(&v) {}
     std::string get_default() const override { return stringify(*var); }
     bool set_default(std::string s, bool is_default_settable, optional<std::string> default_is_modifiable) override {
         if (!is_int(s)) {
@@ -862,7 +862,7 @@ private:
 struct FloatDefault : public PropDefault {
 public:
     FloatDefault(std::string n, std::string a, std::string d, std::string lh, double& v, prop_cat_t cat, allowed_t av)
-    : PropDefault(help_description_t{n, a, d, lh, cat.groups, ""}, cat.cat, av), var(&v) {}
+    : PropDefault(NetSpeed::help_description_t{n, a, d, lh, cat.groups, ""}, cat.cat, av), var(&v) {}
     std::string get_default() const override { return stringify_f(*var); }
     bool set_default(std::string s, bool is_default_settable, optional<std::string> default_is_modifiable) override {
         const optional<double> value = parse<double>(s);
@@ -892,7 +892,7 @@ struct StringEmptyDefault : public PropDefault {
 public:
     StringEmptyDefault(std::string n, std::string a, std::string d, std::string lh, std::string& v,
                        prop_cat_t cat, allowed_t av)
-    : PropDefault(help_description_t{n, a, d, lh, cat.groups, ""}, cat.cat, av), var(&v) {}
+    : PropDefault(NetSpeed::help_description_t{n, a, d, lh, cat.groups, ""}, cat.cat, av), var(&v) {}
     std::string get_default() const override { return var->empty() ? empty_val : *var; }
     bool set_default(std::string s, bool is_default_settable, optional<std::string> default_is_modifiable) override {
         if (s == empty_val) { *var = ""; return true; }
diff --git i/src/sw/noc_dev/NocCore/include/Grid.h w/src/sw/noc_dev/NocCore/include/Grid.h
index 08c81773876..1422a8584de 100644
--- i/src/sw/noc_dev/NocCore/include/Grid.h
+++ w/src/sw/noc_dev/NocCore/include/Grid.h
@@ -203,7 +203,7 @@ public:
 
 public:
      bool is_agent_stamped(const Host* h) {
-        for (const auto s : agent_stamp_groups)
+        for (const auto& s : agent_stamp_groups)
             if (is_member(s,h))
                 return true;
         return false;
diff --git i/src/sw/noc_dev/NocCore/src/AceM.genrtl.cpp w/src/sw/noc_dev/NocCore/src/AceM.genrtl.cpp
index eb547d0bfb6..d6537364c77 100644
--- i/src/sw/noc_dev/NocCore/src/AceM.genrtl.cpp
+++ w/src/sw/noc_dev/NocCore/src/AceM.genrtl.cpp
@@ -105,7 +105,7 @@ void AceM_bridge::rtl_parameters(map<string,RTL_param>& params) const {
     std::vector<hash_function_t> all_hash_functions = get_hash_fn_and_hash_bits(ldst_rte, this, nullptr, grid->get_all_hash_fns()); // convert slice bits to hash bits and get the hashing functions
 
     vector<hash_function_t> ns_hash_functions, idi_hash_functions, mod3_hash_functions;
-    for (const auto hf : all_hash_functions)
+    for (const auto& hf : all_hash_functions)
         if (hf.hash_type == hash_t::idi_hash)
             idi_hash_functions.push_back(hf);
         else if (hf.hash_type == hash_t::mod3_hash)
diff --git i/src/sw/noc_dev/NocCore/src/AgentModels.cpp w/src/sw/noc_dev/NocCore/src/AgentModels.cpp
index 3c5d3c1fbcc..74521927502 100644
--- i/src/sw/noc_dev/NocCore/src/AgentModels.cpp
+++ w/src/sw/noc_dev/NocCore/src/AgentModels.cpp
@@ -1185,7 +1185,7 @@ namespace NetSpeed {
         }
 
         ret += "Contents of invalidation buffer:\n";
-        for (const auto entry : invalidation_buffer)
+        for (const auto& entry : invalidation_buffer)
             ret += entry.second.print() + "\n";
 
         return ret;
diff --git i/src/sw/noc_dev/NocCore/src/AnalyzeTraffic.cpp w/src/sw/noc_dev/NocCore/src/AnalyzeTraffic.cpp
index 794b6e49941..80ad0d56ef5 100644
--- i/src/sw/noc_dev/NocCore/src/AnalyzeTraffic.cpp
+++ w/src/sw/noc_dev/NocCore/src/AnalyzeTraffic.cpp
@@ -370,7 +370,7 @@ at_result compute_analyze_traffic_props(const vector<Interface*>& ifces, const s
     }
 
     for (const auto& atp : analyze_traffic_props_map) {
-        for (const auto e : atp.second.props) {
+        for (const auto& e : atp.second.props) {
             auto old = ret[e.first];
             auto& curr = ret[e.first];
             if(curr.profile == nullptr) curr.profile = profile; // assign the profile to be the profile on which AT is queried on.
diff --git i/src/sw/noc_dev/NocCore/src/Axi4M.genrtl.cpp w/src/sw/noc_dev/NocCore/src/Axi4M.genrtl.cpp
index ed918c2b9c7..cbf43bc4707 100644
--- i/src/sw/noc_dev/NocCore/src/Axi4M.genrtl.cpp
+++ w/src/sw/noc_dev/NocCore/src/Axi4M.genrtl.cpp
@@ -316,7 +316,7 @@ void Axi4M::rtl_parameters(map<string,RTL_param>& params) const {
     std::vector<hash_function_t> all_hash_functions = get_hash_fn_and_hash_bits(rtbl, this, nullptr, grid->get_all_hash_fns()); // convert slice bits to hash bits and get the hashing functions
 
     vector<hash_function_t> ns_hash_functions, idi_hash_functions, mod3_hash_functions;
-    for (const auto hf : all_hash_functions)
+    for (const auto& hf : all_hash_functions)
         if (hf.hash_type == hash_t::idi_hash)
             idi_hash_functions.push_back(hf);
         else if (hf.hash_type == hash_t::mod3_hash)
diff --git i/src/sw/noc_dev/NocCore/src/Axi4M.register.cpp w/src/sw/noc_dev/NocCore/src/Axi4M.register.cpp
index dd4c84124eb..d20d23270b1 100644
--- i/src/sw/noc_dev/NocCore/src/Axi4M.register.cpp
+++ w/src/sw/noc_dev/NocCore/src/Axi4M.register.cpp
@@ -415,7 +415,7 @@ void Axi4M::routing_table_registers(Registers_t& regs,
     //axim_addr_hash_function
     vector<hash_function_t> all_hash_functions = get_hash_fn_and_hash_bits(routing_table, nullptr, nullptr, all_hash_fns);
     vector<hash_function_t> ns_hash_functions, idi_hash_functions, mod3_hash_functions;
-    for (const auto hf : all_hash_functions)
+    for (const auto& hf : all_hash_functions)
         if (hf.hash_type == hash_t::idi_hash)
             idi_hash_functions.push_back(hf);
         else if (hf.hash_type == hash_t::mod3_hash)
diff --git i/src/sw/noc_dev/NocCore/src/Axi4S.genrtl.cpp w/src/sw/noc_dev/NocCore/src/Axi4S.genrtl.cpp
index 9493dc9b7d4..c2d5acb490a 100644
--- i/src/sw/noc_dev/NocCore/src/Axi4S.genrtl.cpp
+++ w/src/sw/noc_dev/NocCore/src/Axi4S.genrtl.cpp
@@ -914,7 +914,7 @@ void Axi4S::ace_rtl_parameters(map<string, RTL_param>& params) const {
 
     std::vector<hash_function_t> all_hash_functions = get_hash_fn_and_hash_bits(rtbl, this, nullptr, grid->get_all_hash_fns()); // convert slice bits to hash bits and get the hashing functions
     vector<hash_function_t> ns_hash_functions, idi_hash_functions, mod3_hash_functions;
-    for (const auto hf : all_hash_functions)
+    for (const auto& hf : all_hash_functions)
         if (hf.hash_type == hash_t::idi_hash)
             idi_hash_functions.push_back(hf);
         else if (hf.hash_type == hash_t::mod3_hash)
diff --git i/src/sw/noc_dev/NocCore/src/BwComp.cpp w/src/sw/noc_dev/NocCore/src/BwComp.cpp
index f9c69226a1e..caa0e3dbdcb 100644
--- i/src/sw/noc_dev/NocCore/src/BwComp.cpp
+++ w/src/sw/noc_dev/NocCore/src/BwComp.cpp
@@ -1280,7 +1280,7 @@ vector<flit_rate_t> compute_arb_loss(const arbgroup_t& ag, const vector<map<cons
             txpchs[rx_rate.first->get_tx_pch()][ag[i]] += rx_rate.second;
 
     // compute losses for each txpch
-    for (const auto txp_rates : txpchs) {
+    for (const auto& txp_rates : txpchs) {
         if (isize(txp_rates.second) < 2) continue; // no loss possible unless there's two contenders for an output
         vector<double> flat_rates; vector<int> rxp_idxes;
         for (auto& rxp_rate : txp_rates.second) {
diff --git i/src/sw/noc_dev/NocCore/src/CHI_master.genrtl.cpp w/src/sw/noc_dev/NocCore/src/CHI_master.genrtl.cpp
index 2a183e483aa..e0f270da52f 100644
--- i/src/sw/noc_dev/NocCore/src/CHI_master.genrtl.cpp
+++ w/src/sw/noc_dev/NocCore/src/CHI_master.genrtl.cpp
@@ -242,7 +242,7 @@ void CHI_master_bridge::rtl_parameters(map<string, RTL_param>& params) const {
 
     std::vector<hash_function_t> all_hash_functions = get_hash_fn_and_hash_bits(rtbl, this, nullptr, grid->get_all_hash_fns()); // convert slice bits to hash bits and get the hashing functions
     vector<hash_function_t> ns_hash_functions, idi_hash_functions, mod3_hash_functions;
-    for (const auto hf : all_hash_functions)
+    for (const auto& hf : all_hash_functions)
         if (hf.hash_type == hash_t::idi_hash)
             idi_hash_functions.push_back(hf);
         else if (hf.hash_type == hash_t::mod3_hash)
diff --git i/src/sw/noc_dev/NocCore/src/CHI_slave.genrtl.cpp w/src/sw/noc_dev/NocCore/src/CHI_slave.genrtl.cpp
index 4437c19d371..6e1d05e7de1 100644
--- i/src/sw/noc_dev/NocCore/src/CHI_slave.genrtl.cpp
+++ w/src/sw/noc_dev/NocCore/src/CHI_slave.genrtl.cpp
@@ -299,7 +299,7 @@ void CHI_slave_bridge::rtl_parameters(map<string, RTL_param>& params) const {
 
         std::vector<hash_function_t> all_hash_functions = get_hash_fn_and_hash_bits(rtbl, this, nullptr, grid->get_all_hash_fns()); // convert slice bits to hash bits and get the hashing functions
         vector<hash_function_t> ns_hash_functions, idi_hash_functions, mod3_hash_functions;
-        for (const auto hf : all_hash_functions)
+        for (const auto& hf : all_hash_functions)
             if (hf.hash_type == hash_t::idi_hash)
                 idi_hash_functions.push_back(hf);
             else if (hf.hash_type == hash_t::mod3_hash)
@@ -556,7 +556,7 @@ void CHI_slave_bridge::rtl_parameters(map<string, RTL_param>& params) const {
         auto make_mstid_ptid_list = [&]() {
             vector<Rtl_valueP> ret;
             std::set<int> uniq_req_entries;
-            int mstid_ptid_tbl_size = isize(mstid_ptid_tbl);
+            //int mstid_ptid_tbl_size = isize(mstid_ptid_tbl);
 
             for (auto& e : mstid_ptid_tbl) {
                 auto st = make_v({make_v(agn_id_width, 'b', e.first), make_v(ptid_width, 'b', e.second)});
diff --git i/src/sw/noc_dev/NocCore/src/CMIM.genrtl.cpp w/src/sw/noc_dev/NocCore/src/CMIM.genrtl.cpp
index 2886f4bc15e..ab6c68dcb59 100644
--- i/src/sw/noc_dev/NocCore/src/CMIM.genrtl.cpp
+++ w/src/sw/noc_dev/NocCore/src/CMIM.genrtl.cpp
@@ -171,7 +171,7 @@ void CMIM_bridge::rtl_parameters(std::map<std::string, RTL_param>& params) const
         int num_idi_hash_bits = 1;
         std::vector<hash_function_t> all_hash_functions = get_hash_fn_and_hash_bits(rtbl, this, &num_idi_hash_bits, grid->get_all_hash_fns()); // convert slice bits to hash bits and get the hashing functions
         vector<hash_function_t> ns_hash_functions, idi_hash_functions, mod3_hash_functions;
-        for (const auto hf : all_hash_functions)
+        for (const auto& hf : all_hash_functions)
             if (hf.hash_type == hash_t::idi_hash)
                 idi_hash_functions.push_back(hf);
             else if (hf.hash_type == hash_t::mod3_hash)
@@ -208,7 +208,7 @@ void CMIM_bridge::rtl_parameters(std::map<std::string, RTL_param>& params) const
 
         params["P_NUM_CACHE_GROUPS"] = num_cache_groups;
         vector<bool> cache_disableable, llc_enabled_by_default;
-        for (const auto cg : rttbl_cache_groups) {
+        for (const auto& cg : rttbl_cache_groups) {
             cache_disableable.push_back(cg.first && cg.first->allow_llc_disable);
             llc_enabled_by_default.push_back(cg.first && cg.first->llc_enabled_by_default);
         }
diff --git i/src/sw/noc_dev/NocCore/src/CMIM.register.cpp w/src/sw/noc_dev/NocCore/src/CMIM.register.cpp
index e78468e557e..bb61d57c422 100644
--- i/src/sw/noc_dev/NocCore/src/CMIM.register.cpp
+++ w/src/sw/noc_dev/NocCore/src/CMIM.register.cpp
@@ -1231,7 +1231,7 @@ void idi_cmi_routing_table_registers(const Bridge* br, Registers_t & regs, const
     
     vector<hash_function_t> all_hash_functions = get_hash_fn_and_hash_bits(routing_table, br, nullptr, all_hash_fns);
     vector<hash_function_t> ns_hash_functions, idi_hash_functions, mod3_hash_functions;
-    for (const auto hf : all_hash_functions)
+    for (const auto& hf : all_hash_functions)
         if (hf.hash_type == hash_t::idi_hash)
             idi_hash_functions.push_back(hf);
         else if (hf.hash_type == hash_t::mod3_hash)
diff --git i/src/sw/noc_dev/NocCore/src/Commands.dom.cpp w/src/sw/noc_dev/NocCore/src/Commands.dom.cpp
index 52c7331d579..bad12a20cbb 100644
--- i/src/sw/noc_dev/NocCore/src/Commands.dom.cpp
+++ w/src/sw/noc_dev/NocCore/src/Commands.dom.cpp
@@ -1845,7 +1845,7 @@ COMMAND(assign_regbus_node_clock_domain, eco_t::ECO_DISABLED, XY_set, "<clock do
 
     Clock_domain_props_t* cd = g.clock_domains->get_domainp(cd_s);
     set<Node_id> node_set;
-    for (const string n : nodes) {
+    for (const string& n : nodes) {
         const Node_id ni(n);
         if (ni.is_null()) { LOG_ERROR("3000") << "Argument " << n << " not recognized as a valid node." << endl; return false; }
         node_set.insert(ni);
diff --git i/src/sw/noc_dev/NocCore/src/Commands.range.cpp w/src/sw/noc_dev/NocCore/src/Commands.range.cpp
index 7b576791f7f..216a5435b89 100644
--- i/src/sw/noc_dev/NocCore/src/Commands.range.cpp
+++ w/src/sw/noc_dev/NocCore/src/Commands.range.cpp
@@ -2052,7 +2052,7 @@ void auto_align_offsets_helper_n_way_intersection(const vector<addr_ranges_per_m
     }
 
     //apply the offsets
-    for (const auto offset_per_mst : offsets_per_mst) {
+    for (const auto& offset_per_mst : offsets_per_mst) {
         offset_per_mst.first->apply_master_register_offsets(offset_per_mst.second);
         if (offset_per_mst.first->get_rtl_defer()) {
             for (auto defer : offset_per_mst.first->get_rtl_defer()->get_deferring_to_me())
diff --git i/src/sw/noc_dev/NocCore/src/Flit.cpp w/src/sw/noc_dev/NocCore/src/Flit.cpp
index 96623d1d715..33b51541059 100644
--- i/src/sw/noc_dev/NocCore/src/Flit.cpp
+++ w/src/sw/noc_dev/NocCore/src/Flit.cpp
@@ -254,7 +254,7 @@ vector<global_sim_time> Packet_template::final_consume_times() const {
     }
     else if (!noc_packets.empty()) {
         vector<global_sim_time> ret;
-        for (const auto noc_packet : noc_packets) {
+        for (const auto& noc_packet : noc_packets) {
             auto fin_time = noc_packet->final_consume_times();
             if(!fin_time.empty())
                 ret.push_back(vec_max(fin_time));
@@ -308,7 +308,7 @@ vector<global_sim_time> Packet_template::transaction_latencies(global_sim_time s
     if (!noc_packets.empty()) {
         sent_sop_time_adjusted.clear();
         gen_time_adjusted.clear();
-        for (const auto noc_packet : noc_packets) {
+        for (const auto& noc_packet : noc_packets) {
             for (int i = 0; i < isize(noc_packet->sent_sop_time); i++)
                 sent_sop_time_adjusted.push_back(noc_packet->sent_sop_time[i]);
 
@@ -366,7 +366,7 @@ bitcount Packet_template::get_transaction_volume(global_sim_time stat_start_time
     }
     for (const auto& r : resps) {
         if (!r.packet->noc_packets.empty()) {
-            for (const auto noc_packet : r.packet->noc_packets)
+            for (const auto& noc_packet : r.packet->noc_packets)
                 t += noc_packet->get_transaction_volume(stat_start_time);
         }
         else t += r.packet->get_transaction_volume(stat_start_time);
diff --git i/src/sw/noc_dev/NocCore/src/GenAxiUvmBench.cpp w/src/sw/noc_dev/NocCore/src/GenAxiUvmBench.cpp
index 0ffa9299828..54d0857f75b 100644
--- i/src/sw/noc_dev/NocCore/src/GenAxiUvmBench.cpp
+++ w/src/sw/noc_dev/NocCore/src/GenAxiUvmBench.cpp
@@ -2338,7 +2338,7 @@ bool Gen_axi_uvm_testconfig::gen_stream(const Grid& g, const Gen_rtl_state& grs,
 
                         // Determine which host shared interface bridge is attached to
                         Json::Value sib_host;
-                        for (const Json::Value& host_candidate : grs.json["hosts"]) {
+                        for (const Json::Value host_candidate : grs.json["hosts"]) {
                             // if (!host_candidate["bridge"][sib_br_name].isNull()) {  // Found host
                             if (host_candidate["bridge"].contains(sib_br_name)) {
                                 // found host
diff --git i/src/sw/noc_dev/NocCore/src/GenOSXML.cpp w/src/sw/noc_dev/NocCore/src/GenOSXML.cpp
index b4711e5c371..210a34b8b73 100644
--- i/src/sw/noc_dev/NocCore/src/GenOSXML.cpp
+++ w/src/sw/noc_dev/NocCore/src/GenOSXML.cpp
@@ -57,7 +57,7 @@ namespace NetSpeed {
 
     bitcount get_reg_width(const Register_t& reg) {
         size_t reg_width = 0;
-        for (const auto regfield : reg.get_ranges())  reg_width += regfield.hi - regfield.lo + 1;
+        for (const auto& regfield : reg.get_ranges()) reg_width += regfield.hi - regfield.lo + 1;
         return static_cast<bitcount>(reg_width);
     }
 
diff --git i/src/sw/noc_dev/NocCore/src/GenSDC.cpp w/src/sw/noc_dev/NocCore/src/GenSDC.cpp
index 8bc7c86ed93..eedd2e37814 100644
--- i/src/sw/noc_dev/NocCore/src/GenSDC.cpp
+++ w/src/sw/noc_dev/NocCore/src/GenSDC.cpp
@@ -1355,7 +1355,7 @@ bool GenSdc::gen_soc_ip(const Grid& g, const Gen_rtl_state& grs) {
         if (!virtual_clk_to_pin.empty()) {
             set<string> virtual_clocks_added_pins_top;
             for (const auto& vc : virtual_clk_to_pin) {
-                for (const auto vp : vc.second) {
+                for (const auto& vp : vc.second) {
                     print_set_delay_simple(prefix, Sig_dir::Input, "virtual_clk", vc.first, vp, os, virtual_clocks_added_pins_top);
                 }
             }
@@ -3006,7 +3006,7 @@ NsJson GenSdc::gen_soc_ip_json(const Grid& g, const Gen_rtl_state& grs) {
             if (!virtual_clk_to_pin.empty()) {
                 set<string> virtual_clocks_added_pins_top;
                 for (const auto& vc : virtual_clk_to_pin) {
-                    for (const auto vp : vc.second) {
+                    for (const auto& vp : vc.second) {
                         NsJson virtual_clock_delay_content = print_set_delay_simple_json(prefix,Sig_dir::Input,"virtual_clk",vc.first,vp,virtual_clocks_added_pins_top);
                         virtual_clk_io_constraint_content_json["delays"] += virtual_clock_delay_content;
                     }
diff --git i/src/sw/noc_dev/NocCore/src/GenSysc.cpp w/src/sw/noc_dev/NocCore/src/GenSysc.cpp
index bd15609128d..e0950cce85f 100644
--- i/src/sw/noc_dev/NocCore/src/GenSysc.cpp
+++ w/src/sw/noc_dev/NocCore/src/GenSysc.cpp
@@ -2465,7 +2465,7 @@ class ns_soc_ip : public sc_module {
                assert(true);
                return 0;
            };
-           for (const auto p_pin : pd.priority_pins) {
+           for (const auto& p_pin : pd.priority_pins) {
                y << "    void set_" << p_pin << "() {\n";
                int qos_id = get_qos_id(p_pin);
                y << "      if(" << p_pin << ".read()) {";
@@ -2633,7 +2633,7 @@ class ns_soc_ip : public sc_module {
         if (g.sys_is_nsip_present() && g.is_any_alternate_priority_set() && !pd.priority_pins.empty()) {
             y << "\n      fabric.pri_sel_socket(pri_sel_socket);\n";
 
-            for (const auto p_pin : pd.priority_pins) {
+            for (const auto& p_pin : pd.priority_pins) {
                 y << "\n      SC_METHOD(set_" << p_pin << ");\n";
                 y << "      sensitive<<" << p_pin << ";\n";
                 y << "      dont_initialize();\n";
diff --git i/src/sw/noc_dev/NocCore/src/GenUPF.cpp w/src/sw/noc_dev/NocCore/src/GenUPF.cpp
index 731809460d2..3b9a6418e72 100644
--- i/src/sw/noc_dev/NocCore/src/GenUPF.cpp
+++ w/src/sw/noc_dev/NocCore/src/GenUPF.cpp
@@ -3232,7 +3232,7 @@ bool Gen_upf::write_upf(const Grid& g, const string& upf_dir, Upf_supported_ver
         if (ConsoleParsing::use_project_dir) of.close();
     }
 
-    for (const auto child : node->get_children()) success &= write_upf(g, upf_dir, upf_ver, child.second, depth + 1, max_depth);
+    for (const auto& child : node->get_children()) success &= write_upf(g, upf_dir, upf_ver, child.second, depth + 1, max_depth);
 
     return success;
 }
diff --git i/src/sw/noc_dev/NocCore/src/Grid.cpp w/src/sw/noc_dev/NocCore/src/Grid.cpp
index cd299bae3f6..9c0d9770cf9 100644
--- i/src/sw/noc_dev/NocCore/src/Grid.cpp
+++ w/src/sw/noc_dev/NocCore/src/Grid.cpp
@@ -525,7 +525,7 @@ Range_t* Grid::get_range(std::string s) const {
 const std::set<const Range_t*> Grid::get_all_root_ranges() const {
     set<const Range_t*> root_ranges;
     set<string> root_range_names;
-    for (const auto range_name : ranges)
+    for (const auto& range_name : ranges)
         for (const auto range : range_name.second) {
             if (root_range_names.insert(range->get_root_range()->name).second)
                 root_ranges.insert(range->get_root_range());
diff --git i/src/sw/noc_dev/NocCore/src/Grid.grp.cpp w/src/sw/noc_dev/NocCore/src/Grid.grp.cpp
index 7a9dd7fb24f..15d18ae54f7 100644
--- i/src/sw/noc_dev/NocCore/src/Grid.grp.cpp
+++ w/src/sw/noc_dev/NocCore/src/Grid.grp.cpp
@@ -1334,7 +1334,7 @@ bool Grid::select_best_route_lookup_strategy() {
 
     // id-based routing for regbus
     if (is_regbus_enabled()) {
-        auto effective_regbus_routing_scheme = get_route_lookup_scheme_regbus();
+        //auto effective_regbus_routing_scheme = get_route_lookup_scheme_regbus();
         auto specified_regbus_routing_scheme = get_route_lookup_scheme_regbus_specified();
         const auto auto_regbus_routing_scheme = specified_regbus_routing_scheme == route_lookup_scheme_t::automatic;
         bitcount max_idbr_key_width_needed = 0;
diff --git i/src/sw/noc_dev/NocCore/src/Grid.sim.cpp w/src/sw/noc_dev/NocCore/src/Grid.sim.cpp
index 21b8de29b03..27dec330df0 100644
--- i/src/sw/noc_dev/NocCore/src/Grid.sim.cpp
+++ w/src/sw/noc_dev/NocCore/src/Grid.sim.cpp
@@ -87,17 +87,17 @@ void dump_ph_props(const Grid& g) {
         return;
     }
     ofs << "flit_tx,flit_rx,credits,credit_delay,data_delay,type\n\n";
-    for (const auto ifce : g.get_tx_ifces("*")) {
-        for (const auto detail :
+    for (const auto& ifce : g.get_tx_ifces("*")) {
+        for (const auto& detail :
              get_flit_tx_rx_ifce_details(ifce->get_tx_protocol_handler()->get_flit_xforms())) {
             ofs << detail.src_name << "," << detail.dest_name << "," << detail.credits << ","
                 << detail.credit_delay << "," << detail.data_delay << "," << detail.ifce_type() << "\n";
         }
         ofs << "\n\n";
     }
-    for (const auto ifce : g.get_rx_ifces("*")) {
-        for (auto rxvc : ifce->get_all_rx_vchannels()) {
-            for (const auto detail : get_flit_tx_rx_ifce_details(
+    for (const auto& ifce : g.get_rx_ifces("*")) {
+        for (auto& rxvc : ifce->get_all_rx_vchannels()) {
+            for (const auto& detail : get_flit_tx_rx_ifce_details(
                      ifce->get_rx_protocol_handler(IVC_id(rxvc->get_id()))->get_flit_xforms())) {
                 ofs << detail.src_name << "," << detail.dest_name << "," << detail.credits << ","
                     << detail.credit_delay << "," << detail.data_delay << "," << detail.ifce_type() << "\n";
diff --git i/src/sw/noc_dev/NocCore/src/IDI2CMI_host.cpp w/src/sw/noc_dev/NocCore/src/IDI2CMI_host.cpp
index 5ecf3de6993..f748644601d 100644
--- i/src/sw/noc_dev/NocCore/src/IDI2CMI_host.cpp
+++ w/src/sw/noc_dev/NocCore/src/IDI2CMI_host.cpp
@@ -338,7 +338,7 @@ bool IDI2CMI_host::checks_container() const {
     auto cmi_mst_ifce = cmi_mst->get_any_if(CMI_RD_DATA);
     for (const auto rd_vifce : cmi_rd_data_vifce) {
         if (cmi_mst_ifce->get_rx_vifce(rd_vifce)->get_cmi_supports_interleaved_response()) {
-            for (const auto src : idi_slv->get_traffic_src_ifce()) {
+            for (const auto& src : idi_slv->get_traffic_src_ifce()) {
                 if (src.first->get_props()->get_data_width() == MAX_CMI_DATA_WIDTH) {
                     stringstream messg;
                     messg << "If the CMIM bridge of the converter has cmi_supports_interleaved_responses set to true, none of the IDIM bridges that send to that converter can have their data widths set to " << MAX_CMI_DATA_WIDTH
diff --git i/src/sw/noc_dev/NocCore/src/IDIM.genrtl.cpp w/src/sw/noc_dev/NocCore/src/IDIM.genrtl.cpp
index 0e2e07eccb7..6a53b33a653 100644
--- i/src/sw/noc_dev/NocCore/src/IDIM.genrtl.cpp
+++ w/src/sw/noc_dev/NocCore/src/IDIM.genrtl.cpp
@@ -114,7 +114,7 @@ void Bridge::rtl_parameters_idim_rttbl(std::map<std::string, RTL_param>& params)
     std::vector<hash_function_t> all_hash_functions = get_hash_fn_and_hash_bits(rtbl, this, &num_idi_hash_bits, grid->get_all_hash_fns()); // convert slice bits to hash bits and get the hashing functions
 
     vector<hash_function_t> ns_hash_functions, idi_hash_functions, mod3_hash_functions;
-    for (const auto hf : all_hash_functions)
+    for (const auto& hf : all_hash_functions)
         if (hf.hash_type == hash_t::idi_hash)
             idi_hash_functions.push_back(hf);
         else if (hf.hash_type == hash_t::mod3_hash)
diff --git i/src/sw/noc_dev/NocCore/src/Interface.cpp w/src/sw/noc_dev/NocCore/src/Interface.cpp
index 4562771085b..f623b3dcc03 100644
--- i/src/sw/noc_dev/NocCore/src/Interface.cpp
+++ w/src/sw/noc_dev/NocCore/src/Interface.cpp
@@ -2982,9 +2982,9 @@ bitcount Tx_interface::compute_transaction_volume(global_sim_time stat_reset_tim
     };
 
     bitcount t = 0;
-    for (const auto pkt : transmitted_packets) {
+    for (const auto& pkt : transmitted_packets) {
         if (!pkt->noc_packets.empty()) {
-            for (const auto noc_packet : pkt->noc_packets)
+            for (const auto& noc_packet : pkt->noc_packets)
                 t += compute_bits_from_pkt(noc_packet);
         }
         else t += compute_bits_from_pkt(pkt);
@@ -3022,9 +3022,9 @@ bitcount Tx_interface::compute_transaction_data_volume(global_sim_time stat_rese
     };
 
     bitcount t = 0;
-    for (const auto pkt : transmitted_packets) {
+    for (const auto& pkt : transmitted_packets) {
         if (!pkt->noc_packets.empty()) {
-            for (const auto noc_packet : pkt->noc_packets)
+            for (const auto& noc_packet : pkt->noc_packets)
                 t += compute_bits_from_pkt(noc_packet);
         }
         else t += compute_bits_from_pkt(pkt);
diff --git i/src/sw/noc_dev/NocCore/src/Port.cpp w/src/sw/noc_dev/NocCore/src/Port.cpp
index 0a095eee361..9d46ed646ef 100644
--- i/src/sw/noc_dev/NocCore/src/Port.cpp
+++ w/src/sw/noc_dev/NocCore/src/Port.cpp
@@ -5345,7 +5345,7 @@ std::string DomainCrosser_Write::instance_suffix() const {
 
 string bridge_to_rssb_pin_name(const string& bn);
 ////! return true if the given pin has base name containing s (or its translation into rssb base names)
-auto has_name = [](const Pin& p, string_view s) {
+static auto has_name = [](const Pin& p, string_view s) {
     string pin_base_name = bridge_to_rssb_pin_name(p.base_name);
     auto s2              = rssb::old_router_to_rssb_name(s);
     if (!s2.empty() && pin_base_name == std::string(s2) /*p.base_name.find(std::string(s2)) != string::npos*/)
@@ -5354,7 +5354,7 @@ auto has_name = [](const Pin& p, string_view s) {
 };
 
 //! return true if the given pin has base name containing s (or its translation into rssb base names)
-auto has_name_eq = [](const Pin& p, string_view s) {
+static auto has_name_eq = [](const Pin& p, string_view s) {
     string pin_base_name = bridge_to_rssb_pin_name(p.base_name);
     auto s2              = rssb::old_router_to_rssb_name(s);
     if (!s2.empty() && pin_base_name == s2) return true;
diff --git i/src/sw/noc_dev/NocCore/src/Rssb.cpp w/src/sw/noc_dev/NocCore/src/Rssb.cpp
index 0210dc93641..fb3dd216149 100644
--- i/src/sw/noc_dev/NocCore/src/Rssb.cpp
+++ w/src/sw/noc_dev/NocCore/src/Rssb.cpp
@@ -6034,7 +6034,7 @@ std::vector<std::unique_ptr<RTL_module_inst>> make_rssb(rssb::cfg c, const Rtlab
                 rtr_neighbors.insert(mcast_rtr);
 
                 // account for chops NS-64905
-                for (const auto c : g->chop) {
+                for (const auto& c : g->chop) {
                     IDFOR(p, Port_id) {
                         if (mcast_rtr->get_tx_port(p) && mcast_rtr->get_tx_port(p)->get_adj_rx_port_chop(&c) &&
                             mcast_rtr->get_tx_port(p)->get_adj_rx_port_chop(&c)->get_parent()->is_router()) {
@@ -6149,7 +6149,7 @@ std::vector<std::unique_ptr<RTL_module_inst>> make_rssb(rssb::cfg c, const Rtlab
                         }
                     }
                     // account for chops NS-64800
-                    for (const auto c : g->chop) {
+                    for (const auto& c : g->chop) {
                         IDFOR(p, Port_id) {
                         auto rtr_tx_port = crtr->get_tx_port(p);
                             if (rtr_tx_port && rtr_tx_port->get_adj_rx_port_chop(&c) &&
diff --git i/src/sw/noc_dev/NocCore/src/Sim.cpp w/src/sw/noc_dev/NocCore/src/Sim.cpp
index 9e1aa7af21a..ef6bf1fc026 100644
--- i/src/sw/noc_dev/NocCore/src/Sim.cpp
+++ w/src/sw/noc_dev/NocCore/src/Sim.cpp
@@ -1016,7 +1016,7 @@ const Packet_template* get_cls_last_packet(const Packet_template* first) {
 
 StatsCalculator get_chain_latency_stats(const Tx_interface* txif) {
     StatsCalculator ret;
-    for (const std::shared_ptr<Packet_template> first : txif->get_transmitted_packets()) {
+    for (const std::shared_ptr<Packet_template>& first : txif->get_transmitted_packets()) {
         if (!first->is_first_in_chain()) continue; //skip packets that aren't first in their chain
         const Packet_template* last = get_cls_last_packet(first.get());
         if (last == nullptr) continue;
diff --git i/src/sw/noc_dev/NocCore/src/TraceGen.cpp w/src/sw/noc_dev/NocCore/src/TraceGen.cpp
index e7935483ff7..90630cdb7a1 100644
--- i/src/sw/noc_dev/NocCore/src/TraceGen.cpp
+++ w/src/sw/noc_dev/NocCore/src/TraceGen.cpp
@@ -1296,7 +1296,7 @@ local_sim_time IfceDriver::act() {
         // Now decide if we should use the rxifs from trace file. If any rxif in trace file is part of a multicast group, we must use all rxifs (and not just those from the trace file) to ensure that we send to all destinations in the multicast group
         bool use_filtered_rx = true;
         for (const auto& rxif : req_pkt_inst->get_rx()) if (grid->is_present_in_mc_groups(rxif.first->bridgep())) { use_filtered_rx = false; break; }
-        vector<Rx_interface*> req_pkt_inst_rxifs; for (const auto req_pkt_int_rxif : req_pkt_inst->get_rx()) req_pkt_inst_rxifs.push_back(req_pkt_int_rxif.first);
+        vector<Rx_interface*> req_pkt_inst_rxifs; for (const auto& req_pkt_int_rxif : req_pkt_inst->get_rx()) req_pkt_inst_rxifs.push_back(req_pkt_int_rxif.first);
         const vector<Rx_interface*>& rxifs = use_filtered_rx && grid->get_is_multicast_enabled()? req_pkt_inst_rxifs : req->rxif;
         int cmi_src_id = is_cmi_master(req->txif->bridgep()->get_type()) ? req->txif->bridgep()->get_cmi_srcid() : req->txif->bridgep()->get_bridge_id();
         auto reqf = grid->get_flit_from_packet(req, LastResponse{ true }, rxifs, req_pkt_inst->get_aid(), req_pkt_inst->get_address_props(), sysc_payload_t(),
diff --git i/src/sw/noc_dev/NocCore/src/Trace_lib.cpp w/src/sw/noc_dev/NocCore/src/Trace_lib.cpp
index 22a0d6d8ba3..ee9cb400244 100644
--- i/src/sw/noc_dev/NocCore/src/Trace_lib.cpp
+++ w/src/sw/noc_dev/NocCore/src/Trace_lib.cpp
@@ -653,7 +653,7 @@ std::string commands_t::strxtor_get_string(global_sim_time& /*time_elapsed*/) co
        
         assert(is_stream_br(src->bridgep()->get_type()) || is_scf_ad_br(src->bridgep()->get_type()));
         assert(is_stream(src->id) || is_scf(src->id));
-         for (const auto d : dest) assert(is_stream(d.first->id) || is_scf(src->id));
+        for (const auto& d : dest) assert(is_stream(d.first->id) || is_scf(src->id));
         //streaming transaxtor beats are in number of 32-bit words
         int base_beat_size = src->get_cell_size_ifce();
         assert(base_beat_size > 0);
diff --git i/src/sw/noc_dev/NocCore/src/Traffic.non-coherency.cpp w/src/sw/noc_dev/NocCore/src/Traffic.non-coherency.cpp
index ed4607b4c1f..3d8ba5c0d13 100644
--- i/src/sw/noc_dev/NocCore/src/Traffic.non-coherency.cpp
+++ w/src/sw/noc_dev/NocCore/src/Traffic.non-coherency.cpp
@@ -42,9 +42,9 @@ void cmdReplace(cc_traffic_type_t& cmd, string to_replace, const vector<Bridge*>
 void cmdReplace(cc_traffic_type_t& cmd, string fg_to_replace, string new_fg);
 
 void append_hops_to_transaction(const cc_traffic_type_t& new_cmd, transaction_t& new_trans) {
-    for (const auto cc_str_hop : new_cmd.cc_str_hops_v) {
+    for (const auto& cc_str_hop : new_cmd.cc_str_hops_v) {
         vector<flow_group_t> fgs;
-        for (const auto flow : cc_str_hop.cc_str_flows) fgs.push_back(flow.fg);
+        for (const auto& flow : cc_str_hop.cc_str_flows) fgs.push_back(flow.fg);
         new_trans.add_hop(hop_t(fgs));
     }
 }
diff --git i/src/sw/noc_dev/NocCore/src/nocstudio.cpp w/src/sw/noc_dev/NocCore/src/nocstudio.cpp
index 464b5d4a8be..c0d79df7790 100644
--- i/src/sw/noc_dev/NocCore/src/nocstudio.cpp
+++ w/src/sw/noc_dev/NocCore/src/nocstudio.cpp
@@ -2502,9 +2502,9 @@ void dump_blocked_causes(NetSpeed::Sim* s, std::ostream& os, std::string* error)
     if (s == nullptr) { if (error) *error = "Sim object is null"; return; }
     if (!os.good()) { if (error) *error = "Specified output stream does not exist"; return; }
 
-    for (const auto chan : NetSpeed::get_channel_names(s, "*")) {
+    for (const auto& chan : NetSpeed::get_channel_names(s, "*")) {
         os << "Blocked causes for channel " << chan << "\n";
-        for (const auto bc : query_blocked_causes(s, chan)) {
+        for (const auto& bc : query_blocked_causes(s, chan)) {
             os << bc.first << " " << bc.second << "\n";
         }
         os << "\n";
diff --git i/src/sw/noc_dev/SCFNocStudio/CMakeLists.txt w/src/sw/noc_dev/SCFNocStudio/CMakeLists.txt
index b9f11b603b8..dc6ac051f61 100755
--- i/src/sw/noc_dev/SCFNocStudio/CMakeLists.txt
+++ w/src/sw/noc_dev/SCFNocStudio/CMakeLists.txt
@@ -4,44 +4,12 @@ set(CMAKE_AUTORCC ON)
 set(CMAKE_AUTOUIC ON)
 set(CMAKE_PREFIX_PATH /usr/intel/pkgs/libqt/5.11.2/)
 
-find_package(Qt5 COMPONENTS Core Gui Widgets PrintSupport REQUIRED)
 
-file(GLOB gc_std_mocs RELATIVE ${CMAKE_CURRENT_SOURCE_DIR}
-    ${gc_path}/Qtproperty/[^.]*_p.h ${gc_path}/Qtproperty/*/[^.]*_p.h
-    )
-QT5_WRAP_CPP(gc_std_mocs)
-
-set(gc_includes ${gc_path}/DRC/ ${gc_path}/Gui/ ${gc_path}/Modeling/ ${gc_path}/Utils/ ${gc_path}/)
-
-# Qt property headers need special MOC handling as the X.cpp files include the generated moc_X.cpp
-file(GLOB qtp_hdrs RELATIVE ${CMAKE_CURRENT_SOURCE_DIR}
-    ${gc_path}/Qtproperty/[^.]*.h ${gc_path}/Qtproperty/*/[^.]*.h
-    )
-list(FILTER qtp_hdrs EXCLUDE REGEX "_p.h$")
-
-#Rule to generate moc files with .cpp extension
-function(qt5_manual_moc)
-  qt5_get_moc_flags(_moc_incs)
-  foreach(_current_file ${ARGN})
-    get_filename_component(_abs_file ${_current_file} ABSOLUTE)
-    if(EXISTS ${_abs_file})
-      file(READ ${_abs_file} _contents)
-      get_filename_component(_basename ${_abs_file} NAME_WE)
-      string(REGEX MATCH "Q_OBJECT" _match "${_contents}")
-      if(_match)
-        set(_moc "${CMAKE_CURRENT_BINARY_DIR}/moc_${_basename}.cpp")
-        qt5_create_moc_command(${_abs_file} ${_moc} "${_moc_incs}" "" "" "")
-        set_property(SOURCE ${_abs_file} PROPERTY SKIP_AUTOMOC ON) # disable automoc on this file
-        string(REGEX REPLACE "[.]h$" ".cpp" _cpp_file ${_current_file})
-        set_property(SOURCE "${CMAKE_CURRENT_SOURCE_DIR}/${_cpp_file}" APPEND PROPERTY OBJECT_DEPENDS ${_moc})
-#        message(STATUS "Added dep from ${CMAKE_CURRENT_SOURCE_DIR}/${_cpp_file} to ${_moc}")
-      endif(_match)
-    endif(EXISTS ${_abs_file})
-  endforeach (_current_file)
-endfunction(qt5_manual_moc)
-
-#message(STATUS "qtp_hdrs=${qtp_hdrs}")
-qt5_manual_moc(${qtp_hdrs})
+if (NS_USE_QT6)
+  find_package(Qt6 COMPONENTS Core Gui Widgets PrintSupport REQUIRED)
+else()
+  find_package(Qt5 COMPONENTS Core Gui Widgets PrintSupport REQUIRED)
+endif()
 
 # don't include any moc_/qrc_ files left lying around from Makefile build
 list(FILTER gc_sources EXCLUDE REGEX "^moc_.*[.]cpp")
@@ -65,8 +33,14 @@ list(FILTER gui_sources EXCLUDE REGEX "main.cpp")
 
 add_library(Centaurus-qt SHARED ${gui_sources})
 target_include_directories(Centaurus-qt PRIVATE ${gui_includes} ${CMAKE_BINARY_DIR})
-target_link_libraries(Centaurus-qt PUBLIC noc_infra noc_core_sh
+
+if (NS_USE_QT6)
+  target_link_libraries(Centaurus-qt PUBLIC noc_infra noc_core_sh
+    tclvfs Qt6::Core Qt6::Gui Qt6::Widgets Qt6::PrintSupport pthread dl)
+else()
+  target_link_libraries(Centaurus-qt PUBLIC noc_infra noc_core_sh
     tclvfs Qt5::Core Qt5::Gui Qt5::Widgets Qt5::PrintSupport pthread dl)
+endif()
 
 # setup executable target for Centaurus w/o FlexLM
 add_executable(Centaurus-dev main.cpp dockresource.qrc)
@@ -75,8 +49,15 @@ target_link_libraries(Centaurus-dev PRIVATE noc_isabelle noc_config_scf_i Centau
 
 add_executable(Centaurus main.cpp ${gui_sources} dockresource.qrc)
 target_include_directories(Centaurus PRIVATE ${gui_includes} ${CMAKE_BINARY_DIR})
-target_link_libraries(Centaurus PRIVATE noc_isabelle_obj noc_config_scf_i noc_infra noc_core ipcore
+
+
+if (NS_USE_QT6)
+  target_link_libraries(Centaurus PRIVATE noc_isabelle_obj noc_config_scf_i noc_infra noc_core ipcore
+    tclvfs Qt6::Core Qt6::Gui Qt6::Widgets Qt6::PrintSupport pthread dl)
+else()
+  target_link_libraries(Centaurus PRIVATE noc_isabelle_obj noc_config_scf_i noc_infra noc_core ipcore
     tclvfs Qt5::Core Qt5::Gui Qt5::Widgets Qt5::PrintSupport pthread dl)
+endif()
 
 
 # setup executable target for Centaurus w/ FlexLM
diff --git i/src/sw/noc_dev/SCFNocStudio/Gui/Customized/tableview.cpp w/src/sw/noc_dev/SCFNocStudio/Gui/Customized/tableview.cpp
index d15b53acef5..857452aee7d 100644
--- i/src/sw/noc_dev/SCFNocStudio/Gui/Customized/tableview.cpp
+++ w/src/sw/noc_dev/SCFNocStudio/Gui/Customized/tableview.cpp
@@ -92,7 +92,7 @@ void TableView::handleCopyEvent(bool all, int row)
     QAbstractItemModel * abmodel = this->model();
     QItemSelectionModel * model = this->selectionModel();
     QModelIndexList list = model->selectedIndexes();
-    qSort(list);
+    std::sort(list.begin(), list.end());
     if (list.count() < 1)  return;
 
     QString copied_table;
diff --git i/src/sw/noc_dev/SCFNocStudio/Gui/DRC/IniTxnItemModel.cpp w/src/sw/noc_dev/SCFNocStudio/Gui/DRC/IniTxnItemModel.cpp
index d17bc871135..4e09fe84dc2 100644
--- i/src/sw/noc_dev/SCFNocStudio/Gui/DRC/IniTxnItemModel.cpp
+++ w/src/sw/noc_dev/SCFNocStudio/Gui/DRC/IniTxnItemModel.cpp
@@ -45,7 +45,7 @@ QVariant IniTxnItemModel::headerData(int section, Qt::Orientation orientation,
 Qt::ItemFlags IniTxnItemModel::flags(const QModelIndex & index) const
 {
     if (!index.isValid())
-        return 0;
+        return Qt::ItemFlags(0);
 
     Qt::ItemFlags flags = Qt::ItemIsEnabled | Qt::ItemIsSelectable;
 
diff --git i/src/sw/noc_dev/SCFNocStudio/Gui/DRC/NsSortFilterProxyModel.cpp w/src/sw/noc_dev/SCFNocStudio/Gui/DRC/NsSortFilterProxyModel.cpp
index 9f21906206e..fd0aed7be43 100644
--- i/src/sw/noc_dev/SCFNocStudio/Gui/DRC/NsSortFilterProxyModel.cpp
+++ w/src/sw/noc_dev/SCFNocStudio/Gui/DRC/NsSortFilterProxyModel.cpp
@@ -59,10 +59,10 @@ void NsSortFilterProxyModel::setFilterKeyColumns(const QList<qint32> & filterCol
     m_columnPatterns.clear();
 
     foreach(qint32 column, filterColumns)
-        m_columnPatterns.insert(column, QRegExp());
+        m_columnPatterns.insert(column, QRegularExpression());
 }
 
-void NsSortFilterProxyModel::addFilterFixedString(qint32 column, const QRegExp & pattern)
+void NsSortFilterProxyModel::addFilterFixedString(qint32 column, const QRegularExpression & pattern)
 {
     if (!m_columnPatterns.contains(column))
         return;
@@ -70,7 +70,7 @@ void NsSortFilterProxyModel::addFilterFixedString(qint32 column, const QRegExp &
     m_columnPatterns[column] = pattern;
 }
 
-void NsSortFilterProxyModel::appendFilterKeyColumn(qint32 column, const QRegExp & pattern)
+void NsSortFilterProxyModel::appendFilterKeyColumn(qint32 column, const QRegularExpression & pattern)
 {
     if (!m_columnPatterns.contains(column))
         m_columnPatterns.insert(column, pattern);
@@ -84,6 +84,17 @@ void NsSortFilterProxyModel::clearFilterKeyColumn()
     m_columnPatterns.clear();
 }
 
+QRegularExpression stringRegExp(const QString& pattern, Qt::CaseSensitivity caseSensitivity)
+{
+    QString escapedPattern = QRegularExpression::escape(pattern);
+    QRegularExpression regExp(escapedPattern);
+    if (caseSensitivity == Qt::CaseInsensitive) {
+        regExp.setPatternOptions(QRegularExpression::CaseInsensitiveOption);
+    }
+
+    return regExp;
+}
+
 void NsSortFilterProxyModel::filterAction(QString s)
 {
     this->clearFilterKeyColumn();
@@ -108,7 +119,7 @@ void NsSortFilterProxyModel::filterAction(QString s)
         }
 
         /* Set search text */
-        QRegExp regExp(s, Qt::CaseInsensitive, QRegExp::FixedString);
+        QRegularExpression regExp = stringRegExp(s, Qt::CaseInsensitive);
 
         /* Set search column */
         int col = toLintHeader(cat);
@@ -139,7 +150,7 @@ bool NsSortFilterProxyModel::filterAcceptsRow(int sourceRow,
     //        return QSortFilterProxyModel::filterAcceptsRow(sourceRow, sourceParent);
 
     bool result = false;
-    for (QMap<qint32, QRegExp>::const_iterator iter = m_columnPatterns.constBegin();
+    for (QMap<qint32, QRegularExpression>::const_iterator iter = m_columnPatterns.constBegin();
         iter != m_columnPatterns.constEnd();
         ++iter)
     {
diff --git i/src/sw/noc_dev/SCFNocStudio/Gui/DRC/NsSortFilterProxyModel.h w/src/sw/noc_dev/SCFNocStudio/Gui/DRC/NsSortFilterProxyModel.h
index 9060b3e836e..cd6d0400692 100644
--- i/src/sw/noc_dev/SCFNocStudio/Gui/DRC/NsSortFilterProxyModel.h
+++ w/src/sw/noc_dev/SCFNocStudio/Gui/DRC/NsSortFilterProxyModel.h
@@ -47,7 +47,7 @@ public:
      * @param column
      * @param pattern
      */
-    void addFilterFixedString(qint32 column, const QRegExp& pattern);
+    void addFilterFixedString(qint32 column, const QRegularExpression& pattern);
 
     /**
      * @brief append the fixed string used to filter the contents of the source model
@@ -55,7 +55,7 @@ public:
      * @param column
      * @param pattern
      */
-    void appendFilterKeyColumn(qint32 column, const QRegExp& pattern);
+    void appendFilterKeyColumn(qint32 column, const QRegularExpression& pattern);
 
     /**
      * @brief clear all filter Key Column
@@ -90,7 +90,7 @@ protected:
 
 private:
     QObject* view;
-    QMap<qint32, QRegExp> m_columnPatterns;
+    QMap<qint32, QRegularExpression> m_columnPatterns;
 };
 
 class MainWindow;
diff --git i/src/sw/noc_dev/SCFNocStudio/Gui/DRC/treemodel.cpp w/src/sw/noc_dev/SCFNocStudio/Gui/DRC/treemodel.cpp
index 0275d710e6a..ba4594ed630 100644
--- i/src/sw/noc_dev/SCFNocStudio/Gui/DRC/treemodel.cpp
+++ w/src/sw/noc_dev/SCFNocStudio/Gui/DRC/treemodel.cpp
@@ -135,7 +135,7 @@ QVariant TreeModel::data(const QModelIndex& index, int role) const
 Qt::ItemFlags TreeModel::flags(const QModelIndex & index) const
 {
     if (!index.isValid())
-        return 0;
+        return Qt::ItemFlags(0);
 
     Qt::ItemFlags flags = Qt::ItemIsEnabled | Qt::ItemIsSelectable;
 
@@ -516,4 +516,4 @@ void TreeModel::fetchMore(const QModelIndex & parent)
     itemsCount += itemsToFetch;
     parentItem->setItemsCount(itemsCount);
     endInsertRows();
-}
\ No newline at end of file
+}
diff --git i/src/sw/noc_dev/SCFNocStudio/Gui/Item/NsBridgeDiagram.cpp w/src/sw/noc_dev/SCFNocStudio/Gui/Item/NsBridgeDiagram.cpp
index 3c18762e466..579582e9686 100644
--- i/src/sw/noc_dev/SCFNocStudio/Gui/Item/NsBridgeDiagram.cpp
+++ w/src/sw/noc_dev/SCFNocStudio/Gui/Item/NsBridgeDiagram.cpp
@@ -97,7 +97,7 @@ void NsRouterDiagram::drawFeedBackArrow(int dir, QLineF & line, const NetSpeed::
     const QPointF arrowLength = QPointF(29, 0);
     auto arrowHeadLine = QLineF(path.pointAtPercent(0),
         path.pointAtPercent(0) + arrowLength);
-    QMatrix matrix;
+    QTransform matrix;
     QPoint start = line.p1().toPoint();
     matrix.translate(start.x(), start.y());
     // Rotate clockwise
@@ -198,7 +198,7 @@ void NsRouterDiagramVC::paint(QPainter * painter, const QStyleOptionGraphicsItem
     Q_UNUSED(widget);
 
     // To fix problem which makes QPainter does not draw arrow tail
-    painter->setRenderHint(QPainter::Qt4CompatiblePainting);
+    //painter->setRenderHint(QPainter::Qt4CompatiblePainting);
 
     auto arrowPath = path();
     bool selected = isSelected();
@@ -293,7 +293,7 @@ void NsRouterDiagram::drawVcLabel(QLineF & line, QString vcName, QPainterPath &
 
     QPainterPath p;
     p.addText(xMargin, yMargin, font, vcName);
-    QMatrix matrix;
+    QTransform matrix;
     auto transPoint = end + adjustPoint;
     matrix.translate(transPoint.x(), transPoint.y());
     matrix.rotate(rotationAngle);
@@ -400,14 +400,14 @@ void NsBridgeDiagram::initData() {
 
     // max width of vc name
     for (const auto& vc : allVcs) {
-        int width = fontMetrics.width(QString::fromStdString(vc->name()));
+        int width = fontMetrics.tightBoundingRect(QString::fromStdString(vc->name())).width();
         maxWidthVcName = std::max(maxWidthVcName, width);
         maxVCsPenWidth = std::max(maxVCsPenWidth, vc->get_width());
     }
 
     //Get maximum width of ifce names
     for (auto const& ifce : allIfces) {
-        int width = fontMetrics.width(QString::fromStdString(ifce->if_name()));
+        int width = fontMetrics.tightBoundingRect(QString::fromStdString(ifce->if_name())).width();
         maxWidthIfceName = std::max(maxWidthIfceName, width);
         maxIFCEPenWidth = std::max(maxIFCEPenWidth, ifce->get_if_msg_width_cached());
     }
@@ -601,7 +601,7 @@ void NsRouterDiagram::initData()
             font.setPixelSize(nameSize);
             QString name = QString::fromStdString(vc.name());
 
-            int width = QFontMetrics(font).width(name) + vcLength;
+            int width = QFontMetrics(font).tightBoundingRect(name).width() + vcLength;
             qreal transition = qMin(vcBodyLine * v.as_int() + spacing, rp.size);
             QPoint startL, endL;
             NetSpeed::Port_id rp_id = (out) ?
@@ -885,7 +885,7 @@ void NsRouterPolyGon::drawTextRouterDiagram(QPainter & painter, NetSpeed::Port_i
             (rp.size / 2 - rp.north_port_length) *
             diagramTextFactor));
         painter.rotate(-45);
-        painter.drawText(painter.fontMetrics().width("North West (J)") *
+        painter.drawText(painter.fontMetrics().tightBoundingRect("North West (J)").width() *
             -diagramTextFactor, yOffsetMargin,
             QString("North West (J)"));
         painter.restore();
@@ -899,7 +899,7 @@ void NsRouterPolyGon::drawTextRouterDiagram(QPainter & painter, NetSpeed::Port_i
             (rp.size / 2 - rp.north_port_length) *
             diagramTextFactor));
         painter.rotate(45);
-        painter.drawText(painter.fontMetrics().width("North East (K)") *
+        painter.drawText(painter.fontMetrics().tightBoundingRect("North East (K)").width() *
             -diagramTextFactor, yOffsetMargin,
             QString("North East (K)"));
         painter.restore();
@@ -914,7 +914,7 @@ void NsRouterPolyGon::drawTextRouterDiagram(QPainter & painter, NetSpeed::Port_i
             (rp.size / 2 - rp.north_port_length) *
             diagramTextFactor));
         painter.rotate(-45);
-        painter.drawText(painter.fontMetrics().width("South East (H)") *
+        painter.drawText(painter.fontMetrics().tightBoundingRect("South East (H)").width() *
             -diagramTextFactor, -tolerance,
             QString("South East (H)"));
         painter.restore();
@@ -929,7 +929,7 @@ void NsRouterPolyGon::drawTextRouterDiagram(QPainter & painter, NetSpeed::Port_i
             (rp.size / 2 - rp.north_port_length) *
             diagramTextFactor));
         painter.rotate(45);
-        painter.drawText(painter.fontMetrics().width("South West (I)") *
+        painter.drawText(painter.fontMetrics().tightBoundingRect("South West (I)").width() *
             -diagramTextFactor, -tolerance,
             QString("South West (I)"));
         painter.restore();
@@ -1133,11 +1133,11 @@ void NsRegbusRing::initData() {
     font.setBold(true);
     QFontMetrics metric = QFontMetrics(font);
     QString label = "Regbus Ring for node " + QString::number(regbus_ring_postion.id());
-    const int labelWidth = metric.width(label);
-    const int ringMasterNameWidth = metric.width(masterName);
+    const int labelWidth = metric.tightBoundingRect(label).width();
+    const int ringMasterNameWidth = metric.tightBoundingRect(masterName).width();
     int maxWidth = std::max(labelWidth, ringMasterNameWidth);
     for (auto const& it : ring_slaves)
-        maxWidth = std::max(metric.width(QString::fromStdString(it->name())),
+        maxWidth = std::max(metric.tightBoundingRect(QString::fromStdString(it->name())).width(),
             maxWidth);
     maxWidth += sidesMargin;
 
@@ -1515,7 +1515,7 @@ void NsMeshSplitDiagram::generateChildrenItems()
         ingressForwardArrowPath = drawNormalArrow(line);
         //Ingress text
         ingressPath.addText(0, 0, font, ingressText);
-        QMatrix iMatrix;
+        QTransform iMatrix;
         auto transPoint = line.p2() + QPointF(-fontSize / 2, fontSize);
         iMatrix.translate(transPoint.x(), transPoint.y());
         iMatrix.rotate(90);
@@ -1529,7 +1529,7 @@ void NsMeshSplitDiagram::generateChildrenItems()
         arrowOutPath = drawNormalArrow(line);
         arrowOutTt = QString::fromStdString(router->get_tx_port(NetSpeed::NORTH_PORT)->get_adj_rx_port()->get_vc(NetSpeed::VC_id(0)).get_tooltip());
         //Egress text
-        QMatrix eMatrix;
+        QTransform eMatrix;
         egressPath.addText(0, 0, font, egressText);
         transPoint = QPointF(arrowOutStartPoint.x() - fontSize / 2,
             routerRecBox.center().y());
@@ -1569,7 +1569,7 @@ void NsMeshSplitDiagram::generateChildrenItems()
         ingressForwardArrowPath = drawNormalArrow(line);
         //Ingress text
         ingressPath.addText(0, 0, font, ingressText);
-        QMatrix iMatrix;
+        QTransform iMatrix;
         auto transPoint = line.p2() + QPointF(fontSize / 2, -fontSize);
         iMatrix.translate(transPoint.x(), transPoint.y());
         iMatrix.rotate(-90);
@@ -1578,7 +1578,7 @@ void NsMeshSplitDiagram::generateChildrenItems()
         linePath.moveTo(arrowInStartPoint);
         linePath.quadTo(controlPoint, arrowOutStartPoint);
         //Egress text
-        QMatrix eMatrix;
+        QTransform eMatrix;
         egressPath.addText(0, 0, font, egressText);
         transPoint = QPointF(arrowOutStartPoint.x() + fontSize / 2,
             routerRecBox.center().y());
@@ -1611,7 +1611,7 @@ void NsMeshSplitDiagram::generateChildrenItems()
         ingressForwardArrowPath = drawNormalArrow(line);
         //Ingress text
         ingressPath.addText(0, 0, font, ingressText);
-        QMatrix iMatrix;
+        QTransform iMatrix;
         auto transPoint = line.p2() + QPointF(-fontSize, fontSize / 2)
             - QPointF(ingressPath.boundingRect().width(), 0);
         iMatrix.translate(transPoint.x(), transPoint.y());
@@ -1625,7 +1625,7 @@ void NsMeshSplitDiagram::generateChildrenItems()
         linePath.moveTo(arrowInStartPoint);
         linePath.quadTo(controlPoint, arrowOutStartPoint);
         //Egress text
-        QMatrix eMatrix;
+        QTransform eMatrix;
         egressPath.addText(0, 0, font, egressText);
         transPoint = QPointF(routerRecBox.center().x() -
             fontSize - egressPath.boundingRect().width(),
@@ -1663,12 +1663,12 @@ void NsMeshSplitDiagram::generateChildrenItems()
         ingressForwardArrowPath = drawNormalArrow(line);
         //Ingress text
         ingressPath.addText(0, 0, font, ingressText);
-        QMatrix iMatrix;
+        QTransform iMatrix;
         auto transPoint = line.p2() + QPointF(fontSize, -fontSize / 2);
         iMatrix.translate(transPoint.x(), transPoint.y());
         ingressPath = iMatrix.map(ingressPath);
         //Egress text
-        QMatrix eMatrix;
+        QTransform eMatrix;
         egressPath.addText(0, 0, font, egressText);
         transPoint = QPointF(routerRecBox.center().x() -
             fontSize,
@@ -1754,7 +1754,7 @@ void NsLinkDiagram::initData()
         if (!vc || !vc->is_active()) continue;
         vcs.push_back(vc);
         maxVCsPenWidth = std::max(maxVCsPenWidth, vc->get_width());
-        const int txtSize = metric.width(QString::fromStdString(vc->name()));
+        const int txtSize = metric.tightBoundingRect(QString::fromStdString(vc->name())).width();
         maxVCNameLength = std::max(maxVCNameLength, txtSize);
     }
 
@@ -1930,14 +1930,14 @@ void NsRSSBDiagram::initRssbBridgeData()
 
     // max width of vc name
     for (const auto& vc : allVcs) {
-        int width = fontMetrics.width(QString::fromStdString(vc->name()));
+        int width = fontMetrics.tightBoundingRect(QString::fromStdString(vc->name())).width();
         maxWidthVcName = std::max(maxWidthVcName, width);
         maxVCsPenWidth = std::max(maxVCsPenWidth, vc->get_width());
     }
 
     //Get maximum width of ifce names
     for (auto const& ifce : allIfces) {
-        int width = fontMetrics.width(QString::fromStdString(ifce->if_name()));
+        int width = fontMetrics.tightBoundingRect(QString::fromStdString(ifce->if_name())).width();
         maxWidthIfceName = std::max(maxWidthIfceName, width);
         maxIFCEPenWidth = std::max(maxIFCEPenWidth, ifce->get_if_msg_width_cached());
     }
diff --git i/src/sw/noc_dev/SCFNocStudio/Gui/Item/NsHost.cpp w/src/sw/noc_dev/SCFNocStudio/Gui/Item/NsHost.cpp
index fe1c1101183..8197150c478 100644
--- i/src/sw/noc_dev/SCFNocStudio/Gui/Item/NsHost.cpp
+++ w/src/sw/noc_dev/SCFNocStudio/Gui/Item/NsHost.cpp
@@ -493,7 +493,7 @@ NsStorageComponents::NsStorageComponents(const std::vector<std::unique_ptr<NetSp
     const qreal cosmeticMargin = (BRIDGE_SIZE - metric.height()) / 2;
     for(auto const& component : components){
         auto name = QString::fromStdString(component->full_name());
-        auto const nameWidth = metric.width(name);
+        auto const nameWidth = metric.tightBoundingRect(name).width();
         if(nameWidth >= maxWidth) {
             name = metric.elidedText(name, Qt::ElideRight, maxWidth);
             textWidth = maxWidth;
diff --git i/src/sw/noc_dev/SCFNocStudio/Gui/Item/NsMesh.cpp w/src/sw/noc_dev/SCFNocStudio/Gui/Item/NsMesh.cpp
index 3458852ebc5..f8f9c5d9e40 100644
--- i/src/sw/noc_dev/SCFNocStudio/Gui/Item/NsMesh.cpp
+++ w/src/sw/noc_dev/SCFNocStudio/Gui/Item/NsMesh.cpp
@@ -28,6 +28,7 @@
 #include <QStaticText>
 #include <QApplication>
 #include <QGraphicsSceneContextMenuEvent>
+#include <QTransform>
 
  //extern const int NODE_SIZE;
 using namespace NetSpeed;
@@ -591,7 +592,7 @@ void NsMesh::displayLayerInfo()
     layerName->setFont(layerNameFont);
     layerName->setPos(rectText.x(), rectText.y());
     layerName->setParentItem(this);
-    auto layerNameWidth = layerNameFontMetric.width(layerName->toPlainText());
+    auto layerNameWidth = layerNameFontMetric.tightBoundingRect(layerName->toPlainText()).width();
     currentTextStopPoint.setX(layerName->pos().rx() + layerNameWidth);
 
     const int textMargin = 5;
@@ -604,7 +605,7 @@ void NsMesh::displayLayerInfo()
         textMode->setParentItem(this);
         auto textStartPoint = currentTextStopPoint.rx() + textMargin;
         textMode->setPos(textStartPoint, rectText.y());
-        currentTextStopPoint.setX(textStartPoint + layerNameFontMetric.width(textMode->toPlainText()));
+        currentTextStopPoint.setX(textStartPoint + layerNameFontMetric.tightBoundingRect(textMode->toPlainText()).width());
     }
     // display layer's buffer-cost and link-cost
     // get buffer cost, link cost
@@ -617,13 +618,13 @@ void NsMesh::displayLayerInfo()
             linkBufferFont.setPixelSize(BUFFER_TEXT_SIZE);
             const QString txt = linkBufferCost->toPlainText();
             const int currentStop = currentTextStopPoint.rx();
-            while ((currentStop + textMargin + QFontMetricsF(linkBufferFont).width(txt)) > bufferEndPoint.rx()) {
+            while ((currentStop + textMargin + QFontMetricsF(linkBufferFont).tightBoundingRect(txt).width()) > bufferEndPoint.rx()) {
                 auto pixel = linkBufferFont.pixelSize() - 1;
                 if (pixel < 1) break;
                 linkBufferFont.setPixelSize(pixel);
             }
             linkBufferCost->setFont(linkBufferFont);
-            auto const linkBufferCostWidth = QFontMetricsF(linkBufferFont).width(txt);
+            auto const linkBufferCostWidth = QFontMetricsF(linkBufferFont).tightBoundingRect(txt).width();
             if ((currentTextStopPoint.rx() + textMargin) > bufferEndPoint.rx())
                 linkBufferCost->setPos(currentTextStopPoint.rx() + linkBufferCostWidth + textMargin, rectText.y() + textMargin);
             else linkBufferCost->setPos(bufferEndPoint.rx() - linkBufferCostWidth, rectText.y() + textMargin);
@@ -807,10 +808,10 @@ NsSectorName::NsSectorName(const std::string& sName, const Node_id &tLeft, int w
         textFont.setPixelSize(qMax(15, qMin(30, (h * NODE_SIZE) / 10)));
         QFontMetricsF metric(textFont);
         auto sectorH = sector.height();
-        if(metric.width(sectorName) > sectorH) sectorName = metric.elidedText(sectorName, Qt::ElideRight, sectorH);
-        auto textWidth = metric.width(sectorName);
+        if(metric.tightBoundingRect(sectorName).width() > sectorH) sectorName = metric.elidedText(sectorName, Qt::ElideRight, sectorH);
+        auto textWidth = metric.tightBoundingRect(sectorName).width();
         namePath.addText(QPointF(0, 0), textFont, sectorName);
-        QMatrix matrix;
+        QTransform matrix;
         auto point = (angle < 0) ? startPoint - (sectorH - textWidth)/2 : startPoint + (sectorH - textWidth)/2;
         matrix.translate(distance, point);
         matrix.rotate(angle);
diff --git i/src/sw/noc_dev/SCFNocStudio/Gui/Item/NsMultipleBridges.cpp w/src/sw/noc_dev/SCFNocStudio/Gui/Item/NsMultipleBridges.cpp
index e57fdac72df..aeaa725153c 100644
--- i/src/sw/noc_dev/SCFNocStudio/Gui/Item/NsMultipleBridges.cpp
+++ w/src/sw/noc_dev/SCFNocStudio/Gui/Item/NsMultipleBridges.cpp
@@ -39,7 +39,7 @@ NsMultipleBridges::NsMultipleBridges(const QPoint pos, const QVector<NetSpeed::B
     QPoint start(STRECH_MUL_BRI / 2, HEADER_MUL_BRI_HIG + STRECH_MUL_BRI / 2 + DIAGRAM_NAME_SIZE);
     for(auto const& br : bridges) {
         QString name = QString::fromStdString(br->name());
-        int w = fm.width(name) + BRIDGE_SIZE + 2;
+        int w = fm.tightBoundingRect(name).width() + BRIDGE_SIZE + 2;
         width = width > w ? width : w;
         /* Create Bridge item */
         NsNormalBridge* bridge = new NsNormalBridge(br, layerID);
@@ -199,7 +199,7 @@ NsSocViewMultipleBridges::NsSocViewMultipleBridges(const std::vector<NetSpeed::B
     for (auto br : bridges)
     {
         QString name = QString::fromStdString(br->name());
-        int w = fm.width(name) + bridge_edge_len * SOC_VIEW_UNIT + 2;
+        int w = fm.tightBoundingRect(name).width() + bridge_edge_len * SOC_VIEW_UNIT + 2;
         width = width > w ? width : w;
         /* Create Bridge item */
         NsSocViewBridge* bridge = new NsSocViewBridge(br);
diff --git i/src/sw/noc_dev/SCFNocStudio/Gui/Item/NsPlusItem.cpp w/src/sw/noc_dev/SCFNocStudio/Gui/Item/NsPlusItem.cpp
index 1b210ee0a1c..71ad3b9f989 100644
--- i/src/sw/noc_dev/SCFNocStudio/Gui/Item/NsPlusItem.cpp
+++ w/src/sw/noc_dev/SCFNocStudio/Gui/Item/NsPlusItem.cpp
@@ -188,7 +188,7 @@ void NsSocViewPlusItem::mousePressEvent(QGraphicsSceneMouseEvent* event)
         {
             if (!(socScene->getConsole()->is_nogui_mode()))
             {
-                auto* mulBris = new NsSocViewMultipleBridges(bridgeList.toStdVector());
+                auto* mulBris = new NsSocViewMultipleBridges(std::vector<NetSpeed::Bridge *>(bridgeList.begin(), bridgeList.end()));
                 mulBris->setGroup(this->group());
                 mulBris->hide();
                 connect(this, SIGNAL(triggered(bool)), mulBris, SLOT(visibleChanged(bool)));
diff --git i/src/sw/noc_dev/SCFNocStudio/Gui/Item/NsSocViewBoundingBox.cpp w/src/sw/noc_dev/SCFNocStudio/Gui/Item/NsSocViewBoundingBox.cpp
index 2b5409e2bce..3807c189b3e 100644
--- i/src/sw/noc_dev/SCFNocStudio/Gui/Item/NsSocViewBoundingBox.cpp
+++ w/src/sw/noc_dev/SCFNocStudio/Gui/Item/NsSocViewBoundingBox.cpp
@@ -143,7 +143,7 @@ void NsSocViewBoundingBox::sceneScaleChanged(double newScale)
     auto r = rect();
     int maxDimension = std::max(r.width(), r.height());
     // measure size of text to get closest that ticks can be packed
-    const auto labelWidth = QFontMetrics(scaleFont).width(QString("00%1").arg(maxDimension));
+    const auto labelWidth = QFontMetrics(scaleFont).tightBoundingRect(QString("00%1").arg(maxDimension)).width();
 
     // target step size is widest dimension of label at new scale (zoom level)
     const auto targetStep = roundUpToMultiple((labelWidth + 20) / newScale,
diff --git i/src/sw/noc_dev/SCFNocStudio/Gui/Item/NsSocViewHost.cpp w/src/sw/noc_dev/SCFNocStudio/Gui/Item/NsSocViewHost.cpp
index 5d296c31ca6..8d3bdeae550 100644
--- i/src/sw/noc_dev/SCFNocStudio/Gui/Item/NsSocViewHost.cpp
+++ w/src/sw/noc_dev/SCFNocStudio/Gui/Item/NsSocViewHost.cpp
@@ -155,7 +155,7 @@ void NsSocViewHost::mouseReleaseEvent(QGraphicsSceneMouseEvent * event)
     if (false && event->modifiers().testFlag(Qt::ControlModifier)) {
         QString clone_name;
         bool ok;
-        Qt::WindowFlags flags = 0;
+        Qt::WindowFlags flags = Qt::Widget;
         auto mw = socView->getMainWindow();
         if (mw && !mw->isHiddenDesignReview())
             flags |= Qt::WindowStaysOnTopHint;
diff --git i/src/sw/noc_dev/SCFNocStudio/Gui/Item/NsVC.cpp w/src/sw/noc_dev/SCFNocStudio/Gui/Item/NsVC.cpp
index b2347951d33..9c3c5880c21 100644
--- i/src/sw/noc_dev/SCFNocStudio/Gui/Item/NsVC.cpp
+++ w/src/sw/noc_dev/SCFNocStudio/Gui/Item/NsVC.cpp
@@ -591,16 +591,16 @@ NsILDCLAbel::NsILDCLAbel(const QString text, const QLineF& line, NsVC *parent) :
     f.setPixelSize(fontSize);
     setFont(f);
     QFontMetricsF fm(f);
-    const qreal txtWidth = fm.width(text);
+    const qreal txtWidth = fm.tightBoundingRect(text).width();
     const int limit = line.length() / 2;
     if(txtWidth > limit) setPlainText(fm.elidedText(text, Qt::ElideRight, limit));
     const int angle = line.angle();
     QPointF p;
     if (isVertical(angle)) { //Is vertical
         setTransform(QTransform().rotate(270), true);
-        p = line.center() + QPointF(-boundingRect().height(), fm.width(toPlainText()) / 2);
+        p = line.center() + QPointF(-boundingRect().height(), fm.tightBoundingRect(toPlainText()).width() / 2);
     }
-    else p = line.center() - QPointF(fm.width(toPlainText()) / 2, 2);
+    else p = line.center() - QPointF(fm.tightBoundingRect(toPlainText()).width() / 2, 2);
     setPos(p);
 }
 
diff --git i/src/sw/noc_dev/SCFNocStudio/Gui/LintDashboard.cpp w/src/sw/noc_dev/SCFNocStudio/Gui/LintDashboard.cpp
index 8e8f30d33d5..4a15f1af7ce 100644
--- i/src/sw/noc_dev/SCFNocStudio/Gui/LintDashboard.cpp
+++ w/src/sw/noc_dev/SCFNocStudio/Gui/LintDashboard.cpp
@@ -192,7 +192,7 @@ void LintDashboard::reFocusAct() {
     if (!isParent) {
         int childIndex = std::get<2>(row4ReFocus);
         table->expand(parentModel);
-        scrollAndFocus(parentModel.child(childIndex, 0));
+        scrollAndFocus(parentModel.model()->index(childIndex, 0));
     }
     else scrollAndFocus(parentModel);
 }
@@ -306,7 +306,7 @@ void LintDashboard::upgradeIdSlot()
     /* Apply upgrade_warning cmd for selected warning items */
     if (mainWindow && mainWindow->getConsole())
     {
-        QString cmd = QString(CMD_UPGRADE_WARNING) + tr(" -id %1").arg(QStringList(ids.toList()).join(" "));
+        QString cmd = QString(CMD_UPGRADE_WARNING) + tr(" -id %1").arg(QStringList(ids.begin(), ids.end()).join(" "));
         mainWindow->getConsole()->applyCmd(cmd);
     }
 }
@@ -326,7 +326,7 @@ void LintDashboard::downgradeIdSlot()
     /* Apply upgrade_warning cmd for selected warning items */
     if (mainWindow && mainWindow->getConsole())
     {
-        QString cmd = QString(CMD_RESET_UPGRADE_WARNING) + tr(" -id %1").arg(QStringList(ids.toList()).join(" "));
+        QString cmd = QString(CMD_RESET_UPGRADE_WARNING) + tr(" -id %1").arg(QStringList(ids.begin(), ids.end()).join(" "));
         mainWindow->getConsole()->applyCmd(cmd);
     }
 }
@@ -342,7 +342,7 @@ void LintDashboard::waiveItemSlot()
     foreach(QModelIndex row, idIndexes)
     {
         QString msg = row.data().toString();
-        QStringList list = msg.split(QRegExp("[\r\n]"));
+        QStringList list = msg.split(QRegularExpression("[\r\n]"));
         auto txt = list.at(0);
         strings.insert(QString("add_%1r -string {%2}")
             .arg(prefix.toLower())
@@ -353,7 +353,7 @@ void LintDashboard::waiveItemSlot()
     if (!mainWindow) return;
     auto console = mainWindow->getConsole();
     if (console) {
-        QString cmds = QStringList(strings.toList()).join("\n");
+        QString cmds = QStringList(strings.begin(), strings.end()).join("\n");
         console->applyCmd(cmds);
     }
 }
@@ -374,7 +374,7 @@ void LintDashboard::waiveIdSlot()
     /* Apply waive/unwaive cmd for IDs */
     if (mainWindow && mainWindow->getConsole())
     {
-        QString cmd = tr("add_%1r -id ").arg(prefix.toLower()) + QStringList(ids.toList()).join(" ");
+        QString cmd = tr("add_%1r -id ").arg(prefix.toLower()) + QStringList(ids.begin(), ids.end()).join(" ");
         mainWindow->getConsole()->applyCmd(cmd);
     }
 }
@@ -386,7 +386,7 @@ void LintDashboard::waiveCategorySlot() {
 
     // apply waive/unwaive cmd for categories
     if (mainWindow && mainWindow->getConsole()) {
-        QString cmd = tr("add_%1r -cat ").arg(prefix.toLower()) + QStringList(categories.toList()).join(" ");
+        QString cmd = tr("add_%1r -cat ").arg(prefix.toLower()) + QStringList(categories.begin(), categories.end()).join(" ");
         mainWindow->getConsole()->applyCmd(cmd);
     }
 }
@@ -451,7 +451,7 @@ void LintDashboard::waiveButtonClicked()
                 if (row.column() == LINT_MES)
                 {
                     QString msg = row.data().toString();
-                    QStringList list = msg.split(QRegExp("[\r\n]"));
+                    QStringList list = msg.split(QRegularExpression("[\r\n]"));
                     auto txt = list.at(0);
                     if (listCmd.contains(txt)) continue;
                     string << (" {" + txt + "}");
@@ -760,7 +760,7 @@ TitleBar::TitleBar(bool addClose, QWidget * parent)
 
     QHBoxLayout* layout = new QHBoxLayout(this);
     layout->setSpacing(0);
-    layout->setMargin(0);
+    //layout->setMargin(0);
     layout->setContentsMargins(0, 0, 0, 0);
     layout->addWidget(floatBt, 0, Qt::AlignRight);
     if (addClose)
diff --git i/src/sw/noc_dev/SCFNocStudio/Gui/Models/propertytablemodel.cpp w/src/sw/noc_dev/SCFNocStudio/Gui/Models/propertytablemodel.cpp
index 0448bd40352..5076b893bfb 100644
--- i/src/sw/noc_dev/SCFNocStudio/Gui/Models/propertytablemodel.cpp
+++ w/src/sw/noc_dev/SCFNocStudio/Gui/Models/propertytablemodel.cpp
@@ -14,7 +14,7 @@ static bool run_cmd(std::string cmd) {
     QString cmdTmp;
     cmdTmp.append(QString::fromStdString(cmd));
     // add bracket to support uppercase
-    QStringList cmds = cmdTmp.split(" ", QString::SkipEmptyParts);
+    QStringList cmds = cmdTmp.split(" ", Qt::SkipEmptyParts);
     if (cmds[0] == "host_prop") {
         // command: host_prop <host_name_old> host_name <host_name_new>
         if (cmds[2] == "host_name") cmdTmp = cmds[0] + " {" + cmds[1] + "} " + cmds[2] + " {" + cmds[3] + "}";
diff --git i/src/sw/noc_dev/SCFNocStudio/Gui/NsTypes.cpp w/src/sw/noc_dev/SCFNocStudio/Gui/NsTypes.cpp
index 12a2828e0e1..c5cefc89453 100644
--- i/src/sw/noc_dev/SCFNocStudio/Gui/NsTypes.cpp
+++ w/src/sw/noc_dev/SCFNocStudio/Gui/NsTypes.cpp
@@ -13,8 +13,10 @@
 #include <QGraphicsItem>
 #include <QSplashScreen>
 #include <QApplication>
-#include <QDesktopWidget>
+//#include <QDesktopWidget>
+#include <QGuiApplication>
 #include <QStyleOptionGraphicsItem>
+#include <QRegularExpression>
 
 #include <cmath>
 #include <regex>
@@ -229,7 +231,7 @@ void drawAutoFitText(const QString & text, const QRectF & itemRect, QPainter * p
     QFont measureFont = painter->font();
     measureFont.setPointSizeF(FLOOR_PLAN_DEFAULT_TEXT_SIZE);
     QFontMetrics metrics(measureFont);
-    if (itemRect.width() < metrics.width(text) || itemRect.height() < FLOOR_PLAN_DEFAULT_TEXT_SIZE) {
+    if (itemRect.width() < metrics.tightBoundingRect(text).width() || itemRect.height() < FLOOR_PLAN_DEFAULT_TEXT_SIZE) {
         const float hmargin = 0.1 * itemRect.width();// horizontal margin of 10% host width
         const auto brect = itemRect.adjusted(hmargin, 0, -hmargin, 0); //reduce rect by margin
         const int flags = Qt::TextDontClip | Qt::TextWordWrap; //more flags if needed
@@ -316,7 +318,7 @@ bool imgSave(QImage * img, const QString & absFilePath, const QString & extensio
 QString wrapTextForTooltip(const QString & text, int width)
 {
     QFontMetrics fm(QToolTip::font());
-    const int row = fm.width(text) / width;
+    const int row = fm.tightBoundingRect(text).width() / width;
     if (row <= 1) return text;
     const int col = text.length() / row;
     QString tempStr = text;
@@ -451,11 +453,11 @@ double fontSizeCheck(double size)
 
 QStringList extractNumberFromString(QString str) {
     QStringList result;
-    QRegExp rx("(\\d+)");
-    int pos = 0;
-    while ((pos = rx.indexIn(str, pos)) != -1) {
-        result << rx.cap(1);
-        pos += rx.matchedLength();
+    QRegularExpression rx("(\\d+)");
+    QRegularExpressionMatchIterator matchedIterator = rx.globalMatch(str);
+    while (matchedIterator.hasNext()) {
+        QRegularExpressionMatch match = matchedIterator.next();
+        result << match.captured(1);
     }
     return result;
 }
@@ -478,8 +480,8 @@ QSplashScreen* createSpashScreen() {
     //generate auto-sized splash image
     QPixmap splashImage = QPixmap(":/images/cfg.png");
     QWidget* screen = nullptr;
-    screen = QApplication::desktop()->screen(QApplication::desktop()->primaryScreen());//get primary screen (splash screen only displayed on primary)
-    if (QApplication::desktop()->screenCount() == 0 || screen == nullptr)//if there is no screen registered, calculate size based on font metrics
+    //screen = QApplication::desktop()->screen(QApplication::desktop()->primaryScreen());//get primary screen (splash screen only displayed on primary)
+    if (screen == nullptr)  // if there is no screen registered, calculate size based on font metrics
     {
         QFontMetrics fontMet = QFontMetrics(QFont("Gotham Rounded Book", 10, 10));
         splashImage = splashImage.scaledToHeight(fontMet.height() * 18);
diff --git i/src/sw/noc_dev/SCFNocStudio/Gui/View/NsChopview.cpp w/src/sw/noc_dev/SCFNocStudio/Gui/View/NsChopview.cpp
index a6701a12579..45f16ddd7aa 100644
--- i/src/sw/noc_dev/SCFNocStudio/Gui/View/NsChopview.cpp
+++ w/src/sw/noc_dev/SCFNocStudio/Gui/View/NsChopview.cpp
@@ -128,8 +128,8 @@ void NsChopView::mouseReleaseEvent(QMouseEvent *event)
 void NsChopView::wheelEvent(QWheelEvent *event)
 {
     if(event->modifiers().testFlag(Qt::ControlModifier)){
-        if(event->delta() > 0) zoom(ZOOM_STEP); // zoom in
-        if(event->delta() < 0) zoom(-ZOOM_STEP); // zoon out
+        if (event->angleDelta().y() > 0) zoom(ZOOM_STEP);  // zoom in
+        if (event->angleDelta().y() < 0) zoom(-ZOOM_STEP);  // zoon out
     }else NsView::wheelEvent(event);
 }
 
@@ -186,7 +186,7 @@ void NsSector::drawTransmissionQueue() {
     QFont font;
     font.setPixelSize(15);
     QFontMetricsF metric(font);
-    const qreal start = metric.width(text);
+    const qreal start = metric.tightBoundingRect(text).width();
     for(int shiftVal = 0; shiftVal <= delta.first; ++shiftVal){
         auto nodeShift = topLeft.shift(NetSpeed::Col_delta(shiftVal), NetSpeed::Row_delta(0));
         auto col = nodeShift.x();
@@ -199,7 +199,7 @@ void NsSector::drawTransmissionQueue() {
         path.moveTo(start, 0);
         path.lineTo(QPointF(length, 0));
         QPointF startPoint = QPointF(x, 0);
-        QMatrix matrix;
+        QTransform matrix;
         matrix.translate(startPoint.rx(), startPoint.ry());
         matrix.rotate(90);
         auto item = new NsTransmissionQueue(matrix.map(path), this);
@@ -267,9 +267,9 @@ void NsSector::drawNodeTexts(QPainterPath& path, const NetSpeed::Node_id node, c
     const QFontMetricsF metric(font);
     const double leftMargin = NODE_SIZE/2;
     const double fontHeight = metric.height();
-    if(metric.width(text) > leftMargin) text = metric.elidedText(text, Qt::ElideRight, leftMargin);
-    if (metric.width(stopIdText) > leftMargin) stopIdText = metric.elidedText(stopIdText, Qt::ElideRight, leftMargin);
-    if (metric.width(stopIdText) > leftMargin) instanceSuffix = metric.elidedText(instanceSuffix, Qt::ElideRight, leftMargin);
+    if(metric.tightBoundingRect(text).width() > leftMargin) text = metric.elidedText(text, Qt::ElideRight, leftMargin);
+    if (metric.tightBoundingRect(stopIdText).width() > leftMargin) stopIdText = metric.elidedText(stopIdText, Qt::ElideRight, leftMargin);
+    if (metric.tightBoundingRect(stopIdText).width() > leftMargin) instanceSuffix = metric.elidedText(instanceSuffix, Qt::ElideRight, leftMargin);
     const NetSpeed::orient orient = (router) ? router->get_orientation() : NetSpeed::orient::MX;
     switch (orient) {
     case NetSpeed::orient::R0: //Router at bottom left
@@ -299,7 +299,7 @@ void NsSector::updateSectorNameFontSize()
     QFontMetricsF metric(textFont);
     const qreal marginSectorNameX = 40;
     QString sName = name;
-    auto textWidth = metric.width(sName);
+    auto textWidth = metric.tightBoundingRect(sName).width();
     qreal sectorDisplayHeight = (bottomRight.y() - topLeft.y() - rows.size() + 1) * NODE_SIZE;
     qreal posY = 0;
     if(textWidth >= sectorDisplayHeight){
@@ -307,7 +307,7 @@ void NsSector::updateSectorNameFontSize()
         posY = sectorDisplayHeight;
     } else posY = (sectorDisplayHeight + textWidth)/2;
     qreal posX =  (-offset * NODE_SIZE) - marginSectorNameX;
-    QMatrix matrix;
+    QTransform matrix;
     matrix.translate(posX, posY);
     matrix.rotate(-90);
     QPainterPath path;
@@ -615,7 +615,7 @@ void NsChopViewBoundingBox::createVirtualRouterAndVC(const NetSpeed::internal_db
             NsTurnBackVcItem* turnBackVcItem = new NsTurnBackVcItem(vc, pos, true);
             turnBackVcItem->setZValue(NsChopView::LINK_ORDER);
             auto path = sector->lineUTurn(pos, vc);
-            QMatrix matrix;
+            QTransform matrix;
             auto pos = sector->pos();
             matrix.translate(pos.rx(), pos.ry());
             turnBackVcItem->setPath(matrix.map(path));
diff --git i/src/sw/noc_dev/SCFNocStudio/Gui/View/NsNocViewScene.cpp w/src/sw/noc_dev/SCFNocStudio/Gui/View/NsNocViewScene.cpp
index 8f27a2c11b5..90390a66a86 100644
--- i/src/sw/noc_dev/SCFNocStudio/Gui/View/NsNocViewScene.cpp
+++ w/src/sw/noc_dev/SCFNocStudio/Gui/View/NsNocViewScene.cpp
@@ -562,7 +562,7 @@ bool NsNocViewScene::applyCmd(QPointF scenePos)
 
         // for design view mode
         bool ok;
-        Qt::WindowFlags flags = 0;
+        Qt::WindowFlags flags = Qt::Widget;
         auto mw = nsWorkArea->getMainWindow();
         if (mw && !mw->isHiddenDesignReview())
             flags |= Qt::WindowStaysOnTopHint;
diff --git i/src/sw/noc_dev/SCFNocStudio/Gui/View/NsSocView.cpp w/src/sw/noc_dev/SCFNocStudio/Gui/View/NsSocView.cpp
index 2a5eedd9b02..a1fbde6da69 100644
--- i/src/sw/noc_dev/SCFNocStudio/Gui/View/NsSocView.cpp
+++ w/src/sw/noc_dev/SCFNocStudio/Gui/View/NsSocView.cpp
@@ -195,10 +195,10 @@ void NsSocView::wheelEvent(QWheelEvent * event)
 {
     if (event->modifiers().testFlag(Qt::ControlModifier))
     {
-        if (event->delta() > 0) {
+        if (event->angleDelta().y() > 0) {
             mainWindow->zoomInAct();
         }
-        else if (event->delta() < 0) {
+        else if (event->angleDelta().y() < 0) {
             mainWindow->zoomOutAct();
         }
     }
diff --git i/src/sw/noc_dev/SCFNocStudio/Gui/View/NsSocViewScene.cpp w/src/sw/noc_dev/SCFNocStudio/Gui/View/NsSocViewScene.cpp
index 23a1513590b..dde94e5908f 100644
--- i/src/sw/noc_dev/SCFNocStudio/Gui/View/NsSocViewScene.cpp
+++ w/src/sw/noc_dev/SCFNocStudio/Gui/View/NsSocViewScene.cpp
@@ -20,6 +20,8 @@
 #include "Domain.h"
 #include "Grid.h"
 #include "GenDoc.h"
+#include <QSet>
+#include <QList>
 
 using namespace std;
 const double NOC_TRANSPARENCY_IN_REGULAR_SOC_VIEW = 1;
@@ -368,7 +370,7 @@ void NsSocViewScene::createHosts()
             {
                 return b1.first.size() > b2.first.size();
             };
-            qSort(overlapRectList.begin(), overlapRectList.end(), sortSizeList);
+            std::sort(overlapRectList.begin(), overlapRectList.end(), sortSizeList);
             //Store background only item's ID number
             QList<int> backGroundOnly;
             //Counting current overlap item
@@ -448,7 +450,7 @@ void NsSocViewScene::createPlusItem(QVector<NetSpeed::Bridge*> overlappedbridgeL
     plus->setChecked(false);
     plus->setZValue(zPos);
     addItem(plus);
-    auto* mulBris = new NsSocViewMultipleBridges(overlappedbridgeList.toStdVector());
+    auto* mulBris = new NsSocViewMultipleBridges(std::vector<NetSpeed::Bridge *>(overlappedbridgeList.begin(), overlappedbridgeList.end()));
     mulBris->setHandlesChildEvents(false);
     mulBris->hide();
     connect(plus, SIGNAL(triggered(bool)), mulBris, SLOT(visibleChanged(bool)));
@@ -758,7 +760,7 @@ void NsSocViewScene::createRegionItems()
     regionColors.clear();
     if (!console || !console->get_container().get_grid()) return;
     int color = 1;
-    auto usedColors = regionColors.values().toSet();
+    auto usedColors = QSet<int>(regionColors.values().begin(), regionColors.values().end());
     //store region map
     QMap<std::string, NsSocViewRegion*> regionMap;
     for (const auto& region : console->get_container().get_grid()->get_phy_regions()) {
@@ -776,7 +778,7 @@ void NsSocViewScene::createRegionItems()
         for (auto rect : region.phy_poss) {
             auto regionItem = new NsSocViewRegion(QString::fromStdString(region.name), region, rect, rgbToColor(NetSpeed::color_choices[color].second));
             //store region Item for handling overlap
-            regionMap.insertMulti(region.name, regionItem);
+            regionMap.insert(region.name, regionItem);
             if (NetSpeed::Grid::region_view_show == NetSpeed::RegionShowForeground || imageSaving)
                 regionItem->setZValue(SocViewZValue::RegionForegroundZ);
             else if (NetSpeed::Grid::region_view_show == NetSpeed::RegionShowBackground)
@@ -785,13 +787,13 @@ void NsSocViewScene::createRegionItems()
         regionColors.insert(region.unified_domain->name, color++);
     }
     //Overlap region handler
-    auto keysList = regionMap.uniqueKeys();
+    auto keysList = regionMap.keys();
     for (auto it = keysList.begin(); it != keysList.end(); ++it)
     {
         //Gets current region list
         auto list = regionMap.values(it->data());
         //Iterates through current region list
-        for (auto regionItem : list)
+        for (auto& regionItem : list)
         {
             //Loop for same region name overlap
             for (auto nextRegionItem : list)
@@ -818,7 +820,7 @@ void NsSocViewScene::createRegionItems()
                 }
             }
             addItem(regionItem);
-            regions.insertMulti(it->data(), regionItem);
+            regions.insert(it->data(), regionItem);
         }
     }
     /* Re-use colors of deleted regions */
@@ -1065,7 +1067,7 @@ bool NsSocViewScene::applyCmd(QPointF positionF)
             NetSpeed::clamp(&position.rx(), 0, grid->get_soc_phy_size_x() - phy_width);
             NetSpeed::clamp(&position.ry(), 0, grid->get_soc_phy_size_y() - phy_height);
             bool ok;
-            Qt::WindowFlags flags = 0;
+            Qt::WindowFlags flags = Qt::Widget;
             auto mw = socView->getMainWindow();
             if (mw && !mw->isHiddenDesignReview())
                 flags |= Qt::WindowStaysOnTopHint;
diff --git i/src/sw/noc_dev/SCFNocStudio/Gui/View/NsView.cpp w/src/sw/noc_dev/SCFNocStudio/Gui/View/NsView.cpp
index 3355ececa45..e5acad20a16 100644
--- i/src/sw/noc_dev/SCFNocStudio/Gui/View/NsView.cpp
+++ w/src/sw/noc_dev/SCFNocStudio/Gui/View/NsView.cpp
@@ -48,7 +48,7 @@ double NsView::getZoomFactor() const
 
 void NsView::setZoomFactor(qreal value)
 {
-    resetMatrix();
+    resetTransform();
     scale(value, value);
 }
 
@@ -90,7 +90,7 @@ QRect NsView::visibleRect() const
 
 void NsView::sceneScaleChanged(double newScale)
 {
-    resetMatrix();
+    resetTransform();
     scale(newScale, newScale);
 }
 
@@ -129,4 +129,4 @@ void NsView::mouseReleaseEvent(QMouseEvent *event)
         }
     }
     QGraphicsView::mouseReleaseEvent(event);
-}
\ No newline at end of file
+}
diff --git i/src/sw/noc_dev/SCFNocStudio/Gui/View/NsWorkArea.cpp w/src/sw/noc_dev/SCFNocStudio/Gui/View/NsWorkArea.cpp
index e4f22b058f2..84de1c14778 100644
--- i/src/sw/noc_dev/SCFNocStudio/Gui/View/NsWorkArea.cpp
+++ w/src/sw/noc_dev/SCFNocStudio/Gui/View/NsWorkArea.cpp
@@ -317,10 +317,10 @@ void NsWorkArea::wheelEvent(QWheelEvent * event)
 {
     if (event->modifiers().testFlag(Qt::ControlModifier))
     {
-        if (event->delta() > 0) {
+        if (event->angleDelta().y() > 0) {
             mainWindow->zoomInAct();
         }
-        else if (event->delta() < 0) {
+        else if (event->angleDelta().y() < 0) {
             mainWindow->zoomOutAct();
         }
     }
diff --git i/src/sw/noc_dev/SCFNocStudio/Gui/dialogs.cpp w/src/sw/noc_dev/SCFNocStudio/Gui/dialogs.cpp
index 819dd28534b..adfcf26e458 100644
--- i/src/sw/noc_dev/SCFNocStudio/Gui/dialogs.cpp
+++ w/src/sw/noc_dev/SCFNocStudio/Gui/dialogs.cpp
@@ -326,7 +326,7 @@ TuneLinkDialog::TuneLinkDialog(QWidget * parent) : QDialog(parent)
     QGridLayout* buttonLayout = new QGridLayout;
     buttonLayout->addWidget(okButton, 0, 0, Qt::AlignRight);
     buttonLayout->addWidget(cancelButton, 0, 1, Qt::AlignLeft);
-    buttonLayout->setMargin(5);
+    //buttonLayout->setMargin(5);
 
     QVBoxLayout* mainLayout = new QVBoxLayout;
     mainLayout->addLayout(layout);
@@ -365,7 +365,7 @@ SizeDialog::SizeDialog(bool col, int val, QWidget * parent) : QDialog(parent)
     QGridLayout* buttonLayout = new QGridLayout;
     buttonLayout->addWidget(okButton, 0, 0, Qt::AlignRight);
     buttonLayout->addWidget(cancelButton, 0, 1, Qt::AlignLeft);
-    buttonLayout->setMargin(5);
+    //buttonLayout->setMargin(5);
 
     mainLayout->addLayout(layout);
     mainLayout->addLayout(buttonLayout);
@@ -565,7 +565,7 @@ ConfirmCreateHostDialog::ConfirmCreateHostDialog(QString mes, QWidget * parent)
     QGridLayout* buttonLayout = new QGridLayout;
     buttonLayout->addWidget(okButton, 0, 0, Qt::AlignRight);
     buttonLayout->addWidget(cancelButton, 0, 1, Qt::AlignLeft);
-    buttonLayout->setMargin(5);
+    //buttonLayout->setMargin(5);
 
     QVBoxLayout* mainLayout = new QVBoxLayout;
     mainLayout->addLayout(layout);
@@ -641,7 +641,7 @@ CreateHostFailureDialog::CreateHostFailureDialog(QString mes, QWidget * parent)
     QGridLayout* buttonLayout = new QGridLayout;
     buttonLayout->addWidget(okButton, 0, 0, Qt::AlignRight);
     buttonLayout->addWidget(cancelButton, 0, 1, Qt::AlignLeft);
-    buttonLayout->setMargin(5);
+    //buttonLayout->setMargin(5);
 
     QVBoxLayout* mainLayout = new QVBoxLayout;
     mainLayout->addLayout(layout);
@@ -904,7 +904,7 @@ CloseAppDialog::CloseAppDialog(QWidget * parent) : QDialog(parent)
     QGridLayout* buttonLayout = new QGridLayout;
     buttonLayout->addWidget(okButton, 0, 0, Qt::AlignRight);
     buttonLayout->addWidget(cancelButton, 0, 1, Qt::AlignLeft);
-    buttonLayout->setMargin(5);
+    //buttonLayout->setMargin(5);
 
     QVBoxLayout* mainLayout = new QVBoxLayout;
     mainLayout->addLayout(layout);
@@ -941,7 +941,7 @@ LicenseWarningDialog::LicenseWarningDialog(QWidget * parent) : QDialog(parent)
 
     QGridLayout * buttonLayout = new QGridLayout;
     buttonLayout->addWidget(okButton, 0, 0, Qt::AlignCenter);
-    buttonLayout->setMargin(5);
+    //buttonLayout->setMargin(5);
 
     QVBoxLayout * mainLayout = new QVBoxLayout;
     mainLayout->addLayout(layout);
@@ -975,7 +975,7 @@ AliasDialog::AliasDialog(QWidget * parent) : QDialog(parent)
     QGridLayout * buttonLayout = new QGridLayout;
     buttonLayout->addWidget(okButton, 0, 0, Qt::AlignRight);
     buttonLayout->addWidget(cancelButton, 0, 1, Qt::AlignLeft);
-    buttonLayout->setMargin(5);
+    //buttonLayout->setMargin(5);
 
     QVBoxLayout * mainLayout = new QVBoxLayout;
     mainLayout->addLayout(layout);
@@ -1122,7 +1122,7 @@ DesignReviewDialog::DesignReviewDialog(QString scripts, INIConsole * con) :conso
     setWindowIcon(QIcon(ICON_NOC_M1));
     setWindowFlags(getFlagsDialog());
     //move(QApplication::desktop()->screenGeometry().right(),QApplication::desktop()->screenGeometry().top());
-    move(QApplication::desktop()->screenGeometry().right() - size().width() - 10, QApplication::desktop()->screenGeometry().top() + 10);
+    move(QGuiApplication::primaryScreen()->geometry().right() - size().width() - 10, QGuiApplication::primaryScreen()->geometry().top() + 10);
 
     /* Add scripts into treeView (and check valid also) */
     QStringList arr = scripts.split("\n");
@@ -1360,14 +1360,14 @@ void DesignReviewDialog::resetHighLight()
     for (int i = 0; i < treeViewWidget->topLevelItemCount(); i++)
     {
         QTreeWidgetItem* treeItem = treeViewWidget->topLevelItem(i);
-        if (treeItem->columnCount() > 0) treeItem->setTextColor(0, QColor("black"));
+        //if (treeItem->columnCount() > 0) treeItem->setTextColor(0, QColor("black"));
         treeItem->setDisabled(false);
         for (int j = 0; j < treeItem->childCount(); j++)
         {
             QTreeWidgetItem* child = treeItem->child(j);
             if (child->columnCount() < 2) continue;
             child->setDisabled(false);
-            child->setTextColor(0, QColor("black"));
+            //child->setTextColor(0, QColor("black"));
         }
     }
 }
@@ -1386,17 +1386,17 @@ void DesignReviewDialog::hightLightItem(int idx)
             if (child->columnCount() < 2) continue;
             if (!found && idx > 0)
             {
-                child->setTextColor(0, QColor("gray"));
+                //child->setTextColor(0, QColor("gray"));
                 child->setSelected(false);
                 if (child->parent())
                 {
-                    child->parent()->setTextColor(0, QColor("gray"));
+                    //child->parent()->setTextColor(0, QColor("gray"));
                     child->parent()->setSelected(false);
                 }
             }
             else
             {
-                child->setTextColor(0, QColor("black"));
+                //child->setTextColor(0, QColor("black"));
                 child->setDisabled(false);
                 if (child->parent())
                 {
@@ -1407,12 +1407,12 @@ void DesignReviewDialog::hightLightItem(int idx)
             if (child->text(1).toInt() == (idx1))
             {
                 found = true;
-                child->setTextColor(0, QColor("blue"));
+                //child->setTextColor(0, QColor("blue"));
                 emit currentItemChanged(child);
                 child->setDisabled(false);
                 if (child->parent())
                 {
-                    child->parent()->setTextColor(0, QColor("blue"));
+                    //child->parent()->setTextColor(0, QColor("blue"));
                     child->parent()->setDisabled(false);
                 }
                 treeViewWidget->scrollToItem(child);
@@ -1445,7 +1445,7 @@ QTreeWidgetItem* DesignReviewDialog::addTreeChild(QTreeWidgetItem * parent, QStr
     QTreeWidgetItem* treeItem = new QTreeWidgetItem();
     treeItem->setText(0, name);
     treeItem->setText(1, QString::number(index));
-    treeItem->setTextColor(0, QColor("black"));
+    //treeItem->setTextColor(0, QColor("black"));
     parent->addChild(treeItem);
     return treeItem;
 }
@@ -1640,7 +1640,7 @@ void HelpAppDialog::updateHelpContents() {
         connect(filterAction, &QAction::triggered, this, [this]() { itemFinderButtonSlot(); });
         filterOptions->addAction(filterAction);
     }
-    for (int idx = 0; idx < items.count(); ++idx)  if (items.at(idx)->text(0).endsWith("Commands")) { items.swap(idx, 0); break; }
+    for (int idx = 0; idx < items.count(); ++idx)  if (items.at(idx)->text(0).endsWith("Commands")) { items.swapItemsAt(idx, 0); break; }
     tree->addTopLevelItems(items);
     tree->expandAll();
 }
@@ -1666,9 +1666,9 @@ void HelpMenuTreeWidget::wheelEvent(QWheelEvent* event)
     if (event->modifiers().testFlag(Qt::ControlModifier))
     {
         auto mSlider = ResizeDialog::getResizeDialog()->getMSlider();
-        if (event->delta() > 0)
+        if (event->angleDelta().y() > 0)
             mSlider->triggerAction(QAbstractSlider::SliderSingleStepAdd);
-        else if (event->delta() < 0)
+        else if (event->angleDelta().y() < 0)
             mSlider->triggerAction(QAbstractSlider::SliderSingleStepSub);
         event->accept();
     }
@@ -1760,7 +1760,7 @@ void HelpAppDialog::itemFinderButtonSlot()
             if (headerMatches || valueMatches) {
                 if(!treeRoot) treeRoot = addTreeRoot(chapterName, chapterHeader + chapterFooter);
                 auto child = addTreeChild(treeRoot, lineName, lineValue, QString::fromStdString(line.html_help));
-                if (headerMatches && !itemFinderText.isEmpty()) child->setBackgroundColor(0, QColor("#ffdab3"));
+                if (headerMatches && !itemFinderText.isEmpty()) child->setBackground(0, QColor("#ffdab3"));
             }
         }
         if (!treeRoot) {
@@ -1790,7 +1790,7 @@ void HelpAppDialog::itemFinderButtonSlot()
         });
     }
 
-    for (int idx = 0; idx < items.count(); ++idx)  if (items.at(idx)->text(0).endsWith("Commands")) { items.swap(idx, 0); break; }
+    for (int idx = 0; idx < items.count(); ++idx)  if (items.at(idx)->text(0).endsWith("Commands")) { items.swapItemsAt(idx, 0); break; }
     tree->addTopLevelItems(items);
     tree->expandAll();
     setUpdatesEnabled(true);
@@ -1911,7 +1911,7 @@ AliasMsg::AliasMsg(QWidget * parent) : QDialog(parent)
 
     QGridLayout* buttonLayout = new QGridLayout;
     buttonLayout->addWidget(okButton, 0, 0, Qt::AlignCenter);
-    buttonLayout->setMargin(5);
+    //buttonLayout->setMargin(5);
 
     QVBoxLayout* mainLayout = new QVBoxLayout;
     mainLayout->addLayout(layout);
@@ -1962,8 +1962,8 @@ AddRangeToAXISlavesDialog::AddRangeToAXISlavesDialog(NetSpeed::Grid * grid, QWid
     //set some default values here
     for (int i = 0; i < slaveNames.size(); i++)
         slaveName->addItem(slaveNames.at(i));
-    connect(slaveName, SIGNAL(currentIndexChanged(QString)), this, SLOT(slaveNameChanged(QString)));
-    emit slaveName->currentIndexChanged(slaveName->currentText());
+    connect(slaveName, SIGNAL(currentTextChanged(QString)), this, SLOT(slaveNameChanged(QString)));
+    emit slaveName->currentTextChanged(slaveName->currentText());
 
     rangeName->setText("");
     address->setText("");
@@ -1994,7 +1994,7 @@ AddRangeToAXISlavesDialog::AddRangeToAXISlavesDialog(NetSpeed::Grid * grid, QWid
     layout->addWidget(new QLabel("Region ID: "), row, 0, Qt::AlignRight);
     layout->addWidget(region, row++, 1);
 
-    rangeType->addItems(QString("enabled, disabled, readonly, writeonly").split(", ", QString::SkipEmptyParts));
+    rangeType->addItems(QString("enabled, disabled, readonly, writeonly").split(", ", Qt::SkipEmptyParts));
     layout->addWidget(rangeType, row++, 1);
     priv->setToolTip("priv");
     layout->addWidget(new QLabel(tr("%1: ").arg(priv->toolTip())), row, 0, Qt::AlignRight);
@@ -2159,7 +2159,7 @@ AddRangeToAXIMasterDialog::AddRangeToAXIMasterDialog(QWidget * parent, QStringLi
     layout->addWidget(new QLabel("Master Name: "), row, 0, Qt::AlignRight);
     layout->addWidget(masterName, row++, 1);
 
-    rangeType->addItems(QString("enabled, disabled, readonly, writeonly").split(", ", QString::SkipEmptyParts));
+    rangeType->addItems(QString("enabled, disabled, readonly, writeonly").split(", ", Qt::SkipEmptyParts));
     layout->addWidget(rangeType, row++, 1);
     priv->setToolTip("priv");
     layout->addWidget(new QLabel(tr("%1: ").arg(priv->toolTip())), row, 0, Qt::AlignRight);
@@ -2317,7 +2317,7 @@ AboutDialog::AboutDialog(QWidget * parent) : QDialog(parent)
     aboutContent->setText(dialogText);
     QScrollArea * sa = new QScrollArea;
     QWidget * w = new QWidget;
-    QVBoxLayout * l = new QVBoxLayout; l->setMargin(10);
+    QVBoxLayout * l = new QVBoxLayout;
     l->addWidget(image);
     l->addWidget(aboutContent);
     l->setSpacing(15);
@@ -2331,7 +2331,7 @@ AboutDialog::AboutDialog(QWidget * parent) : QDialog(parent)
     h->addWidget(close);
     mainLayout->addLayout(h);
     connect(close, &QPushButton::clicked, this, &QDialog::accept);
-    mainLayout->setMargin(5);
+    //mainLayout->setMargin(5);
     mainLayout->setAlignment(l, Qt::AlignHCenter);
     setLayout(mainLayout);
     this->resize(600, 550);
@@ -2394,7 +2394,7 @@ RangeNameItemControl::RangeNameItemControl(QWidget * parent, QStringList rangeNa
     layout->addWidget(rangeNamesComboBox);
     layout->addWidget(removeButton);
     setLayout(layout);
-    layout->setMargin(0);
+    //layout->setMargin(0);
     connect(removeButton, SIGNAL(clicked()), this, SLOT(selfRemove()));
 }
 
@@ -3334,7 +3334,7 @@ FinalizeDialog::FinalizeDialog(QWidget * parent) : QDialog(parent)
     QGridLayout* buttonLayout = new QGridLayout;
     buttonLayout->addWidget(okButton, 0, 0, Qt::AlignLeft);
     buttonLayout->addWidget(cancelButton, 0, 1, Qt::AlignRight);
-    buttonLayout->setMargin(5);
+    //buttonLayout->setMargin(5);
 
     QVBoxLayout* mainLayout = new QVBoxLayout;
     mainLayout->addLayout(layout);
diff --git i/src/sw/noc_dev/SCFNocStudio/Gui/mainwindow.cpp w/src/sw/noc_dev/SCFNocStudio/Gui/mainwindow.cpp
index f9b55f9e2ea..733e2813b29 100644
--- i/src/sw/noc_dev/SCFNocStudio/Gui/mainwindow.cpp
+++ w/src/sw/noc_dev/SCFNocStudio/Gui/mainwindow.cpp
@@ -175,9 +175,9 @@ MainWindow::MainWindow(NetSpeed::NocConsole* c, QWidget* parent)
     progressBar->setMinimum(0);
     progressBar->setMaximum(100);
     setPrgrBarValue(100);
-    consoleDock = new NSDockWidget(OBJ_CONSOLE_MAINWINDOW, this, 0);
+    consoleDock = new NSDockWidget(OBJ_CONSOLE_MAINWINDOW, this, Qt::Widget);
     consoleDock->setObjectName(OBJ_CONSOLE_DOCK);
-    dockLintTab = new NSDockWidget(OBJ_LINT_DOCK, this, 0);
+    dockLintTab = new NSDockWidget(OBJ_LINT_DOCK, this, Qt::Widget);
     connect(this, SIGNAL(updateLinttab()), this, SLOT(addLintTab()));
     centerSplitter = new QSplitter(this);
 
@@ -237,7 +237,7 @@ MainWindow::MainWindow(NetSpeed::NocConsole* c, QWidget* parent)
     containerLayout->addWidget(floatingButt);
     containerLayout->addWidget(closeTabButt);
     containerLayout->setContentsMargins(0, 0, 0, 0);
-    containerLayout->setMargin(0);
+    //containerLayout->setMargin(0);
     containerLayout->setSpacing(0);
     container->setLayout(containerLayout);
     container->setStyleSheet("border:2px;");
@@ -283,7 +283,7 @@ MainWindow::MainWindow(NetSpeed::NocConsole* c, QWidget* parent)
     connect(this, &MainWindow::resizeWindow, this, [this](int width, int height) {
         //Set state to prevent problems when windows is at full screen then resize
         setWindowState(Qt::WindowNoState);
-        auto rect = QDesktopWidget().availableGeometry();
+        auto rect = QGuiApplication::primaryScreen()->geometry();
         const int maxWidth = rect.width();
         const int maxHeight = rect.height();
         width = std::min(maxWidth, width);
@@ -983,7 +983,7 @@ void MainWindow::createLayerButtons(NetSpeed::Grid * grid)
         }
         else {
             QString t = "Shift+A";
-            t[t.length() - 1] = t[t.length() - 1].unicode() + l - 10;
+            t[t.length() - 1] = QChar(t[t.length() - 1].unicode() + l - 10);
             shortCut = layerShortcut.arg(t);
             layerPb->setShortcut(shortCut);
         }
@@ -2431,9 +2431,7 @@ bool MainWindow::saveProjectAct()
     }
 
     QJsonDocument saveDoc(loadDoc.object());
-    saveFile.write(fileName.endsWith(".json")
-        ? saveDoc.toJson()
-        : saveDoc.toBinaryData());
+    saveFile.write(saveDoc.toJson());
 
 #endif
     return true;
@@ -2458,9 +2456,7 @@ bool MainWindow::openProjectAct()
 
     QByteArray saveData = loadFile.readAll();
 
-    QJsonDocument loadDoc(fileName.endsWith(".json")
-        ? QJsonDocument::fromJson(saveData)
-        : QJsonDocument::fromBinaryData(saveData));
+    QJsonDocument loadDoc(QJsonDocument::fromJson(saveData));
 
     //! TODO: Read data from Json Objects
     qDebug() << loadDoc.toJson() << loadDoc.object().keys();
@@ -2863,10 +2859,10 @@ void MainWindow::wheelEvent(QWheelEvent * event)
         if (!displayPanel || (displayPanel->currentIndex() != 0 && !isDisplayingChipView())) return;
         QWidget * widget = displayPanel->widget(0);
         if (!widget || (!widget->underMouse() && !isDisplayingChipView())) return;
-        if (event->delta() > 0) {
+        if (event->angleDelta().y() > 0) {
             zoomInAct();
         }
-        else if (event->delta() < 0) {
+        else if (event->angleDelta().y() < 0) {
             zoomOutAct();
         }
     }
@@ -2877,8 +2873,8 @@ bool MainWindow::checkLicense(bool checkFlexlm)
     if (!checkFlexlm) { // show license warning dialog
         auto closeApp = new LicenseWarningDialog(this);
         closeApp->resize(200, 50);
-        QRect scr = QApplication::desktop()->screenGeometry();
-        closeApp->move(scr.center() - closeApp->rect().center());
+        //QRect scr = QApplication::desktop()->screenGeometry();
+        //closeApp->move(scr.center() - closeApp->rect().center());
         setStayOnTopDesignReview(closeApp);
         if (closeApp->exec()) {
             console->cancelCommands();
@@ -3738,7 +3734,7 @@ void MainWindow::delTypeDomainAct()
         }
     }
     if (allDomains.isEmpty()) return;
-    Qt::WindowFlags flags = 0;
+    Qt::WindowFlags flags = Qt::Widget;
     if (!isHiddenDesignReview())
         flags |= Qt::WindowStaysOnTopHint;
     bool ok;
@@ -4950,7 +4946,7 @@ void MainWindow::processChartTab(const NetSpeed::chart_tab_t & chs, bool create_
 
         // Get Max StatTab Id
         int id = charts.liveId = 0;
-        if (!charts.chartTabs.isEmpty()) id = charts.liveId = (charts.chartTabs.constEnd() - 1).key() + 1;
+        if (!charts.chartTabs.isEmpty()) id = charts.liveId = prev(charts.chartTabs.constEnd()).key() + 1;
 
         // Insert to map
         charts.chartTabs.insert(id, chs);
@@ -4958,7 +4954,7 @@ void MainWindow::processChartTab(const NetSpeed::chart_tab_t & chs, bool create_
         // Get layout of transaction plots
         auto mainLayout = createChartTabLayout(chs);
         mainLayout->setSpacing(6);
-        mainLayout->setMargin(0);
+        //mainLayout->setMargin(0);
 
         // Add to display panel
         QString tabName = tr("%1 %2").arg(QString::fromStdString(chs.headline)).arg(id);
@@ -5046,11 +5042,11 @@ QVBoxLayout* MainWindow::createChartTabLayout(const NetSpeed::chart_tab_t & chs)
 {
     QVBoxLayout* mainLayout = new QVBoxLayout();
     mainLayout->setSpacing(6);
-    mainLayout->setMargin(0);
+    //mainLayout->setMargin(0);
     QMap<QString, QCustomPlot*>* plots = new QMap<QString, QCustomPlot*>();
     charts.plots.insert(charts.liveId, plots);
     // Display normal plots
-    for (const auto chart : chs.charts) {
+    for (const auto& chart : chs.charts) {
         // Init chart
         QCustomPlot* customPlot = new QCustomPlot();
         initChartLayout(customPlot, chart);
@@ -5064,12 +5060,12 @@ QVBoxLayout* MainWindow::createChartTabLayout(const NetSpeed::chart_tab_t & chs)
         QVBoxLayout* plotLayout;
         plotLayout = new QVBoxLayout();
         plotLayout->setSpacing(0);
-        plotLayout->setMargin(0);
+        //plotLayout->setMargin(0);
         plotLayout->addWidget(customPlot);
 
         QVBoxLayout* verticalLayout = new QVBoxLayout();
         verticalLayout->addLayout(plotLayout);
-        verticalLayout->setMargin(10);
+        //verticalLayout->setMargin(10);
         widget->setLayout(verticalLayout);
 
         // Add to main layout
diff --git i/src/sw/noc_dev/SCFNocStudio/Gui/myconsole.cpp w/src/sw/noc_dev/SCFNocStudio/Gui/myconsole.cpp
index 1058118d8ad..b88bce8cd27 100644
--- i/src/sw/noc_dev/SCFNocStudio/Gui/myconsole.cpp
+++ w/src/sw/noc_dev/SCFNocStudio/Gui/myconsole.cpp
@@ -591,7 +591,7 @@ void INIConsole::handlePasteEvent()
 
     // Delete characters/ selected text which user inputed
     if (min >= beginOfCurrentTyping) {
-        if (blkCmd.contains(QRegExp("[\r\n]"))) {
+        if (blkCmd.contains(QRegularExpression("[\r\n]"))) {
             textCursor().deleteChar();
             moveCursor(QTextCursor::End);
             moveCursor(QTextCursor::StartOfBlock);
@@ -618,7 +618,7 @@ void INIConsole::handlePasteEvent()
 
 void INIConsole::setLineLimit()
 {
-    Qt::WindowFlags flags = 0;
+    Qt::WindowFlags flags = Qt::Widget;
     if (designRevDialog && !designRevDialog->isHidden())
         flags |= Qt::WindowStaysOnTopHint;
     bool ok;
@@ -1538,10 +1538,10 @@ void INIConsole::wheelEvent(QWheelEvent * event)
     if (event->modifiers().testFlag(Qt::ControlModifier))
     {
         auto cSlider = ResizeDialog::getResizeDialog()->getCSlider();
-        if (event->delta() > 0) {
+        if (event->angleDelta().y() > 0) {
             cSlider->triggerAction(QAbstractSlider::SliderSingleStepAdd);
         }
-        else if (event->delta() < 0) {
+        else if (event->angleDelta().y() < 0) {
             cSlider->triggerAction(QAbstractSlider::SliderSingleStepSub);
         }
     }
diff --git i/src/sw/noc_dev/SCFNocStudio/Gui/propertypanel.cpp w/src/sw/noc_dev/SCFNocStudio/Gui/propertypanel.cpp
index 19b82cac2f1..cfae47d2f6c 100644
--- i/src/sw/noc_dev/SCFNocStudio/Gui/propertypanel.cpp
+++ w/src/sw/noc_dev/SCFNocStudio/Gui/propertypanel.cpp
@@ -141,7 +141,7 @@ template <> QString getPropCmd<NetSpeed::Bridge>(QtProperty * p, const NetSpeed:
     auto propName = (helpTxtEmpty) ? p->propertyName() : helpTxt;
     auto value = p->valueText();
     if (!helpTxtEmpty) {
-        auto nameList = value.split(QRegExp("/"));
+        auto nameList = value.split(QRegularExpression("/"));
         if (!nameList.empty()) value = nameList.last();
     }
     return QString("bridge_prop {%1} %2 {%3}").arg(QString::fromStdString(h->name()), propName, value);
@@ -4681,12 +4681,12 @@ QString PropertyPanel::wrapTextForTooltip(QString text, int width)
     static int colLen = 0;
     if (localWidth != width)
     {
-        int numRow = fm.width(text) / width;
+        int numRow = fm.tightBoundingRect(text).width() / width;
         if (numRow <= 1) return text;
         colLen = text.length() / numRow;
         while (colLen < text.length())
         {
-            if (fm.width(text.left(++colLen + 1)) > width)
+            if (fm.tightBoundingRect(text.left(++colLen + 1)).width() > width)
                 break;
         }
         localWidth = width;
@@ -6391,8 +6391,12 @@ void PropertyPanel::createMeshPropertyItems(const NetSpeed::Grid * g, QtTreeProp
         addPropertyMesh(propTree, i.value(), i.key());
         ++i;
     }
-    auto keys = cateProp.keys().toVector().toStdVector();
-    setBoldProperty(propTree, keys);
+    auto keys = cateProp.keys();
+    std::vector<QString> keys_vector;
+    for (auto itr = keys.begin(); itr != keys.end(); ++itr) {
+        keys_vector.push_back(*itr);
+    }
+    setBoldProperty(defaultPropertyEditor, keys_vector);
     // Add Property Items
     QtProperty* propertyItem = nullptr;
     FOR(it, NetSpeed::Property::mesh_props) {
@@ -6612,7 +6616,7 @@ void PropertyPanel::createDefaultPropertyItems(QtTreePropertyBrowser * propTree)
         addPropertyDefault(propTree, i.value(), i.key());
         ++i;
     }
-    auto keys = cateProp.keys().toVector().toStdVector();
+    std::vector<QString> keys(cateProp.keys().begin(), cateProp.keys().end());
     setBoldProperty(propTree, keys);
 
     // Add Property Items
@@ -7111,22 +7115,22 @@ void PropertyPanel::wheelOnCustomPlot(QWheelEvent * event)
         // Get the current widget, statTab and plotmap for current tab
         StatTab* statTab = mw->getTabStatTabMap().value(mw->getLiveWidget(), nullptr);
         if (!statTab) return;
-        QCPAxisRect* axisRect = dynamic_cast<QCPAxisRect*>(customPlot->layoutElementAt(event->pos()));
+        QCPAxisRect* axisRect = dynamic_cast<QCPAxisRect*>(customPlot->layoutElementAt(event->position()));
         if (axisRect)
         {
             QCPAxis* xAxis = axisRect->axis(QCPAxis::atBottom, 0);
             if (xAxis)
             {
-                double wheelStep = event->delta() / 120.0;
+                double wheelStep = event->angleDelta().y() / 120.0;
                 double factor = pow(axisRect->rangeZoomFactor(Qt::Horizontal), wheelStep);
                 // Scale the range
-                xAxis->scaleRange(factor, xAxis->pixelToCoord(event->pos().x()));
+                xAxis->scaleRange(factor, xAxis->pixelToCoord(event->position().x()));
                 bool haveData = customPlot->haveDataInRange(xAxis->range().lower, xAxis->range().upper);
                 if (haveData == false) // No data
                 {
                     // Undo range change
                     factor = pow(axisRect->rangeZoomFactor(Qt::Horizontal), -wheelStep);
-                    xAxis->scaleRange(factor, xAxis->pixelToCoord(event->pos().x()));
+                    xAxis->scaleRange(factor, xAxis->pixelToCoord(event->position().x()));
                     return;
                 }
                 else //Have data
@@ -7496,7 +7500,7 @@ void LazyLoadPortGroup::loadMore(const int /*count*/) {}
 void LazyLoadPortGroup::wheelEvent(QWheelEvent * event)
 {
     // wheel down
-    if (event->delta() < 0) {
+    if (event->angleDelta().y() < 0) {
         if (canLoadMore()) loadMore();
     }
     QWidget::wheelEvent(event);
diff --git i/src/sw/noc_dev/SCFNocStudio/Gui/statdashboard.cpp w/src/sw/noc_dev/SCFNocStudio/Gui/statdashboard.cpp
index ed22000babe..567f92486d2 100644
--- i/src/sw/noc_dev/SCFNocStudio/Gui/statdashboard.cpp
+++ w/src/sw/noc_dev/SCFNocStudio/Gui/statdashboard.cpp
@@ -360,7 +360,7 @@ void StatDashboard::statMergeAct()
 void StatDashboard::statCompareAct()
 {
     bool ok;
-    Qt::WindowFlags flags = 0;
+    Qt::WindowFlags flags = Qt::Widget;
 
     QString requestedName = QInputDialog::getText(this, tr("Comparison Name"),
         tr("Specify comparision name:"), QLineEdit::Normal,
@@ -426,4 +426,4 @@ void StatDashboard::statLoadAct()
     // Create command and apply
     emit processCmdSignal(QString::fromStdString(CMD_LOAD_AND_MERGE) + " -path {"
         + fileName + "} -stat " + QString::number(currentStatTab->id));
-}
\ No newline at end of file
+}
diff --git i/src/sw/noc_dev/SCFNocStudio/Gui/statsview.cpp w/src/sw/noc_dev/SCFNocStudio/Gui/statsview.cpp
index 9382ce841d9..1c4220b58cb 100644
--- i/src/sw/noc_dev/SCFNocStudio/Gui/statsview.cpp
+++ w/src/sw/noc_dev/SCFNocStudio/Gui/statsview.cpp
@@ -339,10 +339,10 @@ void StatsView::refresh()
         zoomAutofit(layer_columns);
     }
 
-    QMatrix matrix;
+    QTransform matrix;
     matrix.scale(zoomFactor, zoomFactor);
 
-    setMatrix(matrix);
+    setTransform(matrix);
     int active_layer_cnt = 0; // count active layers for positioning
     for (int i = 0; i < isize(layer_groups); ++i) {
         auto lg = layer_groups[i];
@@ -539,10 +539,10 @@ void StatsView::wheelEvent(QWheelEvent * event)
 {
     if (event->modifiers().testFlag(Qt::ControlModifier))
     {
-        if (event->delta() > 0) {
+        if (event->angleDelta().y() > 0) {
             mw->zoomInAct();
         }
-        else if (event->delta() < 0) {
+        else if (event->angleDelta().y() < 0) {
             mw->zoomOutAct();
         }
     }
@@ -976,7 +976,7 @@ void stats_box_data_t::paint(QPainter * painter, const QStyleOptionGraphicsItem*
         const int n2 = STATS_NODE_SIZE * 2 / 4;
         const int n3 = STATS_NODE_SIZE * 3 / 4;
         const int n4 = STATS_NODE_SIZE;
-        const QVector<QLine> lines = QVector<QLine>::fromStdVector({
+        std::vector<QLine> vector_lines = {
             // Horizontal lines
             QLine(n0, n2, n4, n2),
             QLine(n2, n1, n4, n1),
@@ -986,14 +986,15 @@ void stats_box_data_t::paint(QPainter * painter, const QStyleOptionGraphicsItem*
                 QLine(n2, n0, n2, n4),
                 QLine(n1, n0, n1, n2),
                 QLine(n3, n2, n3, n4),
-            });
+            };
+        const QVector<QLine> lines(vector_lines.begin(), vector_lines.end());
         painter->drawLines(lines);
 
         QPoint p1, p2;
 
         // Gray lines
         painter->setPen(Qt::gray);
-        const QVector<QLine> lines2 = QVector<QLine>::fromStdVector({
+        std::vector<QLine> vector_lines2 = {
             // Horizontal lines
             QLine(n0, n1, n2, n1),
             QLine(n2, n3, n4, n3),
@@ -1001,7 +1002,8 @@ void stats_box_data_t::paint(QPainter * painter, const QStyleOptionGraphicsItem*
             // Vertical lines
             QLine(n1, n2, n1, n4),
             QLine(n3, n0, n3, n2),
-            });
+            };
+        const QVector<QLine> lines2(vector_lines2.begin(), vector_lines2.end());
         painter->drawLines(lines2);
         painter->restore();
 
diff --git i/src/sw/noc_dev/SCFNocStudio/Qtproperty/qteditorfactory.cpp w/src/sw/noc_dev/SCFNocStudio/Qtproperty/qteditorfactory.cpp
index 1822357b118..37bf9fec9c4 100644
--- i/src/sw/noc_dev/SCFNocStudio/Qtproperty/qteditorfactory.cpp
+++ w/src/sw/noc_dev/SCFNocStudio/Qtproperty/qteditorfactory.cpp
@@ -970,7 +970,7 @@ class QtLineEditFactoryPrivate : public EditorFactoryPrivate<QLineEdit> {
 public:
 
     void slotPropertyChanged(QtProperty* property, const QString& value);
-    void slotRegExpChanged(QtProperty* property, const QRegExp& regExp);
+    void slotRegExpChanged(QtProperty* property, const QRegularExpression& regExp);
     void slotSetValue(const QString& value);
     void slotEchoModeChanged(QtProperty*, int);
     void slotReadOnlyChanged(QtProperty*, bool);
@@ -992,7 +992,7 @@ void QtLineEditFactoryPrivate::slotPropertyChanged(QtProperty * property, const
     }
 }
 
-void QtLineEditFactoryPrivate::slotRegExpChanged(QtProperty * property, const QRegExp & regExp)
+void QtLineEditFactoryPrivate::slotRegExpChanged(QtProperty * property, const QRegularExpression & regExp)
 {
     if (!m_createdEditors.contains(property))
         return;
@@ -1008,7 +1008,7 @@ void QtLineEditFactoryPrivate::slotRegExpChanged(QtProperty * property, const QR
         const QValidator* oldValidator = editor->validator();
         QValidator* newValidator = 0;
         if (regExp.isValid()) {
-            newValidator = new QRegExpValidator(regExp, editor);
+            newValidator = new QRegularExpressionValidator(QRegularExpression(regExp.pattern()), editor);
         }
         editor->setValidator(newValidator);
         if (oldValidator)
@@ -1125,7 +1125,7 @@ QWidget* QtLineEditFactory::createEditor(QtStringPropertyManager * manager, QtPr
     QLineEdit* editor = d_ptr->createEditor(property, parent);
     editor->setEchoMode((EchoMode)manager->echoMode(property));
     editor->setReadOnly(manager->isReadOnly(property));
-    QRegExp regExp = manager->regExp(property);
+    QRegularExpression regExp = manager->regExp(property);
     if (regExp.isValid()) {
         QValidator* validator = new QRegExpValidator(regExp, editor);
         editor->setValidator(validator);
@@ -1650,7 +1650,7 @@ QtCharEdit::QtCharEdit(QWidget* parent) :
 {
     QHBoxLayout* layout = new QHBoxLayout(this);
     layout->addWidget(m_lineEdit);
-    layout->setMargin(0);
+    //layout->setMargin(0);
     m_lineEdit->installEventFilter(this);
     m_lineEdit->setReadOnly(true);
     m_lineEdit->setFocusProxy(this);
@@ -1715,7 +1715,7 @@ void QtCharEdit::handleKeyEvent(QKeyEvent * e)
     }
 
     const QString text = e->text();
-    if (text.count() != 1)
+    if (text.length() != 1)
         return;
 
     const QChar c = text.at(0);
@@ -1774,7 +1774,7 @@ void QtCharEdit::keyReleaseEvent(QKeyEvent * e)
 void QtCharEdit::paintEvent(QPaintEvent*)
 {
     QStyleOption opt;
-    opt.init(this);
+    opt.initFrom(this);
     QPainter p(this);
     style()->drawPrimitive(QStyle::PE_Widget, &opt, &p, this);
 }
@@ -2308,7 +2308,8 @@ void QtColorEditWidget::buttonClicked()
 {
     bool ok = false;
     QRgb oldRgba = m_color.rgba();
-    QRgb newRgba = QColorDialog::getRgba(oldRgba, &ok, this);
+    QColor oldColor(oldRgba);
+    QRgb newRgba = QColorDialog::getColor(oldColor, this).rgba();
     if (ok && newRgba != oldRgba) {
         setValue(QColor::fromRgba(newRgba));
         emit valueChanged(m_color);
@@ -2342,7 +2343,7 @@ bool QtColorEditWidget::eventFilter(QObject * obj, QEvent * ev)
 void QtColorEditWidget::paintEvent(QPaintEvent*)
 {
     QStyleOption opt;
-    opt.init(this);
+    opt.initFrom(this);
     QPainter p(this);
     style()->drawPrimitive(QStyle::PE_Widget, &opt, &p, this);
 }
@@ -2559,7 +2560,7 @@ bool QtFontEditWidget::eventFilter(QObject * obj, QEvent * ev)
 void QtFontEditWidget::paintEvent(QPaintEvent*)
 {
     QStyleOption opt;
-    opt.init(this);
+    opt.initFroms(this);
     QPainter p(this);
     style()->drawPrimitive(QStyle::PE_Widget, &opt, &p, this);
 }
@@ -2670,4 +2671,4 @@ QT_END_NAMESPACE
 #endif
 
 #include "moc_qteditorfactory.cpp"
-#include "qteditorfactory.moc"
\ No newline at end of file
+#include "qteditorfactory.moc"
diff --git i/src/sw/noc_dev/SCFNocStudio/Qtproperty/qtpropertybrowserutils.cpp w/src/sw/noc_dev/SCFNocStudio/Qtproperty/qtpropertybrowserutils.cpp
index 65317d1e3bf..6431a08a0b1 100644
--- i/src/sw/noc_dev/SCFNocStudio/Qtproperty/qtpropertybrowserutils.cpp
+++ w/src/sw/noc_dev/SCFNocStudio/Qtproperty/qtpropertybrowserutils.cpp
@@ -294,7 +294,7 @@ void QtBoolEdit::mousePressEvent(QMouseEvent * event)
 void QtBoolEdit::paintEvent(QPaintEvent*)
 {
     QStyleOption opt;
-    opt.init(this);
+    opt.initFrom(this);
     QPainter p(this);
     style()->drawPrimitive(QStyle::PE_Widget, &opt, &p, this);
 }
@@ -304,7 +304,7 @@ QtKeySequenceEdit::QtKeySequenceEdit(QWidget * parent) :
 {
     QHBoxLayout* layout = new QHBoxLayout(this);
     layout->addWidget(m_lineEdit);
-    layout->setMargin(0);
+    //layout->setMargin(0);
     m_lineEdit->installEventFilter(this);
     m_lineEdit->setReadOnly(true);
     m_lineEdit->setFocusProxy(this);
@@ -361,10 +361,10 @@ void QtKeySequenceEdit::handleKeyEvent(QKeyEvent * e)
         return;
 
     nextKey |= translateModifiers(e->modifiers(), e->text());
-    int k0 = m_keySequence[0];
-    int k1 = m_keySequence[1];
-    int k2 = m_keySequence[2];
-    int k3 = m_keySequence[3];
+    int k0 = m_keySequence[0].toCombined();
+    int k1 = m_keySequence[1].toCombined();
+    int k2 = m_keySequence[2].toCombined();
+    int k3 = m_keySequence[3].toCombined();
     switch (m_num) {
     case 0:
         k0 = nextKey;
@@ -454,7 +454,7 @@ void QtKeySequenceEdit::keyReleaseEvent(QKeyEvent * e)
 void QtKeySequenceEdit::paintEvent(QPaintEvent*)
 {
     QStyleOption opt;
-    opt.init(this);
+    opt.initFrom(this);
     QPainter p(this);
     style()->drawPrimitive(QStyle::PE_Widget, &opt, &p, this);
 }
@@ -471,4 +471,4 @@ bool QtKeySequenceEdit::event(QEvent * e)
 
 #if QT_VERSION >= 0x040400
 QT_END_NAMESPACE
-#endif
\ No newline at end of file
+#endif
diff --git i/src/sw/noc_dev/SCFNocStudio/Qtproperty/qtpropertymanager.cpp w/src/sw/noc_dev/SCFNocStudio/Qtproperty/qtpropertymanager.cpp
index 36adcc92844..4fdd1bfeb6d 100644
--- i/src/sw/noc_dev/SCFNocStudio/Qtproperty/qtpropertymanager.cpp
+++ w/src/sw/noc_dev/SCFNocStudio/Qtproperty/qtpropertymanager.cpp
@@ -1349,14 +1349,28 @@ public:
 
     struct Data {
         Data() :
-            regExp(QString(QLatin1Char('*')), Qt::CaseSensitive, QRegExp::Wildcard), echoMode(
-                QLineEdit::Normal), readOnly(false)
+            regExp(createWildcardRegExp(QString(QLatin1Char('*')), Qt::CaseSensitive)),
+          echoMode(QLineEdit::Normal), readOnly(false)
         {
         }
         QString val;
-        QRegExp regExp;
+        QRegularExpression regExp;
         int echoMode;
         bool readOnly;
+
+        static QRegularExpression createWildcardRegExp(const QString& wildcard, Qt::CaseSensitivity caseSensitivity) {
+            QString regex = QRegularExpression::escape(wildcard);
+            regex.replace("\\*", ".*");
+            regex.replace("\\?", ".");
+            regex = "^" + regex + "$";
+
+            QRegularExpression regExp(regex);
+            if (caseSensitivity == Qt::CaseInsensitive) {
+                regExp.setPatternOptions(QRegularExpression::CaseInsensitiveOption);
+            }
+
+            return regExp;
+        }
     };
 
     typedef QMap<const QtProperty*, Data> PropertyValueMap;
@@ -1443,10 +1457,10 @@ QString QtStringPropertyManager::value(const QtProperty * property) const
 
  \sa setRegExp()
  */
-QRegExp QtStringPropertyManager::regExp(const QtProperty * property) const
+QRegularExpression QtStringPropertyManager::regExp(const QtProperty * property) const
 {
-    return getData<QRegExp>(d_ptr->m_values, &QtStringPropertyManagerPrivate::Data::regExp,
-        property, QRegExp());
+    return getData<QRegularExpression>(d_ptr->m_values, &QtStringPropertyManagerPrivate::Data::regExp,
+                                       property, QRegularExpression());
 }
 
 /*!
@@ -1522,7 +1536,7 @@ void QtStringPropertyManager::setValue(QtProperty * property, const QString & va
     if (data.val == val)
         return;
 
-    if (data.regExp.isValid() && !data.regExp.exactMatch(val))
+    if (data.regExp.isValid() && !data.regExp.match(val).hasMatch())
         return;
 
     data.val = val;
@@ -1539,7 +1553,7 @@ void QtStringPropertyManager::setValue(QtProperty * property, const QString & va
 
  \sa regExp(), setValue(), regExpChanged()
  */
-void QtStringPropertyManager::setRegExp(QtProperty * property, const QRegExp & regExp)
+void QtStringPropertyManager::setRegExp(QtProperty * property, const QRegularExpression& regExp)
 {
     const QtStringPropertyManagerPrivate::PropertyValueMap::iterator it = d_ptr->m_values.find(
         property);
@@ -2549,7 +2563,7 @@ void QtLocalePropertyManagerPrivate::slotEnumChanged(QtProperty * property, int
     if (QtProperty * prop = m_languageToProperty.value(property, 0)) {
         const QLocale loc = m_values[prop];
         QLocale::Language newLanguage = loc.language();
-        QLocale::Country newCountry = loc.country();
+        QLocale::Country newCountry = loc.territory();
         metaEnumProvider()->indexToLocale(value, 0, &newLanguage, 0);
         QLocale newLoc(newLanguage, newCountry);
         q_ptr->setValue(prop, newLoc);
@@ -2557,7 +2571,7 @@ void QtLocalePropertyManagerPrivate::slotEnumChanged(QtProperty * property, int
     else if (QtProperty * prop = m_countryToProperty.value(property, 0)) {
         const QLocale loc = m_values[prop];
         QLocale::Language newLanguage = loc.language();
-        QLocale::Country newCountry = loc.country();
+        QLocale::Country newCountry = loc.territory();
         metaEnumProvider()->indexToLocale(
             m_enumPropertyManager->value(m_propertyToLanguage.value(prop)), value, &newLanguage,
             &newCountry);
@@ -6205,7 +6219,7 @@ void QtFontPropertyManager::setValue(QtProperty * property, const QFont & val)
         return;
 
     const QFont oldVal = it.value();
-    if (oldVal == val && oldVal.resolve() == val.resolve())
+    if (oldVal == val)
         return;
 
     it.value() = val;
@@ -6798,4 +6812,4 @@ QT_END_NAMESPACE
 #endif
 
 #include "moc_qtpropertymanager.cpp"
-#include "qtpropertymanager.moc"
\ No newline at end of file
+#include "qtpropertymanager.moc"
diff --git i/src/sw/noc_dev/SCFNocStudio/Qtproperty/qtpropertymanager.h w/src/sw/noc_dev/SCFNocStudio/Qtproperty/qtpropertymanager.h
index 69657aee843..c4b18deb713 100644
--- i/src/sw/noc_dev/SCFNocStudio/Qtproperty/qtpropertymanager.h
+++ w/src/sw/noc_dev/SCFNocStudio/Qtproperty/qtpropertymanager.h
@@ -175,19 +175,19 @@ public:
     ~QtStringPropertyManager();
 
     QString value(const QtProperty* property) const;
-    QRegExp regExp(const QtProperty* property) const;
+    QRegularExpression regExp(const QtProperty* property) const;
     EchoMode echoMode(const QtProperty* property) const;
     bool isReadOnly(const QtProperty* property) const;
 
 public Q_SLOTS:
     void setValue(QtProperty* property, const QString& val);
-    void setRegExp(QtProperty* property, const QRegExp& regExp);
+    void setRegExp(QtProperty* property, const QRegularExpression& regExp);
     void setEchoMode(QtProperty* property, EchoMode echoMode);
     void setReadOnly(QtProperty* property, bool readOnly);
 
 Q_SIGNALS:
     void valueChanged(QtProperty* property, const QString& val);
-    void regExpChanged(QtProperty* property, const QRegExp& regExp);
+    void regExpChanged(QtProperty* property, const QRegularExpression& regExp);
     void echoModeChanged(QtProperty* property, const int);
     void readOnlyChanged(QtProperty* property, bool);
 
diff --git i/src/sw/noc_dev/SCFNocStudio/Qtproperty/qttreepropertybrowser.cpp w/src/sw/noc_dev/SCFNocStudio/Qtproperty/qttreepropertybrowser.cpp
index 248f7d0ec0e..57d21dfe913 100644
--- i/src/sw/noc_dev/SCFNocStudio/Qtproperty/qttreepropertybrowser.cpp
+++ w/src/sw/noc_dev/SCFNocStudio/Qtproperty/qttreepropertybrowser.cpp
@@ -164,9 +164,9 @@ void QtPropertyEditorView::wheelEvent(QWheelEvent* event)
     {
         if (auto pSlider = QtTreePropertyBrowser::getAbstractFontSlider())
         {
-            if (event->delta() > 0)
+            if (event->angleDelta().y() > 0)
                 pSlider->triggerAction(QAbstractSlider::SliderSingleStepAdd);
-            else if (event->delta() < 0)
+            else if (event->angleDelta().y() < 0)
                 pSlider->triggerAction(QAbstractSlider::SliderSingleStepSub);
         }
         event->accept();
@@ -457,7 +457,7 @@ static QIcon drawIndicatorIcon(const QPalette & palette, QStyle * style)
 void QtTreePropertyBrowserPrivate::init(QWidget * parent)
 {
     QHBoxLayout* layout = new QHBoxLayout(parent);
-    layout->setMargin(0);
+    //layout->setMargin(0);
     m_treeWidget = new QtPropertyEditorView(parent);
     m_treeWidget->setEditorPrivate(this);
     m_treeWidget->setIconSize(QSize(18, 18));
@@ -582,7 +582,7 @@ void QtTreePropertyBrowserPrivate::propertyInserted(QtBrowserItem * index,
     m_indexToItem[index] = newItem;
 
     newItem->setFlags(newItem->flags() | Qt::ItemIsEditable);
-    m_treeWidget->setItemExpanded(newItem, true);
+    newItem->setExpanded(true);
 
     updateItem(newItem);
 }
@@ -624,7 +624,7 @@ void QtTreePropertyBrowserPrivate::updateItem(QTreeWidgetItem * item)
             }
             else font.setBold(false);
             item->setFont(col, font);
-            item->setTextColor(col, color);
+            //item->setTextColor(col, color);
         }
     }
 
diff --git i/src/sw/noc_dev/SCFNocStudio/Utils/NsFilterWidget.cpp w/src/sw/noc_dev/SCFNocStudio/Utils/NsFilterWidget.cpp
index eb5203b5d6b..0a328200636 100644
--- i/src/sw/noc_dev/SCFNocStudio/Utils/NsFilterWidget.cpp
+++ w/src/sw/noc_dev/SCFNocStudio/Utils/NsFilterWidget.cpp
@@ -27,7 +27,7 @@ NsFilterWidget::NsFilterWidget(QWidget* parent)
     menu->addSeparator();
     m_patternGroup->setExclusive(true);
     QAction* patternAction = menu->addAction("Fixed String");
-    patternAction->setData(QVariant(int(QRegExp::FixedString)));
+    patternAction->setData(QVariant(int(PatternSyntax::FixedString)));
     patternAction->setCheckable(true);
     patternAction->setChecked(true);
     m_patternGroup->addAction(patternAction);
@@ -68,17 +68,17 @@ void NsFilterWidget::setCaseSensitivity(Qt::CaseSensitivity cs)
     m_caseSensitivityAction->setChecked(cs == Qt::CaseSensitive);
 }
 
-static inline QRegExp::PatternSyntax patternSyntaxFromAction(const QAction * a)
+static inline PatternSyntax patternSyntaxFromAction(const QAction * a)
 {
-    return static_cast<QRegExp::PatternSyntax>(a->data().toInt());
+    return static_cast<PatternSyntax>(a->data().toInt());
 }
 
-QRegExp::PatternSyntax NsFilterWidget::patternSyntax() const
+PatternSyntax NsFilterWidget::patternSyntax() const
 {
     return patternSyntaxFromAction(m_patternGroup->checkedAction());
 }
 
-void NsFilterWidget::setPatternSyntax(QRegExp::PatternSyntax s)
+void NsFilterWidget::setPatternSyntax(PatternSyntax s)
 {
     foreach(QAction * a, m_patternGroup->actions()) {
         if (patternSyntaxFromAction(a) == s) {
@@ -86,4 +86,4 @@ void NsFilterWidget::setPatternSyntax(QRegExp::PatternSyntax s)
             break;
         }
     }
-}
\ No newline at end of file
+}
diff --git i/src/sw/noc_dev/SCFNocStudio/Utils/NsFilterWidget.h w/src/sw/noc_dev/SCFNocStudio/Utils/NsFilterWidget.h
index 6e9c495f692..918f7c25380 100644
--- i/src/sw/noc_dev/SCFNocStudio/Utils/NsFilterWidget.h
+++ w/src/sw/noc_dev/SCFNocStudio/Utils/NsFilterWidget.h
@@ -2,20 +2,31 @@
 #define NSFILTERWIDGET_H
 
 #include <QLineEdit>
-#include <QRegExp>
+#include <QRegularExpression>
 
 QT_BEGIN_NAMESPACE
 #include <QAction>
 #include <QActionGroup>
 QT_END_NAMESPACE
 
-Q_DECLARE_METATYPE(QRegExp::PatternSyntax)
+// Define a custom PatternSyntax enumeration
+enum class PatternSyntax {
+    RegularExpression,
+    Wildcard,
+    FixedString,
+    RegExp,
+    RegExp2,  // Match legacy QRegExp syntax types
+    WildcardUnix,
+    W3CXmlSchema11
+};
+
+Q_DECLARE_METATYPE(PatternSyntax)
 
 class NsFilterWidget : public QLineEdit
 {
     Q_OBJECT
         Q_PROPERTY(Qt::CaseSensitivity caseSensitivity READ caseSensitivity WRITE setCaseSensitivity)
-        Q_PROPERTY(QRegExp::PatternSyntax patternSyntax READ patternSyntax WRITE setPatternSyntax)
+        Q_PROPERTY(PatternSyntax patternSyntax READ patternSyntax WRITE setPatternSyntax)
 
 public:
     explicit NsFilterWidget(QWidget* parent = nullptr);
@@ -23,8 +34,8 @@ public:
     Qt::CaseSensitivity caseSensitivity() const;
     void setCaseSensitivity(Qt::CaseSensitivity);
 
-    QRegExp::PatternSyntax patternSyntax() const;
-    void setPatternSyntax(QRegExp::PatternSyntax);
+    PatternSyntax patternSyntax() const;
+    void setPatternSyntax(PatternSyntax);
 
 signals:
     void filterChanged();
diff --git i/src/sw/noc_dev/SCFNocStudio/Utils/qcustomplot.cpp w/src/sw/noc_dev/SCFNocStudio/Utils/qcustomplot.cpp
index b36479eea03..6e910b13141 100644
--- i/src/sw/noc_dev/SCFNocStudio/Utils/qcustomplot.cpp
+++ w/src/sw/noc_dev/SCFNocStudio/Utils/qcustomplot.cpp
@@ -3252,7 +3252,7 @@ Qt::Alignment QCPLayoutInset::insetAlignment(int index) const
     else
     {
         qDebug() << Q_FUNC_INFO << "Invalid element index:" << index;
-        return 0;
+        return Qt::AlignLeft;
     }
 }
 
@@ -6466,8 +6466,10 @@ QByteArray QCPAxisPainterPrivate::generateLabelParameterHash() const
     result.append(QByteArray::number(tickLabelRotation));
     result.append(QByteArray::number((int)substituteExponent));
     result.append(QByteArray::number((int)numberMultiplyCross));
-    result.append(tickLabelColor.name() + QByteArray::number(tickLabelColor.alpha(), 16));
-    result.append(tickLabelFont.toString());
+    result.append(tickLabelColor.name().toStdString().c_str());
+    result.append(QByteArray::number(tickLabelColor.alpha(), 16));
+    result.append(tickLabelFont.toString().toStdString().c_str());
+
     return result;
 }
 
@@ -7588,7 +7590,10 @@ QCPItemAnchor::QCPItemAnchor(QCustomPlot * parentPlot, QCPAbstractItem * parentI
 QCPItemAnchor::~QCPItemAnchor()
 {
     // unregister as parent at children:
-    QList<QCPItemPosition*> currentChildren(mChildren.toList());
+    QList<QCPItemPosition*> currentChildren;
+    for (auto itr = mChildren.begin(); itr != mChildren.end(); ++itr) {
+        currentChildren.push_back(*itr);
+    }
     for (int i = 0; i < currentChildren.size(); ++i)
         currentChildren.at(i)->setParentAnchor(0); // this acts back on this anchor and child removes itself from mChildren
 }
@@ -7696,7 +7701,10 @@ QCPItemPosition::~QCPItemPosition()
     // unregister as parent at children:
     // Note: this is done in ~QCPItemAnchor again, but it's important QCPItemPosition does it itself, because only then
     //       the setParentAnchor(0) call the correct QCPItemPosition::pixelPoint function instead of QCPItemAnchor::pixelPoint
-    QList<QCPItemPosition*> currentChildren(mChildren.toList());
+    QList<QCPItemPosition*> currentChildren;
+    for (auto itr = mChildren.begin(); itr != mChildren.end(); ++itr) {
+        currentChildren.push_back(*itr);
+    }
     for (int i = 0; i < currentChildren.size(); ++i)
         currentChildren.at(i)->setParentAnchor(0); // this acts back on this anchor and child removes itself from mChildren
       // unregister as child in parent:
@@ -10523,7 +10531,7 @@ void QCustomPlot::replot(QCustomPlot::RefreshPriority refreshPriority)
     painter.begin(&mPaintBuffer);
     if (painter.isActive())
     {
-        painter.setRenderHint(QPainter::HighQualityAntialiasing); // to make Antialiasing look good if using the OpenGL graphicssystem
+        //painter.setRenderHint(QPainter::HighQualityAntialiasing); // to make Antialiasing look good if using the OpenGL graphicssystem
         if (mBackgroundBrush.style() != Qt::SolidPattern && mBackgroundBrush.style() != Qt::NoBrush)
             painter.fillRect(mViewport, mBackgroundBrush);
         draw(&painter);
@@ -10751,7 +10759,7 @@ bool QCustomPlot::savePdf(const QString & fileName, bool noCosmeticPen, int widt
     printer.printEngine()->setProperty(QPrintEngine::PPK_DocumentName, pdfTitle);
     QRect oldViewport = viewport();
     setViewport(QRect(0, 0, newWidth, newHeight));
-    printer.setPaperSize(viewport().size(), QPrinter::DevicePixel);
+    //printer.setPaperSize(viewport().size(), QPrinter::DevicePixel);
     QCPPainter printpainter;
     if (printpainter.begin(&printer))
     {
@@ -10970,7 +10978,7 @@ void QCustomPlot::mouseDoubleClickEvent(QMouseEvent * event)
         emit titleDoubleClick(event, pt);
 
     // call double click event of affected layout element:
-    if (QCPLayoutElement * el = layoutElementAt(event->pos()))
+    if (QCPLayoutElement* el = layoutElementAt(event->position()))
         el->mouseDoubleClickEvent(event);
 
     // call release event of affected layout element (as in mouseReleaseEvent, since the mouseDoubleClick replaces the second release event in double click case):
@@ -10996,7 +11004,7 @@ void QCustomPlot::mousePressEvent(QMouseEvent * event)
     mMousePressPos = event->pos(); // need this to determine in releaseEvent whether it was a click (no position change between press and release)
 
     // call event of affected layout element:
-    mMouseEventElement = layoutElementAt(event->pos());
+    mMouseEventElement = layoutElementAt(event->position());
     if (mMouseEventElement)
         mMouseEventElement->mousePressEvent(event);
 
@@ -11120,7 +11128,7 @@ void QCustomPlot::wheelEvent(QWheelEvent * event)
     emit mouseWheel(event);
 
     // call event of affected layout element:
-    if (QCPLayoutElement * el = layoutElementAt(event->pos()))
+    if (QCPLayoutElement* el = layoutElementAt(event->position()))
         el->wheelEvent(event);
 
     QWidget::wheelEvent(event);
@@ -11818,7 +11826,7 @@ void QCPColorGradient::updateColorBuffer()
             QMap<double, QColor>::const_iterator it = mColorStops.lowerBound(position);
             if (it == mColorStops.constEnd()) // position is on or after last stop, use color of last stop
             {
-                mColorBuffer[i] = (it - 1).value().rgb();
+                mColorBuffer[i] = std::prev(it).value().rgb();
             }
             else if (it == mColorStops.constBegin()) // position is on or before first stop, use color of first stop
             {
@@ -11827,7 +11835,7 @@ void QCPColorGradient::updateColorBuffer()
             else // position is in between stops (or on an intermediate stop), interpolate color
             {
                 QMap<double, QColor>::const_iterator high = it;
-                QMap<double, QColor>::const_iterator low = it - 1;
+                QMap<double, QColor>::const_iterator low  = std::prev(it);
                 double t = (position - low.key()) / (high.key() - low.key()); // interpolation factor 0..1
                 switch (mColorInterpolation)
                 {
@@ -12834,18 +12842,18 @@ void QCPAxisRect::wheelEvent(QWheelEvent * event)
         {
             double factor;
             //qDebug() << "delta = " << event->delta();
-            double wheelSteps = event->delta() / 120.0; // a single step delta is +/-120 usually
+            double wheelSteps = event->angleDelta().y() / 120.0;  // a single step delta is +/-120 usually
             if (mRangeZoom.testFlag(Qt::Horizontal))
             {
                 factor = pow(mRangeZoomFactorHorz, wheelSteps);
                 if (mRangeZoomHorzAxis.data())
-                    mRangeZoomHorzAxis.data()->scaleRange(factor, mRangeZoomHorzAxis.data()->pixelToCoord(event->pos().x()));
+                    mRangeZoomHorzAxis.data()->scaleRange(factor, mRangeZoomHorzAxis.data()->pixelToCoord(event->position().x()));
             }
             if (mRangeZoom.testFlag(Qt::Vertical) && !mParentPlot->interactions().testFlag(QCP::iNotZoomVertically))
             {
                 factor = pow(mRangeZoomFactorVert, wheelSteps);
                 if (mRangeZoomVertAxis.data())
-                    mRangeZoomVertAxis.data()->scaleRange(factor, mRangeZoomVertAxis.data()->pixelToCoord(event->pos().y()));
+                    mRangeZoomVertAxis.data()->scaleRange(factor, mRangeZoomVertAxis.data()->pixelToCoord(event->position().y()));
             }
             mParentPlot->replot();
         }
@@ -14277,7 +14285,7 @@ void QCPColorScale::setRangeDrag(bool enabled)
     if (enabled)
         mAxisRect.data()->setRangeDrag(QCPAxis::orientation(mType));
     else
-        mAxisRect.data()->setRangeDrag(0);
+        mAxisRect.data()->setRangeDrag(Qt::Orientation(0));
 }
 
 /*!
@@ -14297,7 +14305,7 @@ void QCPColorScale::setRangeZoom(bool enabled)
     if (enabled)
         mAxisRect.data()->setRangeZoom(QCPAxis::orientation(mType));
     else
-        mAxisRect.data()->setRangeZoom(0);
+        mAxisRect.data()->setRangeZoom(Qt::Orientation(0));
 }
 
 /*!
@@ -14799,7 +14807,7 @@ void QCPGraph::setData(const QVector<float> & key, const QVector<float> & value)
     {
         newData.key = key[i];
         newData.value = value[i];
-        mData->insertMulti(newData.key, newData);
+        mData->insert(newData.key, newData);
     }
 }
 
@@ -14827,7 +14835,7 @@ void QCPGraph::setDataValueError(const QVector<double> & key, const QVector<doub
         newData.valueErrorMinus = valueError[i];
         newData.valueErrorPlus = valueError[i];
 #endif
-        mData->insertMulti(key[i], newData);
+        mData->insert(key[i], newData);
     }
 }
 
@@ -14856,7 +14864,7 @@ void QCPGraph::setDataValueError(const QVector<double> & key, const QVector<doub
         newData.valueErrorMinus = valueErrorMinus[i];
         newData.valueErrorPlus = valueErrorPlus[i];
 #endif
-        mData->insertMulti(key[i], newData);
+        mData->insert(key[i], newData);
     }
 }
 
@@ -14884,7 +14892,7 @@ void QCPGraph::setDataKeyError(const QVector<double> & key, const QVector<double
         newData.keyErrorMinus = keyError[i];
         newData.keyErrorPlus = keyError[i];
 #endif
-        mData->insertMulti(key[i], newData);
+        mData->insert(key[i], newData);
     }
 }
 
@@ -14913,7 +14921,7 @@ void QCPGraph::setDataKeyError(const QVector<double> & key, const QVector<double
         newData.keyErrorMinus = keyErrorMinus[i];
         newData.keyErrorPlus = keyErrorPlus[i];
 #endif
-        mData->insertMulti(key[i], newData);
+        mData->insert(key[i], newData);
     }
 }
 
@@ -14944,7 +14952,7 @@ void QCPGraph::setDataBothError(const QVector<double> & key, const QVector<doubl
         newData.valueErrorMinus = valueError[i];
         newData.valueErrorPlus = valueError[i];
 #endif
-        mData->insertMulti(key[i], newData);
+        mData->insert(key[i], newData);
     }
 }
 
@@ -14977,7 +14985,7 @@ void QCPGraph::setDataBothError(const QVector<double> & key, const QVector<doubl
         newData.valueErrorMinus = valueErrorMinus[i];
         newData.valueErrorPlus = valueErrorPlus[i];
 #endif
-        mData->insertMulti(key[i], newData);
+        mData->insert(key[i], newData);
     }
 }
 
@@ -15124,7 +15132,9 @@ void QCPGraph::setAdaptiveSampling(bool enabled)
 */
 void QCPGraph::addData(const QCPDataMap & dataMap)
 {
-    mData->unite(dataMap);
+    for (auto itr = dataMap.cbegin(); itr != dataMap.cend(); ++itr) {
+        mData->insert(itr.key(), itr.value());
+    }
 }
 
 /*! \overload
@@ -15137,7 +15147,7 @@ void QCPGraph::addData(const QCPDataMap & dataMap)
 */
 void QCPGraph::addData(const QCPData & data)
 {
-    mData->insertMulti(data.key, data);
+    mData->insert(data.key, data);
 }
 
 /*! \overload
@@ -15153,7 +15163,7 @@ void QCPGraph::addData(double key, double value)
     QCPData newData;
     newData.key = key;
     newData.value = value;
-    mData->insertMulti(newData.key, newData);
+    mData->insert(newData.key, newData);
 }
 
 /*! \overload
@@ -15172,7 +15182,7 @@ void QCPGraph::addData(const QVector<double> & keys, const QVector<double> & val
     {
         newData.key = keys[i];
         newData.value = values[i];
-        mData->insertMulti(newData.key, newData);
+        mData->insert(newData.key, newData);
     }
 }
 
@@ -15923,7 +15933,7 @@ void QCPGraph::getPreparedData(QVector<QCPData> * lineData, QVector<QCPData> * s
         if (lineData)
         {
             QCPDataMap::const_iterator it = lower;
-            QCPDataMap::const_iterator upperEnd = upper + 1;
+            QCPDataMap::const_iterator upperEnd = std::next(upper);
             double minValue = it.value().value;
             double maxValue = it.value().value;
             QCPDataMap::const_iterator currentIntervalFirstPoint = it;
@@ -15954,11 +15964,11 @@ void QCPGraph::getPreparedData(QVector<QCPData> * lineData, QVector<QCPData> * s
                         lineData->append(QCPData(currentIntervalStartKey + keyEpsilon * 0.25, minValue));
                         lineData->append(QCPData(currentIntervalStartKey + keyEpsilon * 0.75, maxValue));
                         if (it.key() > currentIntervalStartKey + keyEpsilon * 2) // new pixel started further away from previous cluster, so make sure the last point of the cluster is at a real data point
-                            lineData->append(QCPData(currentIntervalStartKey + keyEpsilon * 0.8, (it - 1).value().value));
+                            lineData->append(QCPData(currentIntervalStartKey + keyEpsilon * 0.8, std::prev(it).value().value));
                     }
                     else
                         lineData->append(QCPData(currentIntervalFirstPoint.key(), currentIntervalFirstPoint.value().value));
-                    lastIntervalEndKey = (it - 1).value().key;
+                    lastIntervalEndKey = std::prev(it).value().key;
                     minValue = it.value().value;
                     maxValue = it.value().value;
                     currentIntervalFirstPoint = it;
@@ -15986,7 +15996,7 @@ void QCPGraph::getPreparedData(QVector<QCPData> * lineData, QVector<QCPData> * s
             double valueMaxRange = valueAxis->range().upper;
             double valueMinRange = valueAxis->range().lower;
             QCPDataMap::const_iterator it = lower;
-            QCPDataMap::const_iterator upperEnd = upper + 1;
+            QCPDataMap::const_iterator upperEnd = std::next(upper);
             double minValue = it.value().value;
             double maxValue = it.value().value;
             QCPDataMap::const_iterator minValueIt = it;
@@ -16074,7 +16084,7 @@ void QCPGraph::getPreparedData(QVector<QCPData> * lineData, QVector<QCPData> * s
         if (dataVector)
         {
             QCPDataMap::const_iterator it = lower;
-            QCPDataMap::const_iterator upperEnd = upper + 1;
+            QCPDataMap::const_iterator upperEnd = std::next(upper);
             dataVector->reserve(dataCount + 2); // +2 for possible fill end points
             while (it != upperEnd)
             {
@@ -16226,8 +16236,8 @@ void QCPGraph::getVisibleDataBounds(QCPDataMap::const_iterator & lower, QCPDataM
     bool lowoutlier = lbound != mData->constBegin(); // indicates whether there exist points below axis range
     bool highoutlier = ubound != mData->constEnd(); // indicates whether there exist points above axis range
 
-    lower = (lowoutlier ? lbound - 1 : lbound); // data point range that will be actually drawn
-    upper = (highoutlier ? ubound : ubound - 1); // data point range that will be actually drawn
+    lower = (lowoutlier ? std::prev(lbound) : lbound);  // data point range that will be actually drawn
+    upper = (highoutlier ? ubound : std::prev(ubound));  // data point range that will be actually drawn
 }
 
 /*!  \internal
@@ -17146,7 +17156,7 @@ void QCPCurve::setData(const QVector<double> & key, const QVector<double> & valu
         newData.t = i; // no t vector given, so we assign t the index of the key/value pair
         newData.key = key[i];
         newData.value = value[i];
-        mData->insertMulti(newData.t, newData);
+        mData->insert(newData.t, newData);
     }
 }
 
@@ -17180,7 +17190,9 @@ void QCPCurve::setLineStyle(QCPCurve::LineStyle style)
 */
 void QCPCurve::addData(const QCPCurveDataMap & dataMap)
 {
-    mData->unite(dataMap);
+    for (auto itr = dataMap.cbegin(); itr != dataMap.cend(); ++itr) {
+        mData->insert(itr.key(), itr.value());
+    }
 }
 
 /*! \overload
@@ -17189,7 +17201,7 @@ void QCPCurve::addData(const QCPCurveDataMap & dataMap)
 */
 void QCPCurve::addData(const QCPCurveData & data)
 {
-    mData->insertMulti(data.t, data);
+    mData->insert(data.t, data);
 }
 
 /*! \overload
@@ -17202,7 +17214,7 @@ void QCPCurve::addData(double t, double key, double value)
     newData.t = t;
     newData.key = key;
     newData.value = value;
-    mData->insertMulti(newData.t, newData);
+    mData->insert(newData.t, newData);
 }
 
 /*! \overload
@@ -17217,12 +17229,12 @@ void QCPCurve::addData(double key, double value)
 {
     QCPCurveData newData;
     if (!mData->isEmpty())
-        newData.t = (mData->constEnd() - 1).key() + 1;
+        newData.t = std::prev(mData->constEnd()).key() + 1;
     else
         newData.t = 0;
     newData.key = key;
     newData.value = value;
-    mData->insertMulti(newData.t, newData);
+    mData->insert(newData.t, newData);
 }
 
 /*! \overload
@@ -17240,7 +17252,7 @@ void QCPCurve::addData(const QVector<double> & ts, const QVector<double> & keys,
         newData.t = ts[i];
         newData.key = keys[i];
         newData.value = values[i];
-        mData->insertMulti(newData.t, newData);
+        mData->insert(newData.t, newData);
     }
 }
 
@@ -17506,11 +17518,11 @@ void QCPCurve::getCurveData(QVector<QPointF> * lineData) const
         if (currentRegion == 5 || (firstPoint && mBrush.style() != Qt::NoBrush)) // current is in R, add current and last if it wasn't added already
         {
             if (!addedLastAlready) // in case curve just entered R, make sure the last point outside R is also drawn correctly
-                lineData->append(coordsToPixels((it - 1).value().key, (it - 1).value().value)); // add last point to vector
+                lineData->append(coordsToPixels(std::prev(it).value().key, std::prev(it).value().value));  // add last point to vector
             else if (lastRegion != 5) // added last already. If that's the case, we probably added it at optimized position. So go back and make sure it's at original position (else the angle changes under which this segment enters R)
             {
                 if (!firstPoint) // because on firstPoint, currentRegion is 5 and addedLastAlready is true, although there is no last point
-                    lineData->replace(lineData->size() - 1, coordsToPixels((it - 1).value().key, (it - 1).value().value));
+                    lineData->replace(lineData->size() - 1, coordsToPixels(std::prev(it).value().key, std::prev(it).value().value));
             }
             lineData->append(coordsToPixels(it.value().key, it.value().value)); // add current point to vector
             addedLastAlready = true; // so in next iteration, we don't add this point twice
@@ -17529,7 +17541,7 @@ void QCPCurve::getCurveData(QVector<QPointF> * lineData) const
             {
                 // always add last point if not added already, original:
                 if (!addedLastAlready)
-                    lineData->append(coordsToPixels((it - 1).value().key, (it - 1).value().value));
+                    lineData->append(coordsToPixels(std::prev(it).value().key, std::prev(it).value().value));
                 // add current point, original:
                 lineData->append(coordsToPixels(it.value().key, it.value().value));
             }
@@ -17537,7 +17549,7 @@ void QCPCurve::getCurveData(QVector<QPointF> * lineData) const
             {
                 // always add last point if not added already, optimized:
                 if (!addedLastAlready)
-                    lineData->append(outsideCoordsToPixels((it - 1).value().key, (it - 1).value().value, currentRegion, axisRect));
+                    lineData->append(outsideCoordsToPixels(std::prev(it).value().key, std::prev(it).value().value, currentRegion, axisRect));
                 // add current point, optimized:
                 lineData->append(outsideCoordsToPixels(it.value().key, it.value().value, currentRegion, axisRect));
             }
@@ -17552,7 +17564,7 @@ void QCPCurve::getCurveData(QVector<QPointF> * lineData) const
     }
     // If curve ends outside R, we want to add very last point so the fill looks like it should when the curve started inside R:
     if (lastRegion != 5 && mBrush.style() != Qt::NoBrush && !mData->isEmpty())
-        lineData->append(coordsToPixels((mData->constEnd() - 1).value().key, (mData->constEnd() - 1).value().value));
+        lineData->append(coordsToPixels(std::prev(mData->constEnd()).value().key, std::prev(mData->constEnd()).value().value));
 }
 
 /*! \internal
@@ -17848,7 +17860,7 @@ void QCPBars::setData(const QVector<double> & key, const QVector<double> & value
     {
         newData.key = key[i];
         newData.value = value[i];
-        mData->insertMulti(newData.key, newData);
+        mData->insert(newData.key, newData);
     }
 }
 
@@ -17924,7 +17936,9 @@ void QCPBars::moveAbove(QCPBars * bars)
 */
 void QCPBars::addData(const QCPBarDataMap & dataMap)
 {
-    mData->unite(dataMap);
+    for (auto itr = dataMap.cbegin(); itr != dataMap.cend(); ++itr) {
+        mData->insert(itr.key(), itr.value());
+    }
 }
 
 /*! \overload
@@ -17933,7 +17947,7 @@ void QCPBars::addData(const QCPBarDataMap & dataMap)
 */
 void QCPBars::addData(const QCPBarData & data)
 {
-    mData->insertMulti(data.key, data);
+    mData->insert(data.key, data);
 }
 
 /*! \overload
@@ -17945,7 +17959,7 @@ void QCPBars::addData(double key, double value)
     QCPBarData newData;
     newData.key = key;
     newData.value = value;
-    mData->insertMulti(newData.key, newData);
+    mData->insert(newData.key, newData);
 }
 
 /*! \overload
@@ -17961,7 +17975,7 @@ void QCPBars::addData(const QVector<double> & keys, const QVector<double> & valu
     {
         newData.key = keys[i];
         newData.value = values[i];
-        mData->insertMulti(newData.key, newData);
+        mData->insert(newData.key, newData);
     }
 }
 
@@ -21404,7 +21418,8 @@ void QCPItemTracer::updatePosition()
             if (mGraph->data()->size() > 1)
             {
                 QCPDataMap::const_iterator first = mGraph->data()->constBegin();
-                QCPDataMap::const_iterator last = mGraph->data()->constEnd() - 1;
+                QCPDataMap::const_iterator last  = std::prev(mGraph->data()->constEnd());
+
                 if (mGraphKey < first.key())
                     position->setCoords(first.key(), first.value().value);
                 else if (mGraphKey > last.key())
@@ -21414,7 +21429,7 @@ void QCPItemTracer::updatePosition()
                     QCPDataMap::const_iterator it = mGraph->data()->lowerBound(mGraphKey);
                     if (it != first) // mGraphKey is somewhere between iterators
                     {
-                        QCPDataMap::const_iterator prevIt = it - 1;
+                        QCPDataMap::const_iterator prevIt = std::prev(it);
                         if (mInterpolating)
                         {
                             // interpolate between iterators around mGraphKey:
diff --git i/src/sw/noc_dev/SCFNocStudio/Utils/sort_property.cpp w/src/sw/noc_dev/SCFNocStudio/Utils/sort_property.cpp
index b2f845c2709..93194f55c13 100644
--- i/src/sw/noc_dev/SCFNocStudio/Utils/sort_property.cpp
+++ w/src/sw/noc_dev/SCFNocStudio/Utils/sort_property.cpp
@@ -52,8 +52,8 @@ bool wordsFilter(QString text, QString filter)
 {
     // multiple words
     if (!filter.isEmpty()) {
-        QRegExp rx("(\\ |\\,|\\;|\\:|\\t)"); //RegEx for ' ' or ',' or ';' or '.' or ':' or '\t'
-        QStringList words = filter.split(rx, QString::SkipEmptyParts);
+        QRegularExpression rx("(\\ |\\,|\\;|\\:|\\t)");  // RegEx for ' ' or ',' or ';' or '.' or ':' or '\t'
+        QStringList words = filter.split(rx, Qt::SkipEmptyParts);
         for (auto const& w : words) {
             if (text.contains(w, Qt::CaseInsensitive)) {
                 return false;
diff --git i/src/sw/noc_dev/SCFNocStudio/Utils/worker.cpp w/src/sw/noc_dev/SCFNocStudio/Utils/worker.cpp
index 138a79ba6ff..16ec7860039 100644
--- i/src/sw/noc_dev/SCFNocStudio/Utils/worker.cpp
+++ w/src/sw/noc_dev/SCFNocStudio/Utils/worker.cpp
@@ -2,7 +2,7 @@
 #include "Utils/global.h"
 #include "Utils/inidebug.h"
 #include "Gui/propertypanel.h"
-
+#include <QRegularExpression>
 #include "Grid.h"
 
 Worker::Worker(NetSpeed::NocConsole* c, INIConsole* ini, MainWindow* parent) :
@@ -16,7 +16,7 @@ Worker::Worker(NetSpeed::NocConsole* c, INIConsole* ini, MainWindow* parent) :
 void Worker::processBlkCmd(QString blkCmd, bool isDesignRevMode)
 {
     bool res = false;
-    QStringList cmds = blkCmd.split(QRegExp("[\r\n]"));
+    QStringList cmds = blkCmd.split(QRegularExpression("[\r\n]"));
     if (cmds.isEmpty()) return;
     emit setReadOnly();
 
diff --git i/src/sw/noc_dev/SCFNocStudio/main.cpp w/src/sw/noc_dev/SCFNocStudio/main.cpp
index fec34617dc0..7603d2e567e 100644
--- i/src/sw/noc_dev/SCFNocStudio/main.cpp
+++ w/src/sw/noc_dev/SCFNocStudio/main.cpp
@@ -14,6 +14,7 @@
 #include <vector>                   // for vector, _Vector_iterator, _Vector_const_iterator
 
 #include <QApplication>
+#include <QGuiApplication>
 #include <QSemaphore>
 
 #include "Gui/View/NsNocViewScene.h"
@@ -341,8 +342,8 @@ int main(int argc, char* argv[]) {
             //generate auto-sized splash image
             QPixmap splashImage = QPixmap(":/images/intel_splash.png");
             QWidget* screen = nullptr;
-            screen = QApplication::desktop()->screen(QApplication::desktop()->primaryScreen());//get primary screen (splash screen only displayed on primary)
-            if (QApplication::desktop()->screenCount() == 0 || screen == nullptr)//if there is no screen registered, calculate size based on font metrics
+            //screen = QApplication::desktop()->screen(QApplication::desktop()->primaryScreen());//get primary screen (splash screen only displayed on primary)
+            if (screen == nullptr)  // if there is no screen registered, calculate size based on font metrics
             {
                 QFontMetrics fontMet = QFontMetrics(QFont("Gotham Rounded Book", 10, 10));
                 splashImage = splashImage.scaledToHeight(fontMet.height() * 18);
diff --git i/src/sw/noc_dev/prototype/CMakeLists.txt w/src/sw/noc_dev/prototype/CMakeLists.txt
index b7f48d4069b..588e785e106 100755
--- i/src/sw/noc_dev/prototype/CMakeLists.txt
+++ w/src/sw/noc_dev/prototype/CMakeLists.txt
@@ -4,7 +4,12 @@ set(CMAKE_AUTORCC ON)
 set(CMAKE_AUTOUIC ON)
 set(CMAKE_PREFIX_PATH /usr/intel/pkgs/libqt/5.11.2/)
 
-find_package(Qt5 COMPONENTS Core Gui Widgets PrintSupport REQUIRED)
+
+if (NS_USE_QT6)
+  find_package(Qt6 COMPONENTS Core Gui Widgets PrintSupport REQUIRED)
+else()
+  find_package(Qt5 COMPONENTS Core Gui Widgets PrintSupport REQUIRED)
+endif()
 find_package(OpenMP)
 
 # prototype/
@@ -23,4 +28,10 @@ list(FILTER gui_sources EXCLUDE REGEX "^qrc_.*[.]cpp")
 # setup executable target for NS-GUI
 add_executable(NocStudio-GUI ${gui_sources})
 target_include_directories(NocStudio-GUI PRIVATE ${gui_includes} ${CMAKE_BINARY_DIR})
-target_link_libraries(NocStudio-GUI PUBLIC noc_infra noc_core noc_config_ns ipcore tclvfs Qt5::Core Qt5::Gui Qt5::Widgets Qt5::PrintSupport pthread dl GUICore OpenMP::OpenMP_CXX)
+
+
+if (NS_USE_QT6)
+  target_link_libraries(NocStudio-GUI PUBLIC noc_infra noc_core noc_config_ns ipcore tclvfs Qt6::Core Qt6::Gui Qt6::Widgets Qt6::PrintSupport pthread dl GUICore OpenMP::OpenMP_CXX)
+else()
+  target_link_libraries(NocStudio-GUI PUBLIC noc_infra noc_core noc_config_ns ipcore tclvfs Qt5::Core Qt5::Gui Qt5::Widgets Qt5::PrintSupport pthread dl GUICore OpenMP::OpenMP_CXX)
+endif()
diff --git i/src/sw/noc_dev/prototype/Gui/Customized/tableview.cpp w/src/sw/noc_dev/prototype/Gui/Customized/tableview.cpp
index de16fe01453..54f03eb2b17 100644
--- i/src/sw/noc_dev/prototype/Gui/Customized/tableview.cpp
+++ w/src/sw/noc_dev/prototype/Gui/Customized/tableview.cpp
@@ -12,6 +12,7 @@
 #include <atomic>
 #include "tableview.h"
 #include "Property.h"
+#include <algorithm>
 
 extern std::atomic<bool> gIsRunCmd;
 static std::vector<QChar> specialCharList = { ' ', '\\', ':', '@' };
@@ -93,7 +94,8 @@ void TableView::handleCopyEvent(bool all, int row)
     QAbstractItemModel * abmodel = this->model();
     QItemSelectionModel * model = this->selectionModel();
     QModelIndexList list = model->selectedIndexes();
-    qSort(list);
+    //qSort(list);
+    std::sort(list.begin(), list.end());
     if (list.count() < 1)  return;
 
     QString copied_table;
diff --git i/src/sw/noc_dev/prototype/Gui/Dialogs/CustomHighLightDialog.cpp w/src/sw/noc_dev/prototype/Gui/Dialogs/CustomHighLightDialog.cpp
index 9214156ee7f..f67b102372e 100644
--- i/src/sw/noc_dev/prototype/Gui/Dialogs/CustomHighLightDialog.cpp
+++ w/src/sw/noc_dev/prototype/Gui/Dialogs/CustomHighLightDialog.cpp
@@ -17,6 +17,7 @@
 #include "NsRouter.h"
 #include "NsVC.h"
 #include "Pifce.h"
+#include <algorithm>
 
 using std::vector;
 using NetSpeed::Rtlable;
@@ -377,7 +378,7 @@ void CustomHighLightDialog::createHlMap() {
             return false;
         }
     };
-    auto make_sort = [&](QList<QString>& list) -> void { qSort(list.begin(), list.end()); };
+    auto make_sort = [&](QList<QString>& list) -> void { std::sort(list.begin(), list.end()); };
 
     auto qos_rtl_filer = [&](QList<QString>& list, Rtlable* module) -> void {
         if (!module) return;
@@ -980,26 +981,26 @@ void CustomHighLightDialog::refreshDialog() {
     l.sort();
     comboBoxChannel->addItems(l);
 
-    for (const auto sp : g->get_spine_cg_mods()) {
+    for (const auto& sp : g->get_spine_cg_mods()) {
         if (!sp.second->name().empty()) {
             comboBoxSpineClockGate->addItem(QString::fromStdString(sp.second->name()));
         }
     }
 
-    for (const auto srm : g->get_sync_reset_mods()) {
+    for (const auto& srm : g->get_sync_reset_mods()) {
         if (!srm.first.empty()) {
             comboBoxSyncReset->addItem(QString::fromStdString(srm.first));
         }
     }
 
     QList<QString> listProto;
-    for (const auto p : NetSpeed::supported_protocols(NetSpeed::nullopt)) {
+    for (const auto& p : NetSpeed::supported_protocols(NetSpeed::nullopt)) {
         auto proto   = NetSpeed::to_string(p);
         if (!proto.empty()) {
             listProto.append(QString::fromStdString(proto));
         }
     }
-    qSort(listProto.begin(), listProto.end());
+    std::sort(listProto.begin(), listProto.end());
     comboBoxBridgeType->addItems(listProto);
 
     QList<QString> list_qos;
diff --git i/src/sw/noc_dev/prototype/Gui/IniTxnItemModel.cpp w/src/sw/noc_dev/prototype/Gui/IniTxnItemModel.cpp
index 8f8676cf1d2..625279fef96 100644
--- i/src/sw/noc_dev/prototype/Gui/IniTxnItemModel.cpp
+++ w/src/sw/noc_dev/prototype/Gui/IniTxnItemModel.cpp
@@ -45,7 +45,7 @@ QVariant IniTxnItemModel::headerData(int section, Qt::Orientation orientation,
 Qt::ItemFlags IniTxnItemModel::flags(const QModelIndex & index) const
 {
     if (!index.isValid())
-        return 0;
+        return Qt::ItemFlags(0);
 
     Qt::ItemFlags flags = Qt::ItemIsEnabled | Qt::ItemIsSelectable;
 
diff --git i/src/sw/noc_dev/prototype/Gui/Item/NsBridge.cpp w/src/sw/noc_dev/prototype/Gui/Item/NsBridge.cpp
index 42cfe138a09..d2f86ef67e0 100644
--- i/src/sw/noc_dev/prototype/Gui/Item/NsBridge.cpp
+++ w/src/sw/noc_dev/prototype/Gui/Item/NsBridge.cpp
@@ -740,7 +740,8 @@ void NsNormalBridge::mouseReleaseEvent(QGraphicsSceneMouseEvent * event)
             setPos(anchorPoint);
             QPointF point = pos();
             if (point != anchorPoint) {
-                translate(-point.x() + anchorPoint.x(), -point.y() + anchorPoint.y());
+                //translate(-point.x() + anchorPoint.x(), -point.y() + anchorPoint.y());
+                setTransform(QTransform::fromTranslate(-point.x()+anchorPoint.x(), -point.y()+anchorPoint.y()));
             }
             update();
             nsWorkarea->clearMovedItems();
diff --git i/src/sw/noc_dev/prototype/Gui/Item/NsBridgeDiagram.cpp w/src/sw/noc_dev/prototype/Gui/Item/NsBridgeDiagram.cpp
index 67b427718e2..bcb3c54d6cb 100644
--- i/src/sw/noc_dev/prototype/Gui/Item/NsBridgeDiagram.cpp
+++ w/src/sw/noc_dev/prototype/Gui/Item/NsBridgeDiagram.cpp
@@ -228,17 +228,17 @@ void NsRouterDiagram::showFlowData(const NetSpeed::VC* vc, bool hasAnimation, bo
         path_flow.moveTo(startL);
 
         QPointF cpoint;
-        outLine.intersect(inLine, &cpoint);
+        outLine.intersects(inLine, &cpoint);
 
         if (cpoint != QPointF(0,0) && m_routerPolyGon->contains(cpoint)) {
             path_flow.quadTo(cpoint, endL);
         } else {
             QPointF c1point;
             QPointF c2point;
-            outLine.normalVector().intersect(inLine, &c1point);
+            outLine.normalVector().intersects(inLine, &c1point);
             c1point = (c1point + startL) / 2;
 
-            inLine.normalVector().intersect(outLine, &c2point);
+            inLine.normalVector().intersects(outLine, &c2point);
             c2point = (c2point + endL) / 2;
 
             if (m_routerPolyGon->contains(c1point) && m_routerPolyGon->contains(c2point)) {
@@ -392,7 +392,7 @@ void NsRouterDiagram::drawFeedBackArrow(int dir, QLineF & line, const NetSpeed::
     const QPointF arrowLength = QPointF(29, 0);
     auto arrowHeadLine = QLineF(path.pointAtPercent(0),
         path.pointAtPercent(0) + arrowLength);
-    QMatrix matrix;
+    QTransform matrix;
     QPoint start = line.p1().toPoint();
     matrix.translate(start.x(), start.y());
     // Rotate clockwise
@@ -514,7 +514,7 @@ void NsRouterDiagramVC::paint(QPainter * painter, const QStyleOptionGraphicsItem
     Q_UNUSED(widget);
 
     // To fix problem which makes QPainter does not draw arrow tail
-    painter->setRenderHint(QPainter::Qt4CompatiblePainting);
+    //painter->setRenderHint(QPainter::Qt4CompatiblePainting);
 
     auto arrowPath = path();
     if (isSelected() || hasFocus()) {
@@ -670,7 +670,7 @@ void NsRouterDiagram::drawVcLabel(QLineF & line, QString vcName, QPainterPath &
 
     QPainterPath p;
     p.addText(xMargin, yMargin, font, vcName);
-    QMatrix matrix;
+    QTransform matrix;
     auto transPoint = end + adjustPoint;
     matrix.translate(transPoint.x(), transPoint.y());
     matrix.rotate(rotationAngle);
@@ -837,14 +837,14 @@ void NsBridgeDiagram::initData()
 
     // max width of vc name
     for (const auto& vc : allVcs) {
-        int width = fontMetrics.width(QString::fromStdString(vc->name()));
+        int width = fontMetrics.tightBoundingRect(QString::fromStdString(vc->name())).width();
         maxWidthVcName = std::max(maxWidthVcName, width);
         maxVCsPenWidth = std::max(maxVCsPenWidth, vc->get_width());
     }
 
     //Get maximum width of ifce names
     for (auto const& ifce : allIfces) {
-        int width = fontMetrics.width(QString::fromStdString(ifce->if_name()));
+        int width = fontMetrics.tightBoundingRect(QString::fromStdString(ifce->if_name())).width();
         maxWidthIfceName = std::max(maxWidthIfceName, width);
         maxIFCEPenWidth = std::max(maxIFCEPenWidth, ifce->get_if_msg_width_cached());
     }
@@ -1061,7 +1061,7 @@ void NsRouterDiagram::initData()
             font.setPixelSize(nameSize);
             QString name = QString::fromStdString(vc.name());
 
-            int width = QFontMetrics(font).width(name) + vcLength;
+            int width = QFontMetrics(font).tightBoundingRect(name).width() + vcLength;
             qreal transition = qMin(vcBodyLine * id.as_int() + spacing, rp.size);
             QPoint startL, endL;
             NetSpeed::Port_id rp_id = (out) ?
@@ -1375,7 +1375,7 @@ void NsRouterPolyGon::hoverEnterEvent(QGraphicsSceneHoverEvent * event) {
 void NsRouterPolyGon::mousePressEvent(QGraphicsSceneMouseEvent * event) {
     event->ignore();
     auto meshScene = static_cast<NsMeshViewScene*>(scene());
-    if (event->button() != Qt::MidButton && !isAddBridgeNoc(meshScene->getInsType()) &&
+    if (event->button() != Qt::MiddleButton && !isAddBridgeNoc(meshScene->getInsType()) &&
         !isAddAgentMeshView(meshScene->getInsType())) {
         auto mw = qobject_cast<MainWindow*>(QApplication::activeWindow());
         if (!mw)  return;
@@ -1439,7 +1439,7 @@ void NsRouterPolyGon::drawTextRouterDiagram(QPainter & painter, NetSpeed::Port_i
             (rp.size / 2 - rp.north_port_length) *
             diagramTextFactor));
         painter.rotate(-45);
-        painter.drawText(painter.fontMetrics().width("North West (J)") *
+        painter.drawText(painter.fontMetrics().tightBoundingRect("North West (J)").width() *
             -diagramTextFactor, yOffsetMargin,
             QString("North West (J)"));
         painter.restore();
@@ -1453,7 +1453,7 @@ void NsRouterPolyGon::drawTextRouterDiagram(QPainter & painter, NetSpeed::Port_i
             (rp.size / 2 - rp.north_port_length) *
             diagramTextFactor));
         painter.rotate(45);
-        painter.drawText(painter.fontMetrics().width("North East (K)") *
+        painter.drawText(painter.fontMetrics().tightBoundingRect("North East (K)").width() *
             -diagramTextFactor, yOffsetMargin,
             QString("North East (K)"));
         painter.restore();
@@ -1468,7 +1468,7 @@ void NsRouterPolyGon::drawTextRouterDiagram(QPainter & painter, NetSpeed::Port_i
             (rp.size / 2 - rp.north_port_length) *
             diagramTextFactor));
         painter.rotate(-45);
-        painter.drawText(painter.fontMetrics().width("South East (H)") *
+        painter.drawText(painter.fontMetrics().tightBoundingRect("South East (H)").width() *
             -diagramTextFactor, -tolerance,
             QString("South East (H)"));
         painter.restore();
@@ -1483,7 +1483,7 @@ void NsRouterPolyGon::drawTextRouterDiagram(QPainter & painter, NetSpeed::Port_i
             (rp.size / 2 - rp.north_port_length) *
             diagramTextFactor));
         painter.rotate(45);
-        painter.drawText(painter.fontMetrics().width("South West (I)") *
+        painter.drawText(painter.fontMetrics().tightBoundingRect("South West (I)").width() *
             -diagramTextFactor, -tolerance,
             QString("South West (I)"));
         painter.restore();
@@ -1724,8 +1724,8 @@ void NsRegbusRing::initData() {
     QString masterName = QString::fromStdString(rb->name());
 
     // Calculate width and heigth for pop up box
-    const int labelWidth          = metric.width(label);
-    const int ringMasterNameWidth = normalMetric.width(masterName);
+    const int labelWidth          = metric.tightBoundingRect(label).width();
+    const int ringMasterNameWidth = normalMetric.tightBoundingRect(masterName).width();
 
     int maxScaleFactor = 0;
     vector<int> ringPos;
@@ -1734,7 +1734,7 @@ void NsRegbusRing::initData() {
         ringPos.push_back(maxAllRingWidth);
         int maxRingWidth = 0;
         for (auto const& it : ring_slaves.second){
-            maxRingWidth = std::max(ringTextMetric.width(QString::fromStdString(it.second->name())) + ringNameMargin, maxRingWidth);
+            maxRingWidth = std::max(ringTextMetric.tightBoundingRect(QString::fromStdString(it.second->name())).width() + ringNameMargin, maxRingWidth);
         }
         maxAllRingWidth += maxRingWidth + ringSpacing;
         maxScaleFactor = std::max(isize(ring_slaves.second), maxScaleFactor);
@@ -2200,7 +2200,7 @@ void NsMeshSplitDiagram::generateChildrenItems()
         ingressForwardArrowPath = drawNormalArrow(line);
         //Ingress text
         ingressPath.addText(0, 0, font, ingressText);
-        QMatrix iMatrix;
+        QTransform iMatrix;
         auto transPoint = line.p2() + QPointF(-fontSize / 2, fontSize);
         iMatrix.translate(transPoint.x(), transPoint.y());
         iMatrix.rotate(90);
@@ -2214,7 +2214,7 @@ void NsMeshSplitDiagram::generateChildrenItems()
         arrowOutPath = drawNormalArrow(line);
         arrowOutTt = QString::fromStdString(router->get_tx_port(NetSpeed::NORTH_PORT)->get_adj_rx_port()->get_vc(NetSpeed::VC_id(0)).get_tooltip());
         //Egress text
-        QMatrix eMatrix;
+        QTransform eMatrix;
         egressPath.addText(0, 0, font, egressText);
         transPoint = QPointF(arrowOutStartPoint.x() - fontSize / 2,
             routerRecBox.center().y());
@@ -2254,7 +2254,7 @@ void NsMeshSplitDiagram::generateChildrenItems()
         ingressForwardArrowPath = drawNormalArrow(line);
         //Ingress text
         ingressPath.addText(0, 0, font, ingressText);
-        QMatrix iMatrix;
+        QTransform iMatrix;
         auto transPoint = line.p2() + QPointF(fontSize / 2, -fontSize);
         iMatrix.translate(transPoint.x(), transPoint.y());
         iMatrix.rotate(-90);
@@ -2263,7 +2263,7 @@ void NsMeshSplitDiagram::generateChildrenItems()
         linePath.moveTo(arrowInStartPoint);
         linePath.quadTo(controlPoint, arrowOutStartPoint);
         //Egress text
-        QMatrix eMatrix;
+        QTransform eMatrix;
         egressPath.addText(0, 0, font, egressText);
         transPoint = QPointF(arrowOutStartPoint.x() + fontSize / 2,
             routerRecBox.center().y());
@@ -2296,7 +2296,7 @@ void NsMeshSplitDiagram::generateChildrenItems()
         ingressForwardArrowPath = drawNormalArrow(line);
         //Ingress text
         ingressPath.addText(0, 0, font, ingressText);
-        QMatrix iMatrix;
+        QTransform iMatrix;
         auto transPoint = line.p2() + QPointF(-fontSize, fontSize / 2)
             - QPointF(ingressPath.boundingRect().width(), 0);
         iMatrix.translate(transPoint.x(), transPoint.y());
@@ -2310,7 +2310,7 @@ void NsMeshSplitDiagram::generateChildrenItems()
         linePath.moveTo(arrowInStartPoint);
         linePath.quadTo(controlPoint, arrowOutStartPoint);
         //Egress text
-        QMatrix eMatrix;
+        QTransform eMatrix;
         egressPath.addText(0, 0, font, egressText);
         transPoint = QPointF(routerRecBox.center().x() -
             fontSize - egressPath.boundingRect().width(),
@@ -2348,12 +2348,12 @@ void NsMeshSplitDiagram::generateChildrenItems()
         ingressForwardArrowPath = drawNormalArrow(line);
         //Ingress text
         ingressPath.addText(0, 0, font, ingressText);
-        QMatrix iMatrix;
+        QTransform iMatrix;
         auto transPoint = line.p2() + QPointF(fontSize, -fontSize / 2);
         iMatrix.translate(transPoint.x(), transPoint.y());
         ingressPath = iMatrix.map(ingressPath);
         //Egress text
-        QMatrix eMatrix;
+        QTransform eMatrix;
         egressPath.addText(0, 0, font, egressText);
         transPoint = QPointF(routerRecBox.center().x() -
             fontSize,
@@ -2456,7 +2456,7 @@ void NsLinkDiagram::initData()
         if (!vc || !vc->is_active()) continue;
         vcs.push_back(vc);
         maxVCsPenWidth = std::max(maxVCsPenWidth, vc->get_width());
-        const int txtSize = metric.width(QString::fromStdString(vc->name()));
+        const int txtSize = metric.tightBoundingRect(QString::fromStdString(vc->name())).width();
         maxVCNameLength = std::max(maxVCNameLength, txtSize);
     }
 
@@ -2899,24 +2899,24 @@ void NsRSSBDiagram::initRssbBridgeData()
     const int wMargin = 30;
     const int hMargin = 40;
     const int headerTextSize = 15;
-    const int maxItemsEachSideRSSB  = std::max(isize(allVCRssb2Br), allVcPhys2Rssb.size());
+    const int maxItemsEachSideRSSB  = std::max(isize(allVCRssb2Br), (int)allVcPhys2Rssb.size());
     auto fontMetrics = QFontMetrics(QFont());
 
     // max width of ifce names
     for (auto const& ifce : allIfces) {
-        int width = fontMetrics.width(QString::fromStdString(ifce->if_name()));
+        int width = fontMetrics.tightBoundingRect(QString::fromStdString(ifce->if_name())).width();
         maxWidthIfceName = std::max(maxWidthIfceName, width);
         maxIFCEPenWidth = std::max(maxIFCEPenWidth, ifce->get_if_msg_width_cached());
     }
 
     // max width of VcPhys name
     for (const auto& vc : allVcPhys2Rssb) {
-        int width      = fontMetrics.width(QString::fromStdString(vc->name()));
+        int width      = fontMetrics.tightBoundingRect(QString::fromStdString(vc->name())).width();
         maxWidthVcName = std::max(maxWidthVcName, width);
         maxVcPhys2RssbPenWidth = std::max(maxVcPhys2RssbPenWidth, vc->get_width());
     }
     for (const auto& vc : allVcPhys2Br) {
-        int width      = fontMetrics.width(QString::fromStdString(vc->name()));
+        int width      = fontMetrics.tightBoundingRect(QString::fromStdString(vc->name())).width();
         maxWidthVcName = std::max(maxWidthVcName, width);
         maxVcPhys2BrPenWidth = std::max(maxVcPhys2BrPenWidth, vc->get_width());
     }
@@ -3284,18 +3284,18 @@ QPainterPath NsRSSBDiagram::getPathFlow(QLineF inLine, QLineF outLine)
     path_flow.moveTo(startL);
 
     QPointF cpoint;
-    outLine.intersect(inLine, &cpoint);
+    outLine.intersects(inLine, &cpoint);
 
     if (cpoint != QPointF(0,0)) {
         path_flow.quadTo(cpoint, endL);
     } else {
         QPointF c1point;
         QPointF c2point;
-        outLine.normalVector().intersect(inLine, &c1point);
+        outLine.normalVector().intersects(inLine, &c1point);
         c1point = (c1point + startL) / 2;
 
         QLineF inlineReverse = QLineF(inLine.p2(), inLine.p1());
-        inlineReverse.normalVector().intersect(outLine, &c2point);
+        inlineReverse.normalVector().intersects(outLine, &c2point);
         c2point = (c2point + endL) / 2;
 
         path_flow.cubicTo(c1point, c2point, endL);
diff --git i/src/sw/noc_dev/prototype/Gui/Item/NsHost.cpp w/src/sw/noc_dev/prototype/Gui/Item/NsHost.cpp
index 7ce25a6bfff..7811497434f 100644
--- i/src/sw/noc_dev/prototype/Gui/Item/NsHost.cpp
+++ w/src/sw/noc_dev/prototype/Gui/Item/NsHost.cpp
@@ -864,7 +864,7 @@ NsStorageComponents::NsStorageComponents(const std::vector<std::unique_ptr<NetSp
     const qreal cosmeticMargin = (BRIDGE_SIZE - metric.height()) / 2;
     for(auto const& component : components){
         auto name = QString::fromStdString(component->full_name());
-        auto const nameWidth = metric.width(name);
+        auto const nameWidth = metric.tightBoundingRect(name).width();
         if(nameWidth >= maxWidth) {
             name = metric.elidedText(name, Qt::ElideRight, maxWidth);
             textWidth = maxWidth;
diff --git i/src/sw/noc_dev/prototype/Gui/Item/NsMesh.cpp w/src/sw/noc_dev/prototype/Gui/Item/NsMesh.cpp
index 4f37a0d3f5a..7f2061c5609 100644
--- i/src/sw/noc_dev/prototype/Gui/Item/NsMesh.cpp
+++ w/src/sw/noc_dev/prototype/Gui/Item/NsMesh.cpp
@@ -25,6 +25,7 @@
 #include <QStaticText>
 #include <QApplication>
 #include <QGraphicsSceneContextMenuEvent>
+#include <QTransform>
 
  //extern const int NODE_SIZE;
 using namespace NetSpeed;
@@ -440,15 +441,15 @@ void NsMesh::drawRowColId() {
         for (NetSpeed::Col_id i : grid->get_cols()) {
             QPainterPath path;
             QString val = QString::number(grid->get_col_width_um(i));
-            path.addText(QPointF(i * NODE_SIZE + NODE_SIZE / 2 - metric.width(val) / 2, layerEndPoint.ry() + metric.height()), physFont, val);
+            path.addText(QPointF(i * NODE_SIZE + NODE_SIZE / 2 - (metric.tightBoundingRect(val).width())/ 2, layerEndPoint.ry() + metric.height()), physFont, val);
             new NsCellDimension(path, i, true, this);
         }
         for (NetSpeed::Row_id i : grid->get_rows()) {
             QPainterPath path;
             QString val = QString::number(grid->get_row_height_um(i));
             path.addText(QPointF(), physFont, val);
-            QMatrix matrix;
-            matrix.translate(layerEndPoint.x() + 5, i * NODE_SIZE + NODE_SIZE / 2 - metric.width(val) / 2);
+            QTransform matrix;
+            matrix.translate(layerEndPoint.x() + 5, i * NODE_SIZE + NODE_SIZE / 2 - (metric.tightBoundingRect(val).width()) / 2);
             matrix.rotate(90);
             path = matrix.map(path);
             new NsCellDimension(path, i, false, this);
@@ -649,7 +650,7 @@ void NsMesh::displayLayerInfo()
     }
 
     // get width of text
-    auto layerNameWidth = layerNameFontMetric.width(layerNameLeftSide);
+    auto layerNameWidth = layerNameFontMetric.tightBoundingRect(layerNameLeftSide).width();
 
     // get rectangle to draw text
     QPoint bufferStartPoint, bufferEndPoint, currentTextStopPoint;
@@ -680,7 +681,7 @@ void NsMesh::displayLayerInfo()
         auto textStartPoint = currentTextStopPoint.rx() + textMargin;
         layerNamePath.addText(QPointF(textStartPoint, rectText.y() + layerNameFontMetric.height()),
                               layerNameFontTop, textMode);
-        currentTextStopPoint.setX(textStartPoint + layerNameFontMetric.width(textMode));
+        currentTextStopPoint.setX(textStartPoint + layerNameFontMetric.tightBoundingRect(textMode).width());
     }
     layerInfoLeft->setPath(layerNamePath);
     layerInfoLeft->setBrush(QColor(127, 127, 127));
@@ -696,12 +697,12 @@ void NsMesh::displayLayerInfo()
         if (maxColumn > 1 && maxRow >= 1) {
             linkBufferFont.setPixelSize(BUFFER_TEXT_SIZE);
             const int currentStop = currentTextStopPoint.rx();
-            while ((currentStop + textMargin + QFontMetricsF(linkBufferFont).width(linkBufferCost)) > bufferEndPoint.rx()) {
+            while ((currentStop + textMargin + QFontMetricsF(linkBufferFont).tightBoundingRect(linkBufferCost).width()) > bufferEndPoint.rx()) {
                 auto pixel = linkBufferFont.pixelSize() - 1;
                 if (pixel < 1) break;
                 linkBufferFont.setPixelSize(pixel);
             }
-            auto const linkBufferCostWidth = QFontMetricsF(linkBufferFont).width(linkBufferCost);
+            auto const linkBufferCostWidth = QFontMetricsF(linkBufferFont).tightBoundingRect(linkBufferCost).width();
             if ((currentTextStopPoint.rx() + textMargin) > bufferEndPoint.rx())
                 costPath.addText(currentTextStopPoint.rx() + linkBufferCostWidth + textMargin, rectText.y() + textMargin +
                     QFontMetricsF(linkBufferFont).height(), linkBufferFont, linkBufferCost);
@@ -887,10 +888,10 @@ NsSectorName::NsSectorName(const std::string& sName, const Node_id &tLeft, int w
         textFont.setPixelSize(qMax(15, qMin(30, (h * NODE_SIZE) / 10)));
         QFontMetricsF metric(textFont);
         auto sectorH = sector.height();
-        if(metric.width(sectorName) > sectorH) sectorName = metric.elidedText(sectorName, Qt::ElideRight, sectorH);
-        auto textWidth = metric.width(sectorName);
+        if(metric.tightBoundingRect(sectorName).width() > sectorH) sectorName = metric.elidedText(sectorName, Qt::ElideRight, sectorH);
+        auto textWidth = metric.tightBoundingRect(sectorName).width();
         namePath.addText(QPointF(0, 0), textFont, sectorName);
-        QMatrix matrix;
+        QTransform matrix;
         auto point = (angle < 0) ? startPoint - (sectorH - textWidth)/2 : startPoint + (sectorH - textWidth)/2;
         matrix.translate(distance, point);
         matrix.rotate(angle);
diff --git i/src/sw/noc_dev/prototype/Gui/Item/NsMultipleBridges.cpp w/src/sw/noc_dev/prototype/Gui/Item/NsMultipleBridges.cpp
index 62d4bc0d31f..52d816f74e7 100644
--- i/src/sw/noc_dev/prototype/Gui/Item/NsMultipleBridges.cpp
+++ w/src/sw/noc_dev/prototype/Gui/Item/NsMultipleBridges.cpp
@@ -58,7 +58,7 @@ NsMultipleBridges::NsMultipleBridges(const QPoint pos, const QVector<NetSpeed::B
     QPoint start(STRECH_MUL_BRI / 2, HEADER_MUL_BRI_HIG + STRECH_MUL_BRI / 2 + DIAGRAM_NAME_SIZE);
     for (auto const& br : br_temp) {
         QString name = QString::fromStdString(br->name());
-        int w = fm.width(name) + BRIDGE_SIZE + 2;
+        int w = fm.tightBoundingRect(name).width() + BRIDGE_SIZE + 2;
         width = width > w ? width : w;
         /* Create Bridge item */
         QGraphicsRectItem *bridge = nullptr;
@@ -423,7 +423,7 @@ NsSocViewMultipleBridges::NsSocViewMultipleBridges(const std::vector<NetSpeed::B
     for (auto br : bridges)
     {
         QString name = QString::fromStdString(br->name());
-        int w = fm.width(name) + bridge_edge_len * SOC_VIEW_UNIT + 2;
+        int w = fm.tightBoundingRect(name).width() + bridge_edge_len * SOC_VIEW_UNIT + 2;
         width = width > w ? width : w;
         /* Create Bridge item */
         NsSocViewBridge* bridge = new NsSocViewBridge(br);
diff --git i/src/sw/noc_dev/prototype/Gui/Item/NsRegbusBridge.cpp w/src/sw/noc_dev/prototype/Gui/Item/NsRegbusBridge.cpp
index 05ea5e8e57d..db1ca34da9c 100644
--- i/src/sw/noc_dev/prototype/Gui/Item/NsRegbusBridge.cpp
+++ w/src/sw/noc_dev/prototype/Gui/Item/NsRegbusBridge.cpp
@@ -140,7 +140,7 @@ void NsRegbusBridge::mousePressEvent(QGraphicsSceneMouseEvent* event)
     meshScene->clearSelection();
     auto mw = dynamic_cast<MainWindow*>(QApplication::activeWindow());
     if (!mw) return;
-    if ((event->button() != Qt::MidButton) && (!isAddBridgeNoc(meshScene->getInsType())) &&
+    if ((event->button() != Qt::MiddleButton) && (!isAddBridgeNoc(meshScene->getInsType())) &&
         (!isAddAgentMeshView(meshScene->getInsType()))) {
         // show property, tooltip panel
         auto proPanel = mw->getPropertyPanel();
diff --git i/src/sw/noc_dev/prototype/Gui/Item/NsSocViewBoundingBox.cpp w/src/sw/noc_dev/prototype/Gui/Item/NsSocViewBoundingBox.cpp
index 084de73d966..060c61b5712 100644
--- i/src/sw/noc_dev/prototype/Gui/Item/NsSocViewBoundingBox.cpp
+++ w/src/sw/noc_dev/prototype/Gui/Item/NsSocViewBoundingBox.cpp
@@ -143,7 +143,7 @@ void NsSocViewBoundingBox::sceneScaleChanged(double newScale)
     auto r = rect();
     int maxDimension = std::max(r.width(), r.height());
     // measure size of text to get closest that ticks can be packed
-    const auto labelWidth = QFontMetrics(scaleFont).width(QString("00%1").arg(maxDimension));
+    const auto labelWidth = QFontMetrics(scaleFont).tightBoundingRect(QString("00%1").arg(maxDimension)).width();
 
     // target step size is widest dimension of label at new scale (zoom level)
     const auto targetStep = roundUpToMultiple((labelWidth + 20) / newScale,
diff --git i/src/sw/noc_dev/prototype/Gui/Item/NsSocViewHost.cpp w/src/sw/noc_dev/prototype/Gui/Item/NsSocViewHost.cpp
index d06f3ebc8fe..cd2363ea379 100644
--- i/src/sw/noc_dev/prototype/Gui/Item/NsSocViewHost.cpp
+++ w/src/sw/noc_dev/prototype/Gui/Item/NsSocViewHost.cpp
@@ -131,7 +131,7 @@ void NsSocViewHost::mouseReleaseEvent(QGraphicsSceneMouseEvent * event)
     if (false && event->modifiers().testFlag(Qt::ControlModifier)) {
         QString clone_name;
         bool ok;
-        Qt::WindowFlags flags = 0;
+        Qt::WindowFlags flags = Qt::Widget;
         auto mw = socView->getMainWindow();
         if (mw && !mw->isHiddenDesignReview())
             flags |= Qt::WindowStaysOnTopHint;
diff --git i/src/sw/noc_dev/prototype/Gui/Item/NsVC.cpp w/src/sw/noc_dev/prototype/Gui/Item/NsVC.cpp
index 66bc9d8bdb3..6ea5b9ef9a1 100644
--- i/src/sw/noc_dev/prototype/Gui/Item/NsVC.cpp
+++ w/src/sw/noc_dev/prototype/Gui/Item/NsVC.cpp
@@ -770,16 +770,16 @@ NsILDCLAbel::NsILDCLAbel(const QString text, const QLineF& line, NsVC *parent) :
     f.setPixelSize(fontSize);
     setFont(f);
     QFontMetricsF fm(f);
-    const qreal txtWidth = fm.width(text);
+    const qreal txtWidth = fm.tightBoundingRect(text).width();
     const int limit = line.length() / 2;
     if(txtWidth > limit) setPlainText(fm.elidedText(text, Qt::ElideRight, limit));
     const int angle = line.angle();
     QPointF p;
     if (isVertical(angle)) { //Is vertical
         setTransform(QTransform().rotate(270), true);
-        p = line.center() + QPointF(-boundingRect().height(), fm.width(toPlainText()) / 2);
+        p = line.center() + QPointF(-boundingRect().height(), fm.tightBoundingRect(toPlainText()).width() / 2);
     }
-    else p = line.center() - QPointF(fm.width(toPlainText()) / 2, 2);
+    else p = line.center() - QPointF(fm.tightBoundingRect(toPlainText()).width() / 2, 2);
     setPos(p);
 }
 
diff --git i/src/sw/noc_dev/prototype/Gui/LintDashboard.cpp w/src/sw/noc_dev/prototype/Gui/LintDashboard.cpp
index 9e800b19fe7..3ee682756c7 100644
--- i/src/sw/noc_dev/prototype/Gui/LintDashboard.cpp
+++ w/src/sw/noc_dev/prototype/Gui/LintDashboard.cpp
@@ -192,7 +192,7 @@ void LintDashboard::reFocusAct() {
     if (!isParent) {
         int childIndex = std::get<2>(row4ReFocus);
         table->expand(parentModel);
-        scrollAndFocus(parentModel.child(childIndex, 0));
+        scrollAndFocus(parentModel.model()->index(childIndex, 0));
     }
     else scrollAndFocus(parentModel);
 }
@@ -306,7 +306,7 @@ void LintDashboard::upgradeIdSlot()
     /* Apply upgrade_warning cmd for selected warning items */
     if (mainWindow && mainWindow->getConsole())
     {
-        QString cmd = QString(CMD_UPGRADE_WARNING) + tr(" -id %1").arg(QStringList(ids.toList()).join(" "));
+        QString cmd = QString(CMD_UPGRADE_WARNING) + tr(" -id %1").arg(QStringList(ids.begin(), ids.end()).join(" "));
         mainWindow->getConsole()->applyCmd(cmd);
     }
 }
@@ -326,7 +326,7 @@ void LintDashboard::downgradeIdSlot()
     /* Apply upgrade_warning cmd for selected warning items */
     if (mainWindow && mainWindow->getConsole())
     {
-        QString cmd = QString(CMD_RESET_UPGRADE_WARNING) + tr(" -id %1").arg(QStringList(ids.toList()).join(" "));
+        QString cmd = QString(CMD_RESET_UPGRADE_WARNING) + tr(" -id %1").arg(QStringList(ids.begin(), ids.end()).join(" "));
         mainWindow->getConsole()->applyCmd(cmd);
     }
 }
@@ -342,7 +342,7 @@ void LintDashboard::waiveItemSlot()
     foreach(QModelIndex row, idIndexes)
     {
         QString msg = row.data().toString();
-        QStringList list = msg.split(QRegExp("[\r\n]"));
+        QStringList list = msg.split(QRegularExpression("[\r\n]"));
         auto txt = list.at(0);
         strings.insert(QString("add_%1r -string {%2}")
             .arg(prefix.toLower())
@@ -353,7 +353,7 @@ void LintDashboard::waiveItemSlot()
     if (!mainWindow) return;
     auto console = mainWindow->getConsole();
     if (console) {
-        QString cmds = QStringList(strings.toList()).join("\n");
+        QString cmds = QStringList(strings.begin(), strings.end()).join("\n");
         console->applyCmd(cmds);
     }
 }
@@ -374,7 +374,7 @@ void LintDashboard::waiveIdSlot()
     /* Apply waive/unwaive cmd for IDs */
     if (mainWindow && mainWindow->getConsole())
     {
-        QString cmd = tr("add_%1r -id ").arg(prefix.toLower()) + QStringList(ids.toList()).join(" ");
+        QString cmd = tr("add_%1r -id ").arg(prefix.toLower()) + QStringList(ids.begin(), ids.end()).join(" ");
         mainWindow->getConsole()->applyCmd(cmd);
     }
 }
@@ -386,7 +386,7 @@ void LintDashboard::waiveCategorySlot() {
 
     // apply waive/unwaive cmd for categories
     if (mainWindow && mainWindow->getConsole()) {
-        QString cmd = tr("add_%1r -cat ").arg(prefix.toLower()) + QStringList(categories.toList()).join(" ");
+        QString cmd = tr("add_%1r -cat ").arg(prefix.toLower()) + QStringList(categories.begin(), categories.end()).join(" ");
         mainWindow->getConsole()->applyCmd(cmd);
     }
 }
@@ -451,7 +451,7 @@ void LintDashboard::waiveButtonClicked()
                 if (row.column() == LINT_MES)
                 {
                     QString msg = row.data().toString();
-                    QStringList list = msg.split(QRegExp("[\r\n]"));
+                    QStringList list = msg.split(QRegularExpression("[\r\n]"));
                     auto txt = list.at(0);
                     if (listCmd.contains(txt)) continue;
                     string << (" {" + txt + "}");
@@ -760,7 +760,7 @@ TitleBar::TitleBar(bool addClose, QWidget * parent)
 
     QHBoxLayout* layout = new QHBoxLayout(this);
     layout->setSpacing(0);
-    layout->setMargin(0);
+    //layout->setMargin(0);
     layout->setContentsMargins(0, 0, 0, 0);
     layout->addWidget(floatBt, 0, Qt::AlignRight);
     if (addClose)
@@ -922,9 +922,9 @@ void NSTreeView::wheelEvent(QWheelEvent* event)
 {
     if (event->modifiers().testFlag(Qt::ControlModifier)) {
         if (auto zoomSlider = ResizeDialog::getResizeDialog()->getPSlider()) {
-            if (event->delta() > 0)
+            if (event->angleDelta().y() > 0)
                 zoomSlider->triggerAction(QAbstractSlider::SliderSingleStepAdd);
-            else if (event->delta() < 0)
+            else if (event->angleDelta().y() < 0)
                 zoomSlider->triggerAction(QAbstractSlider::SliderSingleStepSub);
         }
         event->accept();
diff --git i/src/sw/noc_dev/prototype/Gui/NsSortFilterProxyModel.cpp w/src/sw/noc_dev/prototype/Gui/NsSortFilterProxyModel.cpp
index a964057b842..a93c0355dcc 100644
--- i/src/sw/noc_dev/prototype/Gui/NsSortFilterProxyModel.cpp
+++ w/src/sw/noc_dev/prototype/Gui/NsSortFilterProxyModel.cpp
@@ -1,4 +1,5 @@
 #include <QtWidgets>
+#include <QRegularExpression>
 
 #include "NsSortFilterProxyModel.h"
 #include "LintDashboard.h"
@@ -60,10 +61,10 @@ void NsSortFilterProxyModel::setFilterKeyColumns(const QList<qint32> & filterCol
     m_columnPatterns.clear();
 
     foreach(qint32 column, filterColumns)
-        m_columnPatterns.insert(column, QRegExp());
+        m_columnPatterns.insert(column, QRegularExpression());
 }
 
-void NsSortFilterProxyModel::addFilterFixedString(qint32 column, const QRegExp & pattern)
+void NsSortFilterProxyModel::addFilterFixedString(qint32 column, const QRegularExpression& pattern)
 {
     if (!m_columnPatterns.contains(column))
         return;
@@ -71,7 +72,7 @@ void NsSortFilterProxyModel::addFilterFixedString(qint32 column, const QRegExp &
     m_columnPatterns[column] = pattern;
 }
 
-void NsSortFilterProxyModel::appendFilterKeyColumn(qint32 column, const QRegExp & pattern)
+void NsSortFilterProxyModel::appendFilterKeyColumn(qint32 column, const QRegularExpression& pattern)
 {
     if (!m_columnPatterns.contains(column))
         m_columnPatterns.insert(column, pattern);
@@ -85,6 +86,17 @@ void NsSortFilterProxyModel::clearFilterKeyColumn()
     m_columnPatterns.clear();
 }
 
+QRegularExpression stringRegExp(const QString& pattern, Qt::CaseSensitivity caseSensitivity) {
+    QString escapedPattern = QRegularExpression::escape(pattern);  // Escape special characters
+    QRegularExpression regExp(escapedPattern);
+
+    if (caseSensitivity == Qt::CaseInsensitive) {
+        regExp.setPatternOptions(QRegularExpression::CaseInsensitiveOption);
+    }
+
+    return regExp;
+}
+
 void NsSortFilterProxyModel::filterAction(QString s)
 {
     this->clearFilterKeyColumn();
@@ -109,7 +121,7 @@ void NsSortFilterProxyModel::filterAction(QString s)
         }
 
         /* Set search text */
-        QRegExp regExp(s, Qt::CaseInsensitive, QRegExp::FixedString);
+        QRegularExpression regExp = stringRegExp(s, Qt::CaseInsensitive);
 
         /* Set search column */
         int col = toLintHeader(cat);
@@ -140,7 +152,7 @@ bool NsSortFilterProxyModel::filterAcceptsRow(int sourceRow,
     //        return QSortFilterProxyModel::filterAcceptsRow(sourceRow, sourceParent);
 
     bool result = false;
-    for (QMap<qint32, QRegExp>::const_iterator iter = m_columnPatterns.constBegin();
+    for (QMap<qint32, QRegularExpression>::const_iterator iter = m_columnPatterns.constBegin();
         iter != m_columnPatterns.constEnd();
         ++iter)
     {
@@ -153,7 +165,7 @@ bool NsSortFilterProxyModel::filterAcceptsRow(int sourceRow,
             {
                 QModelIndex sourceIndex = sourceModel()->index(sourceRow, column, sourceParent);
                 QString key = sourceIndex.data().toString();
-                if (key.contains(iter.value()))
+                if (key.contains(QRegularExpression(iter.value().pattern())))
                 {
                     result = true;
                     break;
@@ -165,7 +177,7 @@ bool NsSortFilterProxyModel::filterAcceptsRow(int sourceRow,
         {
             QModelIndex index = sourceModel()->index(sourceRow, col, sourceParent);
             if (!index.isValid() //! the column may not exist
-                || !index.data().toString().contains(iter.value()))
+                || !index.data().toString().contains(QRegularExpression(iter.value().pattern())))
             {
                 result = false;
                 break;
diff --git i/src/sw/noc_dev/prototype/Gui/NsSortFilterProxyModel.h w/src/sw/noc_dev/prototype/Gui/NsSortFilterProxyModel.h
index 9060b3e836e..3b51a5e149e 100644
--- i/src/sw/noc_dev/prototype/Gui/NsSortFilterProxyModel.h
+++ w/src/sw/noc_dev/prototype/Gui/NsSortFilterProxyModel.h
@@ -2,6 +2,7 @@
 #define NSSORTFILTERPROXYMODEL_H
 
 #include <QSortFilterProxyModel>
+#include <QRegExp>
 
 enum Sim_Header { SIM_CB, SIM_KEY, SIM_SCALE };
 class NsSortFilterProxyModel : public QSortFilterProxyModel
@@ -47,7 +48,7 @@ public:
      * @param column
      * @param pattern
      */
-    void addFilterFixedString(qint32 column, const QRegExp& pattern);
+    void addFilterFixedString(qint32 column, const QRegularExpression& pattern);
 
     /**
      * @brief append the fixed string used to filter the contents of the source model
@@ -55,7 +56,7 @@ public:
      * @param column
      * @param pattern
      */
-    void appendFilterKeyColumn(qint32 column, const QRegExp& pattern);
+    void appendFilterKeyColumn(qint32 column, const QRegularExpression& pattern);
 
     /**
      * @brief clear all filter Key Column
@@ -90,7 +91,7 @@ protected:
 
 private:
     QObject* view;
-    QMap<qint32, QRegExp> m_columnPatterns;
+    QMap<qint32, QRegularExpression> m_columnPatterns;
 };
 
 class MainWindow;
diff --git i/src/sw/noc_dev/prototype/Gui/View/NsChipView.cpp w/src/sw/noc_dev/prototype/Gui/View/NsChipView.cpp
index 234a8d441d7..e56606353b9 100644
--- i/src/sw/noc_dev/prototype/Gui/View/NsChipView.cpp
+++ w/src/sw/noc_dev/prototype/Gui/View/NsChipView.cpp
@@ -53,11 +53,11 @@ void NsChipView::mouseReleaseEvent(QMouseEvent *event)
 void NsChipView::wheelEvent(QWheelEvent* event) {
     if (event->modifiers().testFlag(Qt::ControlModifier)) {
         if (getFocusPoint() == QPointF()) {
-            setFocusPoint(mapToScene(event->posF().x(), event->posF().y()));
+            setFocusPoint(mapToScene(event->position().x(), event->position().y()));
         }
-        if (event->delta() > 0) {
+        if (event->angleDelta().y() > 0) {
             mainWindow->zoomInAct();
-        } else if (event->delta() < 0) {
+        } else if (event->angleDelta().y() < 0) {
             mainWindow->zoomOutAct();
         }
     } else {
diff --git i/src/sw/noc_dev/prototype/Gui/View/NsChopview.cpp w/src/sw/noc_dev/prototype/Gui/View/NsChopview.cpp
index b5cd44e1ea9..c4d596258e9 100644
--- i/src/sw/noc_dev/prototype/Gui/View/NsChopview.cpp
+++ w/src/sw/noc_dev/prototype/Gui/View/NsChopview.cpp
@@ -131,7 +131,7 @@ NsChopView::~NsChopView(){}
 void NsChopView::mouseReleaseEvent(QMouseEvent *event)
 {
     if (event->button() & Qt::LeftButton) {
-        selectedPoint = event->posF();
+        selectedPoint = event->position();
     } else {
         selectedPoint = QPointF();
     }
@@ -151,10 +151,10 @@ void NsChopView::wheelEvent(QWheelEvent *event)
 {
     if(event->modifiers().testFlag(Qt::ControlModifier)){
         if (getFocusPoint() == QPointF()) {
-            setFocusPoint(mapToScene(event->posF().x(), event->posF().y()));
+            setFocusPoint(mapToScene(event->position().x(), event->position().y()));
         }
-        if(event->delta() > 0) zoom(ZOOM_STEP); // zoom in
-        if(event->delta() < 0) zoom(-ZOOM_STEP); // zoon out
+        if (event->angleDelta().y() > 0) zoom(ZOOM_STEP);  // zoom in
+        if (event->angleDelta().y() < 0) zoom(-ZOOM_STEP);  // zoon out
     }else NsView::wheelEvent(event);
 }
 
@@ -183,7 +183,7 @@ NsSector::NsSector(Sector* s, NetSpeed::Grid* grid, QGraphicsItem *parent, NsWor
      name(s->name), topLeft(s->topLeftSector), bottomRight(s->bottomRightSector), cols(s->chopCols), rows(s->chopRows), offset(s->offset),
      grid(grid), m_nsWorkArea(nsWorkArea)
 {
-    setAcceptsHoverEvents(true);
+    setAcceptHoverEvents(true);
     setZValue(NsChopView::SECTOR_ORDER);
     auto cmp = [](auto& c1, auto& c2){ return c1.id < c2.id; };
     std::sort(cols.begin(), cols.end(), cmp);
@@ -220,7 +220,7 @@ void NsSector::drawTransmissionQueue() {
     QFont font;
     font.setPixelSize(15);
     QFontMetricsF metric(font);
-    const qreal start = metric.width(text);
+    const qreal start = metric.tightBoundingRect(text).width();
     for(int shiftVal = 0; shiftVal <= delta.first; ++shiftVal){
         auto nodeShift = topLeft.shift(NetSpeed::Col_delta(shiftVal), NetSpeed::Row_delta(0));
         auto col = nodeShift.x();
@@ -233,7 +233,7 @@ void NsSector::drawTransmissionQueue() {
         path.moveTo(start, 0);
         path.lineTo(QPointF(length, 0));
         QPointF startPoint = QPointF(x, 0);
-        QMatrix matrix;
+        QTransform matrix;
         matrix.translate(startPoint.rx(), startPoint.ry());
         matrix.rotate(90);
         auto item = new NsTransmissionQueue(matrix.map(path), this);
@@ -315,9 +315,9 @@ void NsSector::drawNodeTexts(QPainterPath& path, const NetSpeed::Node_id& node,
     const QFontMetricsF metric(font);
     const double leftMargin = NODE_SIZE/2;
     const double fontHeight = metric.height();
-    if(metric.width(text) > leftMargin) text = metric.elidedText(text, Qt::ElideRight, leftMargin);
-    if(metric.width(stopIdText) > leftMargin) stopIdText = metric.elidedText(stopIdText, Qt::ElideRight, leftMargin);
-    if(metric.width(stopIdText) > leftMargin) instanceSuffix = metric.elidedText(instanceSuffix, Qt::ElideRight, leftMargin);
+    if(metric.tightBoundingRect(text).width() > leftMargin) text = metric.elidedText(text, Qt::ElideRight, leftMargin);
+    if(metric.tightBoundingRect(stopIdText).width() > leftMargin) stopIdText = metric.elidedText(stopIdText, Qt::ElideRight, leftMargin);
+    if(metric.tightBoundingRect(stopIdText).width() > leftMargin) instanceSuffix = metric.elidedText(instanceSuffix, Qt::ElideRight, leftMargin);
     const NetSpeed::orient orient = (router) ? router->get_orientation() : NetSpeed::orient::MX;
     switch (orient) {
     case NetSpeed::orient::R0: //Router at bottom left
@@ -347,7 +347,7 @@ void NsSector::updateSectorNameFontSize()
     QFontMetricsF metric(textFont);
     const qreal marginSectorNameX = 40;
     QString sName = name;
-    auto textWidth = metric.width(sName);
+    auto textWidth = metric.tightBoundingRect(sName).width();
     qreal sectorDisplayHeight = (bottomRight.y() - topLeft.y() - rows.size() + 1) * NODE_SIZE;
     qreal posY = 0;
     if(textWidth >= sectorDisplayHeight){
@@ -355,7 +355,7 @@ void NsSector::updateSectorNameFontSize()
         posY = sectorDisplayHeight;
     } else posY = (sectorDisplayHeight + textWidth)/2;
     qreal posX =  (-offset * NODE_SIZE) - marginSectorNameX;
-    QMatrix matrix;
+    QTransform matrix;
     matrix.translate(posX, posY);
     matrix.rotate(-90);
     QPainterPath path;
@@ -539,7 +539,7 @@ NetSpeed::Node_id NsSector::parentPosToNodeId(QPointF& p)
 
 NsChopViewBoundingBox::NsChopViewBoundingBox(NetSpeed::Grid *grid, Topo* topo, NsWorkArea* nsWorkArea) : grid(grid), topo(topo), nsWorkArea(nsWorkArea)
 {
-    setAcceptsHoverEvents(true);
+    setAcceptHoverEvents(true);
     initData();
     if (!chopName) {
         QFont font;
@@ -653,7 +653,7 @@ void NsChopViewBoundingBox::createVirtualRouterAndVC(){
             NsTurnBackVcItem* turnBackVcItem = new NsTurnBackVcItem(vc, pos, true);
             turnBackVcItem->setZValue(NsChopView::LINK_ORDER);
             auto path = sector->lineUTurn(pos, vc);
-            QMatrix matrix;
+            QTransform matrix;
             auto pos = sector->pos();
             matrix.translate(pos.rx(), pos.ry());
             turnBackVcItem->setPath(matrix.map(path));
diff --git i/src/sw/noc_dev/prototype/Gui/View/NsNocViewScene.cpp w/src/sw/noc_dev/prototype/Gui/View/NsNocViewScene.cpp
index 907a80baea2..f5d777a2a36 100644
--- i/src/sw/noc_dev/prototype/Gui/View/NsNocViewScene.cpp
+++ w/src/sw/noc_dev/prototype/Gui/View/NsNocViewScene.cpp
@@ -15,6 +15,7 @@
 #include <QGraphicsSceneMouseEvent>
 #include <QRubberBand>
 #include <QInputDialog>
+#include <QTransform>
 #include "myconsole.h"
 #include "mainwindow.h"
 #include "NsNocViewScene.h"
@@ -999,7 +1000,7 @@ void NsNocViewScene::mousePressEvent(QGraphicsSceneMouseEvent* event)
             {
                 auto propPanel = mw->getPropertyPanel();
                 /* Get first point of agent */
-                auto clicked_item = itemAt(event->scenePos());
+                auto clicked_item = itemAt(event->scenePos(), QTransform());
                 if (!clicked_item) break;
                 if ((!instrumentMediator) && (clicked_item->type() == HOST)) {
                     auto nsHost = dynamic_cast<NsHost*>(clicked_item);
@@ -1824,7 +1825,7 @@ bool NsNocViewScene::applyCmd(QPointF scenePos)
 
     // for design view mode
     bool ok;
-    Qt::WindowFlags flags = 0;
+    Qt::WindowFlags flags = Qt::Widget;
     auto mw = nsWorkArea->getMainWindow();
     if (mw && !mw->isHiddenDesignReview()) flags |= Qt::WindowStaysOnTopHint;
 
diff --git i/src/sw/noc_dev/prototype/Gui/View/NsScene.cpp w/src/sw/noc_dev/prototype/Gui/View/NsScene.cpp
index 143d9966cf1..0b79332b721 100644
--- i/src/sw/noc_dev/prototype/Gui/View/NsScene.cpp
+++ w/src/sw/noc_dev/prototype/Gui/View/NsScene.cpp
@@ -191,7 +191,7 @@ inline QPainterPath constructPowerPatternPath(const QRectF& parentRect, float si
     path.lineTo(parentRect.bottomLeft() + QPointF(patternWidth, -patternHeight));
     path.closeSubpath();
     if (mapToRight) {
-        QMatrix matrix;
+        QTransform matrix;
         matrix.translate(parentRect.width() - patternWidth, 0);
         path = matrix.map(path);
     }
@@ -1991,7 +1991,7 @@ QImage NsMeshViewScene::makeColorLegend()
         auto calculateWorkPage = [&](auto& domains) {
             maxHeight += headerMargin.y() + metric.height();
             for (auto const& it : domains) {
-                maxWidth = std::max(maxWidth, rectangleSize.width() + textPadding + metric.width(QString::fromStdString(it.first)));
+                maxWidth = std::max(maxWidth, rectangleSize.width() + textPadding + metric.tightBoundingRect(QString::fromStdString(it.first)).width());
                 maxHeight += (metric.height() + legendMargin.y());
             }
         };
@@ -2192,7 +2192,7 @@ QImage NsMeshViewScene::makeRTLColorLegend()
         painter.drawRect(p.x(), p.y(), 20, 20);
         QString elidedName = metric.elidedText(name, Qt::ElideRight, 950);
         painter.drawText(p.x() + 30, p.y() + 20, elidedName);
-        int textWidth = metric.width(elidedName);
+        int textWidth = metric.tightBoundingRect(elidedName).width();
         p += QPoint(0, 30);
         maxWidth = std::max(textWidth + 30, maxWidth);
     };
@@ -2474,7 +2474,7 @@ void NsMeshViewScene::mousePressEvent(QGraphicsSceneMouseEvent * event)
         QList<QGraphicsItem*> itemList = items(event->scenePos());
         vector<QGraphicsItem*> to_be_deleted;
         for (auto& item : items()) {
-            if ((item->type() == RING_VISUALIZATION) && (!NetSpeed::is_member(itemList.toStdList(), item)) &&
+            if ((item->type() == RING_VISUALIZATION) && (!NetSpeed::is_member(QList<QGraphicsItem*>(itemList.begin(), itemList.end()), item)) &&
                 (!NsRouterDiagramManager::manager(this)->contains(item))) {
                 to_be_deleted.push_back(item);
             }                
diff --git i/src/sw/noc_dev/prototype/Gui/View/NsSocView.cpp w/src/sw/noc_dev/prototype/Gui/View/NsSocView.cpp
index 57de6e6f53c..f8ebeb5a1b2 100644
--- i/src/sw/noc_dev/prototype/Gui/View/NsSocView.cpp
+++ w/src/sw/noc_dev/prototype/Gui/View/NsSocView.cpp
@@ -193,10 +193,10 @@ void NsSocView::wheelEvent(QWheelEvent * event)
 {
     if (event->modifiers().testFlag(Qt::ControlModifier))
     {
-        if (event->delta() > 0) {
+        if (event->angleDelta().y() > 0) {
             mainWindow->zoomInAct();
         }
-        else if (event->delta() < 0) {
+        else if (event->angleDelta().y() < 0) {
             mainWindow->zoomOutAct();
         }
     }
@@ -238,7 +238,7 @@ void NsSocView::mousePressEvent(QMouseEvent * event) {
                 }
             }
             // excute menu and apply command
-            QAction* selectedAction = menu->exec(event->globalPos());
+            QAction* selectedAction = menu->exec(event->globalPosition().toPoint());
             if (selectedAction == nullptr) return;
             auto cmd = selectedAction->data().toString();
             if (mainWindow != nullptr && !cmd.isEmpty()) mainWindow->getConsole()->applyCmd(cmd);
diff --git i/src/sw/noc_dev/prototype/Gui/View/NsSocViewScene.cpp w/src/sw/noc_dev/prototype/Gui/View/NsSocViewScene.cpp
index 23e5466a901..f01ca45958d 100644
--- i/src/sw/noc_dev/prototype/Gui/View/NsSocViewScene.cpp
+++ w/src/sw/noc_dev/prototype/Gui/View/NsSocViewScene.cpp
@@ -1,3 +1,4 @@
+#include <algorithm>
 #include "NsSocViewScene.h"
 #include "../Item/NsSocViewVirBridge.h"
 #include "../Item/NsSocViewHost.h"
@@ -373,7 +374,7 @@ void NsSocViewScene::createHosts()
             {
                 return b1.first.size() > b2.first.size();
             };
-            qSort(overlapRectList.begin(), overlapRectList.end(), sortSizeList);
+            std::sort(overlapRectList.begin(), overlapRectList.end(), sortSizeList);
             //Store background only item's ID number
             QList<int> backGroundOnly;
             //Counting current overlap item
@@ -456,7 +457,7 @@ void NsSocViewScene::createRouterLinks()
 void NsSocViewScene::createPlusItem(QVector<NetSpeed::Bridge*> overlappedbridgeList, NetSpeed::rect_t overlappedRect, int zPos, QGraphicsItem *hostItem)
 {
     auto* plus = new NsSocViewPlusItem(overlappedRect, overlappedbridgeList);
-    auto* mulBris = new NsSocViewMultipleBridges(overlappedbridgeList.toStdVector());
+    auto* mulBris = new NsSocViewMultipleBridges(std::vector<NetSpeed::Bridge *>(overlappedbridgeList.begin(), overlappedbridgeList.end()));
 
     plus->setChecked(false);
     plus->setZValue(zPos);
@@ -776,9 +777,9 @@ void NsSocViewScene::createRegionItems()
     regionColors.clear();
     if (!console || !console->get_container().get_grid()) return;
     int color = 1;
-    auto usedColors = regionColors.values().toSet();
+    auto usedColors = QSet<int>(regionColors.values().begin(), regionColors.values().end());
     //store region map
-    QMap<std::string, NsSocViewRegion*> regionMap;
+    QMultiMap<std::string, NsSocViewRegion*> regionMap;
     for (const auto& region : console->get_container().get_grid()->get_phy_regions()) {
         /* Set region color */
         if (regionColors.contains(region.name))
@@ -794,7 +795,7 @@ void NsSocViewScene::createRegionItems()
         for (auto rect : region.phy_poss) {
             auto regionItem = new NsSocViewRegion(QString::fromStdString(region.name), region, rect, rgbToColor(NetSpeed::color_choices[color].second));
             //store region Item for handling overlap
-            regionMap.insertMulti(region.name, regionItem);
+            regionMap.insert(region.name, regionItem);
             if (NetSpeed::Grid::region_view_show == NetSpeed::RegionShowForeground || imageSaving)
                 regionItem->setZValue(SocViewZValue::RegionForegroundZ);
             else if (NetSpeed::Grid::region_view_show == NetSpeed::RegionShowBackground)
@@ -836,7 +837,7 @@ void NsSocViewScene::createRegionItems()
                 }
             }
             addItem(regionItem);
-            regions.insertMulti(it->data(), regionItem);
+            regions.insert(it->data(), regionItem);
         }
     }
     /* Re-use colors of deleted regions */
@@ -1078,7 +1079,7 @@ bool NsSocViewScene::applyCmd(QPointF positionF)
             NetSpeed::clamp(&position.rx(), 0, grid->get_soc_phy_size_x() - phy_width);
             NetSpeed::clamp(&position.ry(), 0, grid->get_soc_phy_size_y() - phy_height);
             bool ok;
-            Qt::WindowFlags flags = 0;
+            Qt::WindowFlags flags = Qt::Widget;
             auto mw = socView->getMainWindow();
             if (mw && !mw->isHiddenDesignReview())
                 flags |= Qt::WindowStaysOnTopHint;
diff --git i/src/sw/noc_dev/prototype/Gui/View/NsSocViewScene.h w/src/sw/noc_dev/prototype/Gui/View/NsSocViewScene.h
index 8ca0f89f73d..9afa95b1e2a 100644
--- i/src/sw/noc_dev/prototype/Gui/View/NsSocViewScene.h
+++ w/src/sw/noc_dev/prototype/Gui/View/NsSocViewScene.h
@@ -186,7 +186,7 @@ private:
     const float heigthLimit;
 
     QMap<std::string, int> regionColors;
-    QMap<std::string, QGraphicsItem*> regions;
+    QMultiMap<std::string, QGraphicsItem*> regions;
     QMap<NetSpeed::Host_idx, QGraphicsItem*> hostItems;
     QMap<NetSpeed::Bridge_id, NsSocViewBridge*> briItems;
     QMap<NetSpeed::Node_id, QGraphicsItem*> routerItems;
diff --git i/src/sw/noc_dev/prototype/Gui/View/NsView.cpp w/src/sw/noc_dev/prototype/Gui/View/NsView.cpp
index 86eded394bc..e8a82af665b 100644
--- i/src/sw/noc_dev/prototype/Gui/View/NsView.cpp
+++ w/src/sw/noc_dev/prototype/Gui/View/NsView.cpp
@@ -57,7 +57,7 @@ double NsView::getZoomFactor() const
 void NsView::setZoomFactor(qreal value)
 {
     setAutoFit(false);
-    resetMatrix();
+    resetTransform();
     scale(value, value);
 }
 
@@ -99,7 +99,7 @@ QRect NsView::visibleRect() const
 
 void NsView::sceneScaleChanged(double newScale)
 {
-    resetMatrix();
+    resetTransform();
     scale(newScale, newScale);
 }
 
diff --git i/src/sw/noc_dev/prototype/Gui/View/NsWorkArea.cpp w/src/sw/noc_dev/prototype/Gui/View/NsWorkArea.cpp
index a7d4e23cd99..795f2309fe7 100644
--- i/src/sw/noc_dev/prototype/Gui/View/NsWorkArea.cpp
+++ w/src/sw/noc_dev/prototype/Gui/View/NsWorkArea.cpp
@@ -336,12 +336,12 @@ void NsWorkArea::wheelEvent(QWheelEvent * event)
     if (event->modifiers().testFlag(Qt::ControlModifier))
     {
         if (getFocusPoint() == QPointF()) {
-            setFocusPoint(mapToScene(event->posF().x(), event->posF().y()));
+            setFocusPoint(mapToScene(event->position().x(), event->position().y()));
         }
-        if (event->delta() > 0) {
+        if (event->angleDelta().y() > 0) {
             mainWindow->zoomInAct();
         }
-        else if (event->delta() < 0) {
+        else if (event->angleDelta().y() < 0) {
             mainWindow->zoomOutAct();
         }
     }
diff --git i/src/sw/noc_dev/prototype/Gui/dialogs.cpp w/src/sw/noc_dev/prototype/Gui/dialogs.cpp
index 9ac6d40fb9f..4750ced0479 100644
--- i/src/sw/noc_dev/prototype/Gui/dialogs.cpp
+++ w/src/sw/noc_dev/prototype/Gui/dialogs.cpp
@@ -24,6 +24,8 @@
 #include "FlowList.h"
 #include "qtcolorpushbutton.h"
 #include "Customized/tableview.h"
+#include <QRegularExpression>
+#include <QGuiApplication>
 
 namespace NetSpeed {
     DECLARE_FLAG_T(max_layers, int)
@@ -507,7 +509,7 @@ TuneLinkDialog::TuneLinkDialog(QWidget * parent) : QDialog(parent)
     QGridLayout* buttonLayout = new QGridLayout;
     buttonLayout->addWidget(okButton, 0, 0, Qt::AlignRight);
     buttonLayout->addWidget(cancelButton, 0, 1, Qt::AlignLeft);
-    buttonLayout->setMargin(5);
+    //buttonLayout->setMargin(5);
 
     QVBoxLayout* mainLayout = new QVBoxLayout;
     mainLayout->addLayout(layout);
@@ -654,7 +656,7 @@ ContDialog::ContDialog(QWidget * parent) : QDialog(parent)
     QGridLayout * buttonLayout = new QGridLayout;
     buttonLayout->addWidget(okButton, 0, 0, Qt::AlignRight);
     buttonLayout->addWidget(cancelButton, 0, 1, Qt::AlignLeft);
-    buttonLayout->setMargin(5);
+    //buttonLayout->setMargin(5);
 
     QVBoxLayout * mainLayout = new QVBoxLayout;
     mainLayout->addLayout(layout);
@@ -729,7 +731,7 @@ QString SizeDialog::getValues()
     if (strSizeDialog.toInt() == 0) {   //If the conversion fails.
         return QString("0");
     }
-    return (strSizeDialog.remove(QRegExp("^[0]*")));
+    return (strSizeDialog.remove(QRegularExpression("^[0]*")));
 }
 
 CreateTraceFilesDialog::CreateTraceFilesDialog(QWidget * parent) : QDialog(parent)
@@ -1083,7 +1085,7 @@ AnalyzeLinksDialog::AnalyzeLinksDialog(QWidget * parent, const NetSpeed::Grid *
     QGridLayout* buttonLayout = new QGridLayout;
     buttonLayout->addWidget(okButton, 0, 0, Qt::AlignRight);
     buttonLayout->addWidget(cancelButton, 0, 1, Qt::AlignLeft);
-    buttonLayout->setMargin(5);
+    //buttonLayout->setMargin(5);
 
     QVBoxLayout* mainLayout = new QVBoxLayout;
     mainLayout->addLayout(layout);
@@ -1136,7 +1138,7 @@ ConfirmCreateHostDialog::ConfirmCreateHostDialog(QString mes, QWidget * parent)
     QGridLayout* buttonLayout = new QGridLayout;
     buttonLayout->addWidget(okButton, 0, 0, Qt::AlignRight);
     buttonLayout->addWidget(cancelButton, 0, 1, Qt::AlignLeft);
-    buttonLayout->setMargin(5);
+    //buttonLayout->setMargin(5);
 
     QVBoxLayout* mainLayout = new QVBoxLayout;
     mainLayout->addLayout(layout);
@@ -1214,7 +1216,7 @@ CreateHostFailureDialog::CreateHostFailureDialog(QString mes, QWidget * parent)
     QGridLayout* buttonLayout = new QGridLayout;
     buttonLayout->addWidget(okButton, 0, 0, Qt::AlignRight);
     buttonLayout->addWidget(cancelButton, 0, 1, Qt::AlignLeft);
-    buttonLayout->setMargin(5);
+    //buttonLayout->setMargin(5);
 
     QVBoxLayout* mainLayout = new QVBoxLayout;
     mainLayout->addLayout(layout);
@@ -1284,7 +1286,7 @@ AddHostWarningAppDialog::AddHostWarningAppDialog(QString text, bool enableCheckB
     {
         QScrollArea* m_scrollArea = new QScrollArea;
         QLabel* content_msg = new QLabel(text);
-        content_msg->setMargin(5);
+        //content_msg->setMargin(5);
 
         m_scrollArea->setWidget(content_msg);
         m_scrollArea->setSizePolicy(QSizePolicy::Expanding, QSizePolicy::Expanding);
@@ -1468,7 +1470,7 @@ AliasDialog::AliasDialog(QWidget * parent) : QDialog(parent)
     QGridLayout * buttonLayout = new QGridLayout;
     buttonLayout->addWidget(okButton, 0, 0, Qt::AlignRight);
     buttonLayout->addWidget(cancelButton, 0, 1, Qt::AlignLeft);
-    buttonLayout->setMargin(5);
+    //buttonLayout->setMargin(5);
 
     QVBoxLayout * mainLayout = new QVBoxLayout;
     mainLayout->addLayout(layout);
@@ -1627,7 +1629,8 @@ DesignReviewDialog::DesignReviewDialog(const QString& scripts, INIConsole * con)
     setWindowIcon(QIcon(ICON_NOC_M1));
     setWindowFlags(getFlagsDialog());
     //move(QApplication::desktop()->screenGeometry().right(),QApplication::desktop()->screenGeometry().top());
-    move(QApplication::desktop()->screenGeometry().right() - size().width() - 10, QApplication::desktop()->screenGeometry().top() + 10);
+    //move(QApplication::desktop()->screenGeometry().right() - size().width() - 10, QApplication::desktop()->screenGeometry().top() + 10);
+    move(QGuiApplication::primaryScreen()->geometry().right() - size().width() - 10, QGuiApplication::primaryScreen()->geometry().top() + 10);
 
     /* Add scripts into treeView (and check valid also) */
     QStringList arr = scripts.split("\n");
@@ -1865,14 +1868,14 @@ void DesignReviewDialog::resetHighLight()
     for (int i = 0; i < treeViewWidget->topLevelItemCount(); i++)
     {
         QTreeWidgetItem* treeItem = treeViewWidget->topLevelItem(i);
-        if (treeItem->columnCount() > 0) treeItem->setTextColor(0, QColor("black"));
+        //if (treeItem->columnCount() > 0) treeItem->setTextColor(0, QColor("black"));
         treeItem->setDisabled(false);
         for (int j = 0; j < treeItem->childCount(); j++)
         {
             QTreeWidgetItem* child = treeItem->child(j);
             if (child->columnCount() < 2) continue;
             child->setDisabled(false);
-            child->setTextColor(0, QColor("black"));
+            //child->setTextColor(0, QColor("black"));
         }
     }
     currentItem = treeViewWidget->topLevelItem(0);
@@ -1915,17 +1918,17 @@ void DesignReviewDialog::hightLightItem(int idx)
             if (child->columnCount() < 2) continue;
             if (!found && idx > 0)
             {
-                child->setTextColor(0, QColor("gray"));
+                //child->setTextColor(0, QColor("gray"));
                 child->setSelected(false);
                 if (child->parent())
                 {
-                    child->parent()->setTextColor(0, QColor("gray"));
+                    //child->parent()->setTextColor(0, QColor("gray"));
                     child->parent()->setSelected(false);
                 }
             }
             else
             {
-                child->setTextColor(0, QColor("black"));
+                //child->setTextColor(0, QColor("black"));
                 child->setDisabled(false);
                 if (child->parent())
                 {
@@ -1936,12 +1939,12 @@ void DesignReviewDialog::hightLightItem(int idx)
             if (child->text(1).toInt() == (idx1))
             {
                 found = true;
-                child->setTextColor(0, QColor("blue"));
+                //child->setTextColor(0, QColor("blue"));
                 emit currentItemChanged(child);
                 child->setDisabled(false);
                 if (child->parent())
                 {
-                    child->parent()->setTextColor(0, QColor("blue"));
+                    //child->parent()->setTextColor(0, QColor("blue"));
                     child->parent()->setDisabled(false);
                 }
                 treeViewWidget->scrollToItem(child);
@@ -1975,7 +1978,7 @@ QTreeWidgetItem* DesignReviewDialog::addTreeChild(QTreeWidgetItem * parent, QStr
     QTreeWidgetItem* treeItem = new QTreeWidgetItem();
     treeItem->setText(0, name);
     treeItem->setText(1, QString::number(index));
-    treeItem->setTextColor(0, QColor("black"));
+    //treeItem->setTextColor(0, QColor("black"));
     parent->addChild(treeItem);
     return treeItem;
 }
@@ -2049,7 +2052,7 @@ AliasMsg::AliasMsg(QWidget * parent) : QDialog(parent)
 
     QGridLayout* buttonLayout = new QGridLayout;
     buttonLayout->addWidget(okButton, 0, 0, Qt::AlignCenter);
-    buttonLayout->setMargin(5);
+    //buttonLayout->setMargin(5);
 
     QVBoxLayout* mainLayout = new QVBoxLayout;
     mainLayout->addLayout(layout);
@@ -2100,8 +2103,8 @@ AddRangeToAXISlavesDialog::AddRangeToAXISlavesDialog(NetSpeed::Grid * grid, QWid
     //set some default values here
     for (int i = 0; i < slaveNames.size(); i++)
         slaveName->addItem(slaveNames.at(i));
-    connect(slaveName, SIGNAL(currentIndexChanged(QString)), this, SLOT(slaveNameChanged(QString)));
-    emit slaveName->currentIndexChanged(slaveName->currentText());
+    connect(slaveName, SIGNAL(currentTextChanged(QString)), this, SLOT(slaveNameChanged(QString)));
+    emit slaveName->currentTextChanged(slaveName->currentText());
 
     rangeName->setText("");
     address->setText("");
@@ -2134,7 +2137,7 @@ AddRangeToAXISlavesDialog::AddRangeToAXISlavesDialog(NetSpeed::Grid * grid, QWid
     layout->addWidget(new QLabel("Region ID: "), row, 0, Qt::AlignRight);
     layout->addWidget(region, row++, 1);
 
-    rangeType->addItems(QString("enabled, disabled, readonly, writeonly").split(", ", QString::SkipEmptyParts));
+    rangeType->addItems(QString("enabled, disabled, readonly, writeonly").split(", ", Qt::SkipEmptyParts));
     layout->addWidget(rangeType, row++, 1);
     priv->setToolTip("priv");
     layout->addWidget(new QLabel(tr("%1: ").arg(priv->toolTip())), row, 0, Qt::AlignRight);
@@ -2311,7 +2314,7 @@ AddRangeToAXIMasterDialog::AddRangeToAXIMasterDialog(QWidget * parent, QStringLi
     layout->addWidget(new QLabel("Master Name: "), row, 0, Qt::AlignRight);
     layout->addWidget(masterName, row++, 1);
 
-    rangeType->addItems(QString("enabled, disabled, readonly, writeonly").split(", ", QString::SkipEmptyParts));
+    rangeType->addItems(QString("enabled, disabled, readonly, writeonly").split(", ", Qt::SkipEmptyParts));
     layout->addWidget(rangeType, row++, 1);
     priv->setToolTip("priv");
     layout->addWidget(new QLabel(tr("%1: ").arg(priv->toolTip())), row, 0, Qt::AlignRight);
@@ -2523,7 +2526,7 @@ RangeNameItemControl::RangeNameItemControl(QWidget * parent, QStringList rangeNa
     layout->addWidget(rangeNamesComboBox);
     layout->addWidget(removeButton);
     setLayout(layout);
-    layout->setMargin(0);
+    //layout->setMargin(0);
     connect(removeButton, SIGNAL(clicked()), this, SLOT(selfRemove()));
 }
 
@@ -4155,7 +4158,7 @@ StepDialog::StepDialog(QWidget * parent) : QDialog(parent)
     stepCountInput = new QLineEdit;
     //set some default values here
     stepCountInput->setText((step_count != -1) ? QString::number(step_count) : "1");
-    stepCountInput->setValidator(new QRegExpValidator(QRegExp("[0-9]*")));
+    stepCountInput->setValidator(new QRegularExpressionValidator(QRegularExpression("[0-9]*")));
     okButton = new QPushButton("OK");
     cancelButton = new QPushButton("Cancel");
 
@@ -4166,7 +4169,7 @@ StepDialog::StepDialog(QWidget * parent) : QDialog(parent)
     QGridLayout * buttonLayout = new QGridLayout;
     buttonLayout->addWidget(okButton, 0, 0, Qt::AlignRight);
     buttonLayout->addWidget(cancelButton, 0, 1, Qt::AlignLeft);
-    buttonLayout->setMargin(5);
+    //buttonLayout->setMargin(5);
 
     mainLayout->addLayout(layout);
     mainLayout->addLayout(buttonLayout);
@@ -4254,7 +4257,8 @@ LicenseWarningSoonDialog::LicenseWarningSoonDialog(QWidget * parent) : QDialog(p
         auto parentRect = parent->geometry();
         move(parentRect.center() - rect().center());
     } else {
-        QRect screenGeometry = QApplication::desktop()->screenGeometry();
+        //QRect screenGeometry = QApplication::desktop()->screenGeometry();
+        QRect screenGeometry = QGuiApplication::primaryScreen()->geometry();
         int x = (screenGeometry.width() - width()) / 2;
         int y = (screenGeometry.height() - height()) / 2;
         move(x, y);
@@ -4277,7 +4281,7 @@ FinalizeDialog::FinalizeDialog(QWidget * parent) : QDialog(parent)
     QGridLayout* buttonLayout = new QGridLayout;
     buttonLayout->addWidget(okButton, 0, 0, Qt::AlignLeft);
     buttonLayout->addWidget(cancelButton, 0, 1, Qt::AlignRight);
-    buttonLayout->setMargin(5);
+    //buttonLayout->setMargin(5);
 
     QVBoxLayout* mainLayout = new QVBoxLayout;
     mainLayout->addLayout(layout);
@@ -4558,7 +4562,7 @@ OpenRecentlyDialog::OpenRecentlyDialog(QWidget* parent) : QDialog(parent)
     QWidget* sourceWidget = new QWidget(this);
     QLabel* lbl = new QLabel("Enter Minutes: ", this);
     timeSrc = new QLineEdit(this);
-    timeSrc->setValidator(new QRegExpValidator(QRegExp("[0-9]*"), timeSrc));
+    timeSrc->setValidator(new QRegularExpressionValidator(QRegularExpression("[0-9]*"), timeSrc));
     timeSrc->setMaxLength(6);
     timeLayout->addWidget(lbl);
     timeLayout->addWidget(timeSrc);
@@ -4615,7 +4619,7 @@ AddSpineGatingRegionDialog::AddSpineGatingRegionDialog(QWidget* parent) {
         }
     }
 
-    QRegExpValidator* validNodes = new QRegExpValidator(QRegExp("^ *\\d+( *, *\\d+)*"), nodes);
+    QRegularExpressionValidator* validNodes = new QRegularExpressionValidator(QRegularExpression("^ *\\d+( *, *\\d+)*"), nodes);
     nodes->setPlaceholderText("Ex: 0, 15, 32, 64");
     nodes->setValidator(validNodes);
 
@@ -4726,7 +4730,7 @@ void AddSpineGatingRegionDialog::validateAndExecute() {
     if (!nodes->text().isEmpty()) {
         /* Format the node field */
         QString str = nodes->text().replace(',', ' ');
-        QStringList opts = str.split(u' ', QString::SkipEmptyParts);
+        QStringList opts = str.split(u' ', Qt::SkipEmptyParts);
         QString text     = opts.join(' ');
         if (opts.size() > 0) {
             nodes->setText(text);
@@ -4749,7 +4753,7 @@ void AddSpineGatingRegionDialog::validateAndExecute() {
     /* Format the element field */
     if (!elements->text().isEmpty()) {
         QString str = elements->text().replace(',', ' ');
-        QStringList opts = str.split(u' ', QString::SkipEmptyParts);
+        QStringList opts = str.split(u' ', Qt::SkipEmptyParts);
         QString text     = opts.join(' ');
         elements->setText("{" + text + "}");
     }
diff --git i/src/sw/noc_dev/prototype/Gui/mainwindow.cpp w/src/sw/noc_dev/prototype/Gui/mainwindow.cpp
index b86cb5bc858..e8baf9b393b 100644
--- i/src/sw/noc_dev/prototype/Gui/mainwindow.cpp
+++ w/src/sw/noc_dev/prototype/Gui/mainwindow.cpp
@@ -189,7 +189,7 @@ MainWindow::MainWindow(NetSpeed::NocConsole* c, QWidget* parent)
     progressBar->setMinimum(0);
     progressBar->setMaximum(100);
     setPrgrBarValue(100);
-    consoleDock = new NSDockWidget(OBJ_CONSOLE_MAINWINDOW, this, 0);
+    consoleDock = new NSDockWidget(OBJ_CONSOLE_MAINWINDOW, this, Qt::Widget);
     connect(consoleDock, SIGNAL(consoleFinderSignal()), this, SLOT(consoleFinderFocus()));
     connect(consoleDock, &NSDockWidget::topLevelChanged, this, [this]() { console->setFocus(); });
     consoleDock->setObjectName(OBJ_CONSOLE_DOCK);
@@ -262,7 +262,7 @@ MainWindow::MainWindow(NetSpeed::NocConsole* c, QWidget* parent)
     containerLayout->addWidget(floatingButt);
     containerLayout->addWidget(closeTabButt);
     containerLayout->setContentsMargins(0, 0, 0, 0);
-    containerLayout->setMargin(0);
+    //containerLayout->setMargin(0);
     containerLayout->setSpacing(0);
     container->setLayout(containerLayout);
     container->setStyleSheet("border:2px;");
@@ -312,7 +312,7 @@ MainWindow::MainWindow(NetSpeed::NocConsole* c, QWidget* parent)
     connect(this, &MainWindow::resizeWindow, this, [this](int width, int height) {
         //Set state to prevent problems when windows is at full screen then resize      
         setWindowState(Qt::WindowNoState);
-        auto rect = QDesktopWidget().availableGeometry();
+        auto rect = QGuiApplication::primaryScreen()->geometry();  // QDesktopWidget().availableGeometry();
         const int maxWidth = rect.width();
         const int maxHeight = rect.height();
         width = std::min(maxWidth, width);
@@ -1186,7 +1186,7 @@ void MainWindow::createLayerButtons(NetSpeed::Grid * grid)
         }
         else {
             QString t = "Shift+A";
-            t[t.length() - 1] = t[t.length() - 1].unicode() + l - 10;
+            t[t.length() - 1] = QChar(t[t.length() - 1].unicode() + l - 10);
             shortCut = layerShortcut.arg(t);
             layerPb->setShortcut(shortCut);
         }
@@ -3279,9 +3279,10 @@ bool MainWindow::saveProjectAct()
     }
 
     QJsonDocument saveDoc(loadDoc.object());
-    saveFile.write(fileName.endsWith(".json")
-        ? saveDoc.toJson()
-        : saveDoc.toBinaryData());
+    //saveFile.write(fileName.endsWith(".json")
+    //    ? saveDoc.toJson()
+    //    : saveDoc.toBinaryData());
+    saveFile.write(saveDoc.toJson());
 
 #endif
     return true;
@@ -3306,9 +3307,10 @@ bool MainWindow::openProjectAct()
 
     QByteArray saveData = loadFile.readAll();
 
-    QJsonDocument loadDoc(fileName.endsWith(".json")
-        ? QJsonDocument::fromJson(saveData)
-        : QJsonDocument::fromBinaryData(saveData));
+    //QJsonDocument loadDoc(fileName.endsWith(".json")
+    //    ? QJsonDocument::fromJson(saveData)
+    //    : QJsonDocument::fromBinaryData(saveData));
+    QJsonDocument loadDoc(QJsonDocument::fromJson(saveData));
 
     //! TODO: Read data from Json Objects
     qDebug() << loadDoc.toJson() << loadDoc.object().keys();
@@ -3859,10 +3861,10 @@ void MainWindow::wheelEvent(QWheelEvent * event)
         if (!displayPanel || (displayPanel->currentIndex() != 0 && !isDisplayingChipView())) return;
         QWidget * widget = displayPanel->widget(0);
         if (!widget || (!widget->underMouse() && !isDisplayingChipView())) return;
-        if (event->delta() > 0) {
+        if (event->angleDelta().y() > 0) {
             zoomInAct();
         }
-        else if (event->delta() < 0) {
+        else if (event->angleDelta().y() < 0) {
             zoomOutAct();
         }
     }
@@ -4929,7 +4931,7 @@ void MainWindow::delTypeDomainAct()
         }
     }
     if (allDomains.isEmpty()) return;
-    Qt::WindowFlags flags = 0;
+    Qt::WindowFlags flags = Qt::Widget;
     flags |= Qt::WindowCloseButtonHint;
     flags |= Qt::Window;
     flags |= Qt::WindowTitleHint;
@@ -6613,7 +6615,8 @@ void MainWindow::readSettings()
     QSettings settings(settingFilePath, QSettings::IniFormat);
 
     if (!settings.childGroups().contains(viewOptionList)) {
-        QRect screenGeometry = QApplication::desktop()->screenGeometry();
+        //QRect screenGeometry = QApplication::desktop()->screenGeometry();
+        QRect screenGeometry = QGuiApplication::primaryScreen()->geometry();
         int x = (screenGeometry.width() - width()) / 2;
         int y = (screenGeometry.height() - height()) / 2;
         move(x, y);
@@ -6829,7 +6832,7 @@ QVBoxLayout* MainWindow::createChartTabLayout(QMap<QString, QCustomPlot*>& plots
 {
     QVBoxLayout* mainLayout = new QVBoxLayout();
     mainLayout->setSpacing(6);
-    mainLayout->setMargin(0);
+    //mainLayout->setMargin(0);
     // Display normal plots
     for (const auto& chart : chs.charts) {
         // Init chart
@@ -6845,12 +6848,12 @@ QVBoxLayout* MainWindow::createChartTabLayout(QMap<QString, QCustomPlot*>& plots
         QVBoxLayout* plotLayout;
         plotLayout = new QVBoxLayout();
         plotLayout->setSpacing(0);
-        plotLayout->setMargin(0);
+        //plotLayout->setMargin(0);
         plotLayout->addWidget(customPlot);
 
         QVBoxLayout* verticalLayout = new QVBoxLayout();
         verticalLayout->addLayout(plotLayout);
-        verticalLayout->setMargin(10);
+        //verticalLayout->setMargin(10);
         widget->setLayout(verticalLayout);
 
         // Add to main layout
@@ -9098,7 +9101,7 @@ void MainWindow::createToolbars()
     powerProfilesComboBox = new QComboBox;
     powerProfilesComboBox->setSizeAdjustPolicy(QComboBox::AdjustToContents);
     powerProfilesComboBox->setToolTip(TOOLBAR_ENTER_EXIT_POWER_PROFILE);
-    connect(powerProfilesComboBox, SIGNAL(activated(QString)), this, SLOT(activevatedPowerProfilesComboBox(QString)));
+    connect(powerProfilesComboBox, SIGNAL(textActivated(QString)), this, SLOT(activevatedPowerProfilesComboBox(QString)));
 
     if (NetSpeed::Config::enable_power()) {
         analyzeToolbar->addWidget(powerProfilesComboBox);
diff --git i/src/sw/noc_dev/prototype/Gui/myconsole.cpp w/src/sw/noc_dev/prototype/Gui/myconsole.cpp
index b059f449f78..2952ef670e7 100644
--- i/src/sw/noc_dev/prototype/Gui/myconsole.cpp
+++ w/src/sw/noc_dev/prototype/Gui/myconsole.cpp
@@ -418,10 +418,10 @@ void INIConsole::wheelEvent(QWheelEvent* event)
     if (event->modifiers().testFlag(Qt::ControlModifier))
     {
         QSlider* cSlider = ResizeDialog::getResizeDialog()->getCSlider();
-        if (event->delta() > 0) {
+        if (event->angleDelta().y() > 0) {
             cSlider->triggerAction(QAbstractSlider::SliderSingleStepAdd);
         }
-        else if (event->delta() < 0) {
+        else if (event->angleDelta().y() < 0) {
             cSlider->triggerAction(QAbstractSlider::SliderSingleStepSub);
         }
         event->accept();
@@ -484,7 +484,7 @@ void INIConsole::handlePasteEvent()
 
     // Delete characters/ selected text which user inputed
     if (min >= beginOfCurrentTyping) {
-        if ((blkCmd.trimmed().size() > 0) && blkCmd.contains(QRegExp("[\r\n]"))) {
+        if ((blkCmd.trimmed().size() > 0) && blkCmd.contains(QRegularExpression("[\r\n]"))) {
             mainWindow->closeCreationIns();
             textCursor().deleteChar();
             moveCursor(QTextCursor::End);
@@ -729,7 +729,8 @@ void INIConsole::executeExitApp(bool forcedExit)
                 QCoreApplication::processEvents(QEventLoop::AllEvents, 100);
             }
         }       
-        QApplication::quit();
+        //QApplication::quit();
+	QApplication::exit(0);
     };
 
     if (forcedExit) exit();
diff --git i/src/sw/noc_dev/prototype/Gui/propertypanel.cpp w/src/sw/noc_dev/prototype/Gui/propertypanel.cpp
index ad44fc271db..903b311ab2b 100644
--- i/src/sw/noc_dev/prototype/Gui/propertypanel.cpp
+++ w/src/sw/noc_dev/prototype/Gui/propertypanel.cpp
@@ -155,7 +155,7 @@ template <> QString getPropCmd<NetSpeed::Bridge>(QtProperty * p, const NetSpeed:
     auto propName = (helpTxtEmpty) ? p->propertyName() : helpTxt;
     auto value = p->valueText();
     if (!helpTxtEmpty) {
-        auto nameList = value.split(QRegExp("/"));
+        auto nameList = value.split(QRegularExpression("/"));
         if (!nameList.empty()) value = nameList.last();
     }
     return QString("bridge_prop {%1} %2 {%3}").arg(QString::fromStdString(h->name()), propName, value);
@@ -257,7 +257,7 @@ PropertyPanel::PropertyPanel(MainWindow * mw)
     , selectionPropertyEditor(static_cast<LazyLoadPortGroup*>(selectionBrowser)), mw(mw)
 {
     Q_ASSERT(mw);
-    dockLint = new NSDockWidget(OBJ_LINT_DOCK, mw, 0);
+    dockLint = new NSDockWidget(OBJ_LINT_DOCK, mw, Qt::Widget);
     connect(this, SIGNAL(onClearTransactionList()), this, SLOT(clearTransactionList()));
 
     /* add button for adding host by tool */
@@ -404,7 +404,7 @@ PropertyPanel::PropertyPanel(MainWindow * mw)
     /* Filter Flags */
     proxyModel->setFilterCaseSensitivity(Qt::CaseInsensitive);
     connect(filter, SIGNAL(textEdited(QString)), proxyModel, SLOT(filterAction(QString)));
-    connect(sim_profilesComboBox, SIGNAL(currentIndexChanged(QString)), proxyModel, SLOT(profileChanged(QString)));
+    connect(sim_profilesComboBox, SIGNAL(currentTextChanged(QString)), proxyModel, SLOT(profileChanged(QString)));
     QObject::connect(sim_profilesComboBox, &QComboBox::currentTextChanged, this, [&]() {
         updateSelectAllTransactionCheckBox();
         });
@@ -3141,13 +3141,13 @@ void PropertyPanel::showComparePointToolTip(QMouseEvent * event)
         QString msg = "";
         int graphix = -1, outsidecnt = 0;
         if (!customPlot->axisRect(0) || !customPlot->axisRect(0)->axis(QCPAxis::atBottom, 0)) return;
-        auto coord = customPlot->axisRect(0)->axis(QCPAxis::atBottom, 0)->pixelToCoord(event->localPos().x());
+        auto coord = customPlot->axisRect(0)->axis(QCPAxis::atBottom, 0)->pixelToCoord(event->position().x());
         for (auto i = 0; i < customPlot->axisRect(0)->axes().size(); i++)
         {
             QString lbl = customPlot->axisRect(0)->axes()[i]->label();
             if (lbl.contains("Time"))
                 continue;
-            double coordy = customPlot->axisRect(0)->axes()[i]->pixelToCoord(event->localPos().y());
+            double coordy = customPlot->axisRect(0)->axes()[i]->pixelToCoord(event->position().y());
             for (graphix = 0; graphix < customPlot->graphCount(); graphix++)
             {
                 if (!customPlot->graph(graphix)->data()) continue;
@@ -3273,10 +3273,10 @@ void PropertyPanel::showPointToolTip(QMouseEvent * event)
         QString msg = "";
         int graphix = -1, outsidecnt = 0;
         if (!customPlot->axisRect(0) || !customPlot->axisRect(0)->axis(QCPAxis::atBottom, 0)) return;
-        auto coord = customPlot->axisRect(0)->axis(QCPAxis::atBottom, 0)->pixelToCoord(event->localPos().x());
+        auto coord = customPlot->axisRect(0)->axis(QCPAxis::atBottom, 0)->pixelToCoord(event->position().x());
         for (auto i = 0; i < customPlot->axisRect(0)->axes().size(); i++)
         {
-            double coordy = customPlot->axisRect(0)->axes()[i]->pixelToCoord(event->localPos().y());
+            double coordy = customPlot->axisRect(0)->axes()[i]->pixelToCoord(event->position().y());
             graphix = -1;
             QString lbl = customPlot->axisRect(0)->axes()[i]->label();
             if (lbl.contains("Time"))
@@ -3383,8 +3383,8 @@ void PropertyPanel::updatePlotsStatTab(QWidget * splitter, QSharedPointer<StatTa
         // Reset map title
         QString graphName = QString::fromStdString(gl);
         int graphNameLimit = 50;
-        if (graphName.count() > graphNameLimit)
-            graphName = graphName.remove(graphNameLimit, graphName.count()
+        if (graphName.length() > graphNameLimit)
+            graphName = graphName.remove(graphNameLimit, graphName.length()
                 - graphNameLimit) + " ...";
         QCPLayoutElement * lb = customPlot->plotLayout()->element(0, 0);
         customPlot->plotLayout()->remove(lb);
@@ -3439,7 +3439,7 @@ void PropertyPanel::initNormalPlot(QString name, QCustomPlot * customPlot)
 
     int textSize = 50;
     QString graphName = tr("%1").arg(name);
-    if (graphName.count() > textSize) graphName = graphName.remove(textSize, graphName.count() - textSize) + " ...";
+    if (graphName.length() > textSize) graphName = graphName.remove(textSize, graphName.length() - textSize) + " ...";
     customPlot->plotLayout()->addElement(0, 0, new QCPPlotTitle(customPlot, graphName));
     customPlot->plotLayout()->addElement(1, 0, wideAxisRect); // insert axis rect in first row
 
@@ -3505,7 +3505,7 @@ void PropertyPanel::initComparisonPlot(QString name, QCustomPlot * customPlot, P
         mainGraph1->setPen(pen);
         mainGraph1->setLineStyle(QCPGraph::lsImpulse);
         QString graphName = QString::fromStdString(it->first);
-        if (graphName.count() > 30) graphName = graphName.remove(25, graphName.count() - 20) + " ...";
+        if (graphName.length() > 30) graphName = graphName.remove(25, graphName.length() - 20) + " ...";
         customPlot->graph()->setName(graphName);
 
         // Latency
@@ -3820,7 +3820,7 @@ void PropertyPanel::showLatencyFrequencyToolTip(QMouseEvent * event)
     auto & bdata = *bar->data();
 
     // find which bar is under mouse
-    auto x_coord = lat->xAxis->pixelToCoord(event->x());
+    auto x_coord = lat->xAxis->pixelToCoord(event->position().x());
     double min_delta = std::numeric_limits<double>::max();
     QMap<double, QCPBarData>::iterator preit = bdata.end();
 
@@ -4959,12 +4959,12 @@ QString PropertyPanel::wrapTextForTooltip(QString text, int width)
     static int colLen = 0;
     if (localWidth != width)
     {
-        int numRow = fm.width(text) / width;
+        int numRow = fm.tightBoundingRect(text).width() / width;
         if (numRow <= 1) return text;
         colLen = text.length() / numRow;
         while (colLen < text.length())
         {
-            if (fm.width(text.left(++colLen + 1)) > width)
+            if (fm.tightBoundingRect(text.left(++colLen + 1)).width() > width)
                 break;
         }
         localWidth = width;
@@ -6688,7 +6688,9 @@ void PropertyPanel::createMeshPropertyItems(const NetSpeed::Grid * g, QtTreeProp
         addPropertyToBrowser(propTree, i.value());
         ++i;
     }
-    auto keys = cateProp.keys().toVector().toStdVector();
+    //std::vector<QString> keys(cateProp.keys().begin(), cateProp.keys().end());
+    QStringList keyList = cateProp.keys();
+    std::vector<QString> keys(keyList.begin(), keyList.end());
     setBoldProperty(propTree, keys);
     // Add Property Items
     QtProperty* propertyItem = nullptr;
@@ -7152,22 +7154,22 @@ void PropertyPanel::wheelOnCustomPlot(QWheelEvent * event)
             if (auto widget = graphSplitter->parentWidget()) scroll = widget->parentWidget();
         QSharedPointer<StatTab> statTab = mw->getTabStatTabMap().value(scroll, nullptr);
         if (!statTab) return;
-        QCPAxisRect* axisRect = dynamic_cast<QCPAxisRect*>(customPlot->layoutElementAt(event->pos()));
+        QCPAxisRect* axisRect = dynamic_cast<QCPAxisRect*>(customPlot->layoutElementAt(event->position()));
         if (axisRect)
         {
             QCPAxis* xAxis = axisRect->axis(QCPAxis::atBottom, 0);
             if (xAxis)
             {
-                double wheelStep = event->delta() / 120.0;
+                double wheelStep = (event->angleDelta().y()) / 120.0;
                 double factor = pow(axisRect->rangeZoomFactor(Qt::Horizontal), wheelStep);
                 // Scale the range
-                xAxis->scaleRange(factor, xAxis->pixelToCoord(event->pos().x()));
+                xAxis->scaleRange(factor, xAxis->pixelToCoord(event->position().x()));
                 bool haveData = customPlot->haveDataInRange(xAxis->range().lower, xAxis->range().upper);
                 if (haveData == false) // No data
                 {
                     // Undo range change
                     factor = pow(axisRect->rangeZoomFactor(Qt::Horizontal), -wheelStep);
-                    xAxis->scaleRange(factor, xAxis->pixelToCoord(event->pos().x()));
+                    xAxis->scaleRange(factor, xAxis->pixelToCoord(event->position().x()));
                     return;
                 }
                 else //Have data
@@ -8218,9 +8220,9 @@ void PropertyTreeWidget::wheelEvent(QWheelEvent* event)
 {
     if (event->modifiers().testFlag(Qt::ControlModifier)) {
         if (auto zoomSlider = ResizeDialog::getResizeDialog()->getPSlider()) {
-            if (event->delta() > 0)
+            if (event->angleDelta().y() > 0)
                 zoomSlider->triggerAction(QAbstractSlider::SliderSingleStepAdd);
-            else if (event->delta() < 0)
+            else if (event->angleDelta().y() < 0)
                 zoomSlider->triggerAction(QAbstractSlider::SliderSingleStepSub);
         }
         event->accept();
@@ -8245,9 +8247,9 @@ void SimTableView::wheelEvent(QWheelEvent* event)
 {
     if (event->modifiers().testFlag(Qt::ControlModifier)) {
         if (auto zoomSlider = ResizeDialog::getResizeDialog()->getPSlider()) {
-            if (event->delta() > 0)
+            if (event->angleDelta().y() > 0)
                 zoomSlider->triggerAction(QAbstractSlider::SliderSingleStepAdd);
-            else if (event->delta() < 0)
+            else if (event->angleDelta().y() < 0)
                 zoomSlider->triggerAction(QAbstractSlider::SliderSingleStepSub);
         }
         event->accept();
@@ -8263,9 +8265,9 @@ void TooltipWindowTab::wheelEvent(QWheelEvent* event)
 {
     if (event->modifiers().testFlag(Qt::ControlModifier)) {
         if (auto zoomSlider = ResizeDialog::getResizeDialog()->getMSlider()) {
-            if (event->delta() > 0)
+            if (event->angleDelta().y() > 0)
                 zoomSlider->triggerAction(QAbstractSlider::SliderSingleStepAdd);
-            else if (event->delta() < 0)
+            else if (event->angleDelta().y() < 0)
                 zoomSlider->triggerAction(QAbstractSlider::SliderSingleStepSub);
         }
         event->accept();
diff --git i/src/sw/noc_dev/prototype/Gui/statsview.cpp w/src/sw/noc_dev/prototype/Gui/statsview.cpp
index 006123ce542..8b5d35211c6 100644
--- i/src/sw/noc_dev/prototype/Gui/statsview.cpp
+++ w/src/sw/noc_dev/prototype/Gui/statsview.cpp
@@ -336,10 +336,10 @@ void StatsView::refresh()
         zoomAutofit(layer_columns);
     }
 
-    QMatrix matrix;
+    QTransform matrix;
     matrix.scale(zoomFactor, zoomFactor);
 
-    setMatrix(matrix);
+    setTransform(matrix);
     int active_layer_cnt = 0; // count active layers for positioning
     for (int i = 0; i < isize(layer_groups); ++i) {
         auto lg = layer_groups[i];
@@ -588,12 +588,12 @@ void StatsView::wheelEvent(QWheelEvent * event)
     if (event->modifiers().testFlag(Qt::ControlModifier))
     {
         if (getFocusPoint() == QPointF()) {
-            setFocusPoint(mapToScene(event->posF().x(), event->posF().y()));
+            setFocusPoint(mapToScene(event->position().x(), event->position().y()));
         }
-        if (event->delta() > 0) {
+        if (event->angleDelta().y() > 0) {
             mw->zoomInAct();
         }
-        else if (event->delta() < 0) {
+        else if (event->angleDelta().y() < 0) {
             mw->zoomOutAct();
         }
     }
@@ -1037,7 +1037,8 @@ void stats_box_data_t::paint(QPainter * painter, const QStyleOptionGraphicsItem*
         const int n2 = STATS_NODE_SIZE * 2 / 4;
         const int n3 = STATS_NODE_SIZE * 3 / 4;
         const int n4 = STATS_NODE_SIZE;
-        const QVector<QLine> lines = QVector<QLine>::fromStdVector({
+        //const QVector<QLine> lines = QVector<QLine>::fromStdVector({
+        std::vector<QLine> vector_lines = {
             // Horizontal lines
             QLine(n0, n2, n4, n2),
             QLine(n2, n1, n4, n1),
@@ -1047,14 +1048,16 @@ void stats_box_data_t::paint(QPainter * painter, const QStyleOptionGraphicsItem*
                 QLine(n2, n0, n2, n4),
                 QLine(n1, n0, n1, n2),
                 QLine(n3, n2, n3, n4),
-            });
+            };
+        const QVector<QLine> lines(vector_lines.begin(), vector_lines.end());
         painter->drawLines(lines);
 
         QPoint p1, p2;
 
         // Gray lines
         painter->setPen(Qt::gray);
-        const QVector<QLine> lines2 = QVector<QLine>::fromStdVector({
+        //const QVector<QLine> lines2 = QVector<QLine>::fromStdVector({
+        std::vector<QLine> vector_lines2 = {
             // Horizontal lines
             QLine(n0, n1, n2, n1),
             QLine(n2, n3, n4, n3),
@@ -1062,7 +1065,8 @@ void stats_box_data_t::paint(QPainter * painter, const QStyleOptionGraphicsItem*
             // Vertical lines
             QLine(n1, n2, n1, n4),
             QLine(n3, n0, n3, n2),
-            });
+            };
+        const QVector<QLine> lines2(vector_lines2.begin(), vector_lines2.end());
         painter->drawLines(lines2);
         painter->restore();
 
diff --git i/src/sw/noc_dev/prototype/Gui/treeitem.cpp w/src/sw/noc_dev/prototype/Gui/treeitem.cpp
index 9a546d9e266..e7c9d89c822 100644
--- i/src/sw/noc_dev/prototype/Gui/treeitem.cpp
+++ w/src/sw/noc_dev/prototype/Gui/treeitem.cpp
@@ -80,7 +80,7 @@ TreeItem* TreeItem::child(int number)
 
 int TreeItem::childCount() const
 {
-    return childItems.count();
+    return childItems.size();
 }
 
 int TreeItem::childNumber() const
@@ -93,7 +93,7 @@ int TreeItem::childNumber() const
 
 int TreeItem::columnCount() const
 {
-    return itemData.count();
+    return itemData.size();
 }
 
 QVariant TreeItem::data(int column) const
@@ -186,4 +186,4 @@ bool TreeItem::setTooltipData(int column, const QVariant & value)
 
     tooltip[column] = value;
     return true;
-}
\ No newline at end of file
+}
diff --git i/src/sw/noc_dev/prototype/Gui/treemodel.cpp w/src/sw/noc_dev/prototype/Gui/treemodel.cpp
index 471cf03afdb..74e80cb494a 100644
--- i/src/sw/noc_dev/prototype/Gui/treemodel.cpp
+++ w/src/sw/noc_dev/prototype/Gui/treemodel.cpp
@@ -135,7 +135,7 @@ QVariant TreeModel::data(const QModelIndex& index, int role) const
 Qt::ItemFlags TreeModel::flags(const QModelIndex & index) const
 {
     if (!index.isValid())
-        return 0;
+        return Qt::ItemFlags(0);
 
     Qt::ItemFlags flags = Qt::ItemIsEnabled | Qt::ItemIsSelectable;
 
diff --git i/src/sw/noc_dev/prototype/NocStudio.vcxproj w/src/sw/noc_dev/prototype/NocStudio.vcxproj
index 131181ac31d..6a562993085 100644
--- i/src/sw/noc_dev/prototype/NocStudio.vcxproj
+++ w/src/sw/noc_dev/prototype/NocStudio.vcxproj
@@ -69,7 +69,7 @@
     <QtModules>core;gui;svg;widgets;printsupport</QtModules>
   </PropertyGroup>
   <PropertyGroup Label="QtSettings" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
-    <QtInstall>Qt5.11.1</QtInstall>
+    <QtInstall>6.7.3_msvc2019_64</QtInstall>
     <QtModules>core;gui;svg;widgets;printsupport</QtModules>
   </PropertyGroup>
   <ImportGroup Condition="Exists('$(QtMsBuild)\qt.props')">
@@ -77,7 +77,7 @@
   </ImportGroup>
   <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
     <ClCompile>
-      <AdditionalIncludeDirectories>.\GeneratedFiles\$(ConfigurationName);.\GeneratedFiles;../../lib/;../GUICore;../GUICore/Utils;../GUICore/DRC;../include;.;../GUICore/Qtproperty;..\prototype;..\NocCore\include;..\prototype\Gui;..\prototype\Gui\Item;..\prototype\Gui\View;C:\Qt\Qt5.11.1\5.11.1\msvc2017_64\include;C:\Qt\Qt5.11.1\5.11.1\msvc2017_64\include\QtPrintSupport;C:\Qt\Qt5.11.1\5.11.1\msvc2017_64\include\QtSvg;C:\Qt\Qt5.11.1\5.11.1\msvc2017_64\include\QtWidgets;C:\Qt\Qt5.11.1\5.11.1\msvc2017_64\include\QtGui;C:\Qt\Qt5.11.1\5.11.1\msvc2017_64\include\QtANGLE;C:\Qt\Qt5.11.1\5.11.1\msvc2017_64\include\QtCore;release;C:\Qt\Qt5.11.1\5.11.1\msvc2017_64\mkspecs\win32-msvc2015;../../lib/cpptcl-2.2.5;../../lib/tcl;../Infra/include/;../Isabelle/include/;../IPCore/include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <AdditionalIncludeDirectories>.\GeneratedFiles\$(ConfigurationName);.\GeneratedFiles;../../lib/;../GUICore;../GUICore/Utils;../GUICore/DRC;../include;.;../GUICore/Qtproperty;..\prototype;..\NocCore\include;..\prototype\Gui;..\prototype\Gui\Item;..\prototype\Gui\View;C:\Qt6\6.7.3\msvc2019_64\bin\include;C:\Qt6\6.7.3\msvc2019_64\include\QtPrintSupport;C:\Qt6\6.7.3\msvc2019_64\include\QtSvg;C:\Qt6\6.7.3\msvc2019_64\include\QtWidgets;C:\Qt6\6.7.3\msvc2019_64\include\QtGui;C:\Qt6\6.7.3\msvc2019_64\include\QtANGLE;C:\Qt6\6.7.3\msvc2019_64\include\QtCore;release;C:\Qt6\6.7.3\msvc2019_64\mkspecs\win32-msvc;../../lib/cpptcl-2.2.5;../../lib/tcl;../Infra/include/;../Isabelle/include/;../IPCore/include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
       <AdditionalOptions>$(FLEXCFLAGS) -Zc:strictStrings -Zc:throwingNew -w34100 -w34189 -w44996 -w44456 -w44457 -w44458 %(AdditionalOptions)</AdditionalOptions>
       <AssemblerListingLocation>release\</AssemblerListingLocation>
       <BrowseInformation>false</BrowseInformation>
@@ -263,7 +263,7 @@
     </QtMoc>
     <ClInclude Include="..\include\SysVerilogPEG.h" />
     <QtMoc Include="Gui\Item\NsBridge.h">
-	   <DynamicSource Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</DynamicSource>
+	  <DynamicSource Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</DynamicSource>
       <DynamicSource Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</DynamicSource>
     </QtMoc>
     <ClInclude Include="Gui\View\AddressrangeTable.h" />
@@ -296,7 +296,7 @@
     </QtMoc>
     <ClInclude Include="Gui\Item\NsHost.h" />
     <QtMoc Include="Gui\Item\NsBridgeDiagram.h">
-	   <DynamicSource Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</DynamicSource>
+	  <DynamicSource Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</DynamicSource>
       <DynamicSource Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</DynamicSource>
     </QtMoc>
     <QtMoc Include="Gui\Item\NsVC.h">
@@ -308,7 +308,7 @@
       <DynamicSource Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</DynamicSource>
     </QtMoc>
     <QtMoc Include="Gui\Item\NsPlusItem.h">
-	   <DynamicSource Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</DynamicSource>
+	  <DynamicSource Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</DynamicSource>
       <DynamicSource Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</DynamicSource>
     </QtMoc>
     <QtMoc Include="Gui\View\NsScene.h">
@@ -369,7 +369,7 @@
       <DynamicSource Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</DynamicSource>
     </QtMoc>
     <QtMoc Include="Gui\View\NsChopView.h">
-	   <DynamicSource Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</DynamicSource>
+	  <DynamicSource Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</DynamicSource>
       <DynamicSource Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</DynamicSource>
     </QtMoc>
     <QtMoc Include="Gui\View\NsView.h">
diff --git i/src/sw/noc_dev/prototype/Utils/stattab.cpp w/src/sw/noc_dev/prototype/Utils/stattab.cpp
index 10e037320be..50808f3b6b5 100644
--- i/src/sw/noc_dev/prototype/Utils/stattab.cpp
+++ w/src/sw/noc_dev/prototype/Utils/stattab.cpp
@@ -513,7 +513,8 @@ void EventGroup::get_graphs_points(QSharedPointer<StatTab> st, double bin_size,
             }
             else {
                 QCPData data(et, static_cast<float>(e.data_size) / 8);
-                pkt_size_points[et] = data;
+                pkt_size_points.insert(et, data);
+                //pkt_size_points[et] = data;
                 if (data.value > maxDataSize) maxDataSize = data.value;
                 total_datasize += data.value;
             }
@@ -551,9 +552,12 @@ void EventGroup::get_graphs_points(QSharedPointer<StatTab> st, double bin_size,
         QCPData latency_data(it.key(), latency);
         QCPData idle_latency_data(it.key(), idle_latency);
 
-        latency_points[it.key()] = latency_data;
-        throughput_points[it.key()] = throughput_data;
-        idle_latency_points[it.key()] = idle_latency_data;
+        //latency_points[it.key()] = latency_data;
+        latency_points.insert(it.key(), latency_data);
+        //throughput_points[it.key()] = throughput_data;
+        throughput_points.insert(it.key(), throughput_data);
+        //idle_latency_points[it.key()] = idle_latency_data;
+        idle_latency_points.insert(it.key(), idle_latency_data);
         if (throughput > maxThroughput) maxThroughput = throughput;
         if (latency > maxLatency) maxLatency = latency;
         if (idle_latency > maxLatency) maxLatency = idle_latency;
diff --git i/src/sw/noc_dev/prototype/Utils/worker.cpp w/src/sw/noc_dev/prototype/Utils/worker.cpp
index 549b8a3d754..dd4e7f1937d 100644
--- i/src/sw/noc_dev/prototype/Utils/worker.cpp
+++ w/src/sw/noc_dev/prototype/Utils/worker.cpp
@@ -4,6 +4,8 @@
 
 #include "Grid.h"
 
+#include <QRegularExpression>
+
 Worker::Worker(NetSpeed::NocConsole* c, INIConsole* ini, MainWindow* parent) :
     c(c)
 {
@@ -15,7 +17,7 @@ Worker::Worker(NetSpeed::NocConsole* c, INIConsole* ini, MainWindow* parent) :
 void Worker::processBlkCmd(QString blkCmd, bool isDesignRevMode)
 {
     bool res = false;
-    QStringList cmds = blkCmd.split(QRegExp("[\r\n]"));   
+    QStringList cmds = blkCmd.split(QRegularExpression("[\r\n]"));
     if (cmds.isEmpty()) {
         return;
     }
diff --git i/src/sw/noc_dev/prototype/main.cpp w/src/sw/noc_dev/prototype/main.cpp
index 0d251aec54e..35bacb660a3 100644
--- i/src/sw/noc_dev/prototype/main.cpp
+++ w/src/sw/noc_dev/prototype/main.cpp
@@ -364,13 +364,13 @@ int main(int argc, char* argv[]) {
             //app.setFont(QFont("font_name")
             app.setFont(QFont("Sans Serif"));
 #endif
-            static const char DEVICE_PIXEL_RATIO[] = "QT_DEVICE_PIXEL_RATIO";
+            /*static const char DEVICE_PIXEL_RATIO[] = "QT_DEVICE_PIXEL_RATIO";
             if (!qEnvironmentVariableIsSet(DEVICE_PIXEL_RATIO)
                 && !qEnvironmentVariableIsSet("QT_AUTO_SCREEN_SCALE_FACTOR")
                 && !qEnvironmentVariableIsSet("QT_SCALE_FACTOR")
                 && !qEnvironmentVariableIsSet("QT_SCREEN_SCALE_FACTORS")) {
                 QCoreApplication::setAttribute(Qt::AA_EnableHighDpiScaling);
-            }
+            }*/
 
             //generate auto-sized splash image
             auto splash = createSpashScreen();
@@ -474,7 +474,8 @@ int main(int argc, char* argv[]) {
                 cout << "//SUCCESSFUL" << endl;
         }
     }
-    catch (std::bad_alloc) {
+    catch (const std::bad_alloc& e) {
+	std::cerr << "Memory allocation failed: " << e.what() << std::endl;
         std::cerr << "Out of memory exception raised; please provide more memory to " << PRODUCT_NAME << " for this config or try running it without GUI." << endl;
         return -1;
     }
