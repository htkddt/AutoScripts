diff --git i/src/sw/noc_dev/CMakeLists.txt w/src/sw/noc_dev/CMakeLists.txt
index a6b9b186291..9664017be4c 100644
--- i/src/sw/noc_dev/CMakeLists.txt
+++ w/src/sw/noc_dev/CMakeLists.txt
@@ -54,6 +54,7 @@ endif()
 
 add_link_options(-Wl,--fatal-warnings)
 #add_compile_definitions($<$<NOT:$<CONFIG:Debug>>:_FORTIFY_SOURCE=2>)
+#add_definitions(-DQT_DISABLE_DEPRECATED_BEFORE=0 -DENABLE_VSTAT -DQT_USE_QSTRINGBUILDER -DQT_NO_DEBUG -DQT_PRINTSUPPORT_LIB -DQT_WIDGETS_LIB -DQT_GUI_LIB -DQT_CORE_LIB)
 add_compile_options(
     -Wall -Wextra -Wformat -Wformat-security
     -Wno-attributes)
@@ -86,7 +87,7 @@ add_compile_definitions(NS_DLL)
 if (NOT CMAKE_CXX_STANDARD)
     set(CMAKE_CXX_STANDARD 17)
     set(CMAKE_CXX_STANDARD_REQUIRED ON)
-#    set(CMAKE_CXX_EXTENSIONS OFF)
+	set(CMAKE_CXX_EXTENSIONS OFF)
 endif()
 
 # Using interface library to resolve circular dependencies
@@ -131,9 +132,10 @@ target_link_libraries(noc_config_ip PRIVATE flexlm noc_include)
 
 add_library(nocstudio SHARED)
 target_include_directories(nocstudio PUBLIC include)
+find_package(OpenMP)
 target_link_libraries(nocstudio
     PUBLIC noc_infra noc_core ipcore
-    PRIVATE cpptcl noc_config_ns tclvfs)
+    PRIVATE cpptcl noc_config_ns tclvfs OpenMP::OpenMP_CXX)
 
 add_subdirectory(Infra)
 add_subdirectory(Isabelle)
diff --git i/src/sw/noc_dev/GUICore/CMakeLists.txt w/src/sw/noc_dev/GUICore/CMakeLists.txt
index 36906dc6973..17312b554d4 100755
--- i/src/sw/noc_dev/GUICore/CMakeLists.txt
+++ w/src/sw/noc_dev/GUICore/CMakeLists.txt
@@ -4,62 +4,33 @@ set(CMAKE_AUTORCC ON)
 set(CMAKE_AUTOUIC ON)
 set(CMAKE_PREFIX_PATH /usr/intel/pkgs/libqt/5.11.2/)
 
-find_package(Qt5 COMPONENTS Core Gui Widgets PrintSupport REQUIRED)
+if (NS_USE_QT6)
+  set(Qt6Core5Compat_DIR "/usr/intel/pkgs/libqt/6.7.2/install/lib/cmake/Qt6Core5Compat")
+  find_package(Qt6 COMPONENTS Core Gui Widgets PrintSupport Core5Compat REQUIRED)
+else()
+  find_package(Qt5 COMPONENTS Core Gui Widgets PrintSupport REQUIRED)
+endif()
 
-#GUICore
 file(GLOB gc_sources RELATIVE ${CMAKE_CURRENT_SOURCE_DIR}
     [^.]*.cpp /[^.]*.h
     DRC/[^.]*.cpp DRC/[^.]*.h
     Utils/[^.]*.cpp Utils/[^.]*.h
     Qtproperty/[^.]*.cpp Qtproperty/*/[^.]*.cpp 
     )
-#message(STATUS "gc_sources=${gc_sources}")
-
-file(GLOB gc_std_mocs RELATIVE ${CMAKE_CURRENT_SOURCE_DIR}
-    Qtproperty/[^.]*_p.h Qtproperty/*/[^.]*_p.h
-    )
-QT5_WRAP_CPP(gc_std_mocs)
-
 set(gc_includes DRC/ Gui/ Modeling/ Utils/ .)
 
-# Qt property headers need special MOC handling as the X.cpp files include the generated moc_X.cpp
-file(GLOB qtp_hdrs RELATIVE ${CMAKE_CURRENT_SOURCE_DIR}
-    Qtproperty/[^.]*.h Qtproperty/*/[^.]*.h
-    )
-list(FILTER qtp_hdrs EXCLUDE REGEX "_p.h$")
-
-#Rule to generate moc files with .cpp extension
-function(qt5_manual_moc)
-  qt5_get_moc_flags(_moc_incs)
-  foreach(_current_file ${ARGN})
-    get_filename_component(_abs_file ${_current_file} ABSOLUTE)
-    if(EXISTS ${_abs_file})
-      file(READ ${_abs_file} _contents)
-      get_filename_component(_basename ${_abs_file} NAME_WE)
-      string(REGEX MATCH "Q_OBJECT" _match "${_contents}")
-      if(_match)
-        set(_moc "${CMAKE_CURRENT_BINARY_DIR}/moc_${_basename}.cpp")
-        qt5_create_moc_command(${_abs_file} ${_moc} "${_moc_incs}" "" "" "")
-        set_property(SOURCE ${_abs_file} PROPERTY SKIP_AUTOMOC ON) # disable automoc on this file
-        string(REGEX REPLACE "[.]h$" ".cpp" _cpp_file ${_current_file})
-        set_property(SOURCE "${CMAKE_CURRENT_SOURCE_DIR}/${_cpp_file}" APPEND PROPERTY OBJECT_DEPENDS ${_moc})
-#        message(STATUS "Added dep from ${CMAKE_CURRENT_SOURCE_DIR}/${_cpp_file} to ${_moc}")
-      endif(_match)
-    endif(EXISTS ${_abs_file})
-  endforeach (_current_file)
-endfunction(qt5_manual_moc)
-
-#message(STATUS "qtp_hdrs=${qtp_hdrs}")
-qt5_manual_moc(${qtp_hdrs})
-# don't include any moc_/qrc_ files left lying around from Makefile build
-list(FILTER gc_sources EXCLUDE REGEX "^moc_.*[.]cpp")
-list(FILTER gc_sources EXCLUDE REGEX "^qrc_.*[.]cpp")
-
-## HACK: include GUI files from prototype when building GUICore
+set(CMAKE_AUTOMOC ON)
+set(CMAKE_AUTORCC ON)
+set(CMAKE_AUTOUIC ON)
 set(gui_path ../prototype)
 set(gui_includes ${gui_path} ${gui_path}/Gui/ ${gui_path}/Gui/Customized/ ${gui_path}/Gui/Delegates/ ${gui_path}/Gui/Dialogs/ ${gui_path}/Gui/Item/ ${gui_path}/Gui/Models/ ${gui_path}/Gui/View/ ${gui_path}/Modeling/ ${gui_path}/Utils/)
-## END HACK
 
 add_library(GUICore OBJECT ${gc_sources} dockresource.qrc)
 target_include_directories(GUICore PUBLIC ${gc_includes} ${CMAKE_BINARY_DIR} ${gui_includes})
-target_link_libraries(GUICore PUBLIC noc_infra noc_core ipcore tclvfs Qt5::Core Qt5::Gui Qt5::Widgets Qt5::PrintSupport pthread dl)
\ No newline at end of file
+
+
+if (NS_USE_QT6)
+  target_link_libraries(GUICore PUBLIC noc_infra noc_core ipcore tclvfs Qt6::Core Qt6::Gui Qt6::Widgets Qt6::PrintSupport Qt6::Core5Compat pthread dl)
+else()
+  target_link_libraries(GUICore PUBLIC noc_infra noc_core ipcore tclvfs Qt5::Core Qt5::Gui Qt5::Widgets Qt5::PrintSupport pthread dl)
+endif()
diff --git i/src/sw/noc_dev/GUICore/NsTypes.cpp w/src/sw/noc_dev/GUICore/NsTypes.cpp
index ae3f0e37169..238a4826607 100644
--- i/src/sw/noc_dev/GUICore/NsTypes.cpp
+++ w/src/sw/noc_dev/GUICore/NsTypes.cpp
@@ -14,8 +14,10 @@
 #include <QGraphicsItem>
 #include <QSplashScreen>
 #include <QApplication>
-#include <QDesktopWidget>
+#include <QGuiApplication>
+#include <QRegExp>
 #include <QStyleOptionGraphicsItem>
+#include <QRegularExpression>
 
 #include <cmath>
 #include <regex>
@@ -231,7 +233,7 @@ void drawAutoFitText(const QString & text, const QRectF & itemRect, QPainter * p
     QFont measureFont = painter->font();
     measureFont.setPointSizeF(FLOOR_PLAN_DEFAULT_TEXT_SIZE);
     QFontMetrics metrics(measureFont);
-    if (itemRect.width() < metrics.width(text) || itemRect.height() < FLOOR_PLAN_DEFAULT_TEXT_SIZE) {
+    if (itemRect.width() < metrics.tightBoundingRect(text).width() || itemRect.height() < FLOOR_PLAN_DEFAULT_TEXT_SIZE) {
         const float hmargin = 0.1 * itemRect.width();// horizontal margin of 10% host width
         const auto brect = itemRect.adjusted(hmargin, 0, -hmargin, 0); //reduce rect by margin
         const int flags = Qt::TextDontClip | Qt::TextWordWrap; //more flags if needed
@@ -318,7 +320,7 @@ bool imgSave(QImage * img, const QString & absFilePath, const QString & extensio
 QString wrapTextForTooltip(const QString & text, int width)
 {
     QFontMetrics fm(QToolTip::font());
-    const int row = fm.width(text) / width;
+    const int row = fm.tightBoundingRect(text).width() / width;
     if (row <= 1) return text;
     const int col = text.length() / row;
     QString tempStr = text;
@@ -530,8 +532,8 @@ bool wordsFilter(QString text, QString filter)
 {
     // multiple words
     if (!filter.isEmpty()) {
-        QRegExp rx("(\\ |\\,|\\;|\\:|\\t)"); //RegEx for ' ' or ',' or ';' or '.' or ':' or '\t'
-        QStringList words = filter.split(rx, QString::SkipEmptyParts);
+        QRegularExpression rx("(\\ |\\,|\\;|\\:|\\t)");  // RegEx for ' ' or ',' or ';' or '.' or ':' or '\t'
+        QStringList words = filter.split(rx, Qt::SkipEmptyParts);
         for (auto const& w : words) {
             if (text.contains(w, Qt::CaseInsensitive)) {
                 return false;
@@ -546,8 +548,9 @@ QSplashScreen* createSpashScreen() {
     //generate auto-sized splash image
     QPixmap splashImage = QPixmap(":/images/cfg.png");
     QWidget* screen = nullptr;
-    screen = QApplication::desktop()->screen(QApplication::desktop()->primaryScreen());//get primary screen (splash screen only displayed on primary)
-    if (QApplication::desktop()->screenCount() == 0 || screen == nullptr)//if there is no screen registered, calculate size based on font metrics
+    //screen = QApplication::desktop()->screen(QApplication::desktop()->primaryScreen());//get primary screen (splash screen only displayed on primary)
+
+    if (screen == nullptr)  // if there is no screen registered, calculate size based on font metrics
     {
         QFontMetrics fontMet = QFontMetrics(QFont("Gotham Rounded Book", 10, 10));
         splashImage = splashImage.scaledToHeight(fontMet.height() * 18);
diff --git i/src/sw/noc_dev/GUICore/Qtproperty/qteditorfactory.cpp w/src/sw/noc_dev/GUICore/Qtproperty/qteditorfactory.cpp
index c486ef9c936..1aa9fab4b2d 100644
--- i/src/sw/noc_dev/GUICore/Qtproperty/qteditorfactory.cpp
+++ w/src/sw/noc_dev/GUICore/Qtproperty/qteditorfactory.cpp
@@ -64,6 +64,8 @@
 #include <QPainter>
 #include <QMap>
 #include <QDebug>
+#include <QRegularExpression>
+#include <QRegularExpressionValidator>
 
 #if defined(Q_CC_MSVC)
 #    pragma warning(disable: 4786) /* MS VS 6: truncating debug info after 255 characters */
@@ -1018,7 +1020,7 @@ void QtLineEditFactoryPrivate::slotRegExpChanged(QtProperty * property, const QR
         const QValidator* oldValidator = editor->validator();
         QValidator* newValidator = 0;
         if (regExp.isValid()) {
-            newValidator = new QRegExpValidator(regExp, editor);
+            newValidator = new QRegularExpressionValidator(QRegularExpression(regExp.pattern()), editor);
         }
         editor->setValidator(newValidator);
         if (oldValidator)
@@ -1137,7 +1139,7 @@ QWidget* QtLineEditFactory::createEditor(QtStringPropertyManager * manager, QtPr
     editor->setReadOnly(manager->isReadOnly(property));
     QRegExp regExp = manager->regExp(property);
     if (regExp.isValid()) {
-        QValidator* validator = new QRegExpValidator(regExp, editor);
+        QValidator* validator = new QRegularExpressionValidator(QRegularExpression(regExp.pattern()), editor);
         editor->setValidator(validator);
     }
     editor->setText(manager->value(property));
@@ -1660,7 +1662,7 @@ QtCharEdit::QtCharEdit(QWidget* parent) :
 {
     QHBoxLayout* layout = new QHBoxLayout(this);
     layout->addWidget(m_lineEdit);
-    layout->setMargin(0);
+    //layout->setMargin(0);
     m_lineEdit->installEventFilter(this);
     m_lineEdit->setReadOnly(true);
     m_lineEdit->setFocusProxy(this);
@@ -1784,7 +1786,7 @@ void QtCharEdit::keyReleaseEvent(QKeyEvent * e)
 void QtCharEdit::paintEvent(QPaintEvent*)
 {
     QStyleOption opt;
-    opt.init(this);
+    opt.initFrom(this);
     QPainter p(this);
     style()->drawPrimitive(QStyle::PE_Widget, &opt, &p, this);
 }
@@ -2698,7 +2700,9 @@ void QtColorEditWidget::buttonClicked()
 {
     bool ok = false;
     QRgb oldRgba = m_color.rgba();
-    QRgb newRgba = QColorDialog::getRgba(oldRgba, &ok, this);
+    QColor oldColor(oldRgba);
+    QRgb newRgba =  // QColorDialog::getRgba(oldRgba, &ok, this);
+        QColorDialog::getColor(oldColor, this).rgba();
     if (ok && newRgba != oldRgba) {
         setValue(QColor::fromRgba(newRgba));
         emit valueChanged(m_color);
@@ -2732,7 +2736,7 @@ bool QtColorEditWidget::eventFilter(QObject * obj, QEvent * ev)
 void QtColorEditWidget::paintEvent(QPaintEvent*)
 {
     QStyleOption opt;
-    opt.init(this);
+    opt.initFrom(this);
     QPainter p(this);
     style()->drawPrimitive(QStyle::PE_Widget, &opt, &p, this);
 }
@@ -2949,7 +2953,7 @@ bool QtFontEditWidget::eventFilter(QObject * obj, QEvent * ev)
 void QtFontEditWidget::paintEvent(QPaintEvent*)
 {
     QStyleOption opt;
-    opt.init(this);
+    opt.initFrom(this);
     QPainter p(this);
     style()->drawPrimitive(QStyle::PE_Widget, &opt, &p, this);
 }
diff --git i/src/sw/noc_dev/GUICore/Qtproperty/qtpropertybrowser.h w/src/sw/noc_dev/GUICore/Qtproperty/qtpropertybrowser.h
index 1832cb8aa04..dc949c33f39 100644
--- i/src/sw/noc_dev/GUICore/Qtproperty/qtpropertybrowser.h
+++ w/src/sw/noc_dev/GUICore/Qtproperty/qtpropertybrowser.h
@@ -46,6 +46,7 @@
 #include <QKeyEvent>
 #include <QLineEdit>
 #include <QThread>
+#include <QRegExp>
 
 #if QT_VERSION >= 0x040400
 QT_BEGIN_NAMESPACE
diff --git i/src/sw/noc_dev/GUICore/Qtproperty/qtpropertybrowserutils.cpp w/src/sw/noc_dev/GUICore/Qtproperty/qtpropertybrowserutils.cpp
index 65317d1e3bf..912bbc25c1a 100644
--- i/src/sw/noc_dev/GUICore/Qtproperty/qtpropertybrowserutils.cpp
+++ w/src/sw/noc_dev/GUICore/Qtproperty/qtpropertybrowserutils.cpp
@@ -294,7 +294,7 @@ void QtBoolEdit::mousePressEvent(QMouseEvent * event)
 void QtBoolEdit::paintEvent(QPaintEvent*)
 {
     QStyleOption opt;
-    opt.init(this);
+    opt.initFrom(this);
     QPainter p(this);
     style()->drawPrimitive(QStyle::PE_Widget, &opt, &p, this);
 }
@@ -304,7 +304,7 @@ QtKeySequenceEdit::QtKeySequenceEdit(QWidget * parent) :
 {
     QHBoxLayout* layout = new QHBoxLayout(this);
     layout->addWidget(m_lineEdit);
-    layout->setMargin(0);
+    //layout->setMargin(0);
     m_lineEdit->installEventFilter(this);
     m_lineEdit->setReadOnly(true);
     m_lineEdit->setFocusProxy(this);
@@ -454,7 +454,7 @@ void QtKeySequenceEdit::keyReleaseEvent(QKeyEvent * e)
 void QtKeySequenceEdit::paintEvent(QPaintEvent*)
 {
     QStyleOption opt;
-    opt.init(this);
+    opt.initFrom(this);
     QPainter p(this);
     style()->drawPrimitive(QStyle::PE_Widget, &opt, &p, this);
 }
@@ -471,4 +471,4 @@ bool QtKeySequenceEdit::event(QEvent * e)
 
 #if QT_VERSION >= 0x040400
 QT_END_NAMESPACE
-#endif
\ No newline at end of file
+#endif
diff --git i/src/sw/noc_dev/GUICore/Qtproperty/qtpropertymanager.cpp w/src/sw/noc_dev/GUICore/Qtproperty/qtpropertymanager.cpp
index 7f619985b54..8b4f7c25617 100644
--- i/src/sw/noc_dev/GUICore/Qtproperty/qtpropertymanager.cpp
+++ w/src/sw/noc_dev/GUICore/Qtproperty/qtpropertymanager.cpp
@@ -6288,7 +6288,7 @@ void QtFontPropertyManager::setValue(QtProperty * property, const QFont & val)
         return;
 
     const QFont oldVal = it.value();
-    if (oldVal == val && oldVal.resolve() == val.resolve())
+    if (oldVal == val)  //&& oldVal.resolve() == val.resolve())
         return;
 
     it.value() = val;
diff --git i/src/sw/noc_dev/GUICore/Qtproperty/qttreepropertybrowser.cpp w/src/sw/noc_dev/GUICore/Qtproperty/qttreepropertybrowser.cpp
index 1ab780f5e38..b1f1159f83f 100644
--- i/src/sw/noc_dev/GUICore/Qtproperty/qttreepropertybrowser.cpp
+++ w/src/sw/noc_dev/GUICore/Qtproperty/qttreepropertybrowser.cpp
@@ -75,9 +75,9 @@ void QtPropertyEditorView::wheelEvent(QWheelEvent* event)
     {
         if (auto pSlider = QtTreePropertyBrowser::getAbstractFontSlider())
         {
-            if (event->delta() > 0)
+            if (event->angleDelta().y() > 0)
                 pSlider->triggerAction(QAbstractSlider::SliderSingleStepAdd);
-            else if (event->delta() < 0)
+            else if (event->angleDelta().y() < 0)
                 pSlider->triggerAction(QAbstractSlider::SliderSingleStepSub);
         }
         event->accept();
@@ -593,7 +593,7 @@ void QtTreePropertyBrowserPrivate::init(QWidget * parent)
     }
 
     QHBoxLayout* layout = new QHBoxLayout(parent);
-    layout->setMargin(0);
+    //layout->setMargin(0);
     m_treeWidget = new QtPropertyEditorView(parent);
     m_treeWidget->setEditorPrivate(this);
     m_treeWidget->setIconSize(QSize(18, 18));
@@ -720,7 +720,8 @@ void QtTreePropertyBrowserPrivate::propertyInserted(QtBrowserItem * index,
     //printf("itemInserted-%p\n", index);
 
     newItem->setFlags(newItem->flags() | Qt::ItemIsEditable);
-    m_treeWidget->setItemExpanded(newItem, true);
+    //m_treeWidget->setItemExpanded(newItem, true);
+    newItem->setExpanded(true);
 
     updateItem(newItem);
 }
@@ -763,7 +764,7 @@ void QtTreePropertyBrowserPrivate::updateItem(QTreeWidgetItem * item)
                 font.setBold(false);
             }
             item->setFont(col, font);
-            item->setTextColor(col, color);
+            //item->setTextColor(col, color);
         }
     }
 
diff --git i/src/sw/noc_dev/GUICore/Utils/qcustomplot.cpp w/src/sw/noc_dev/GUICore/Utils/qcustomplot.cpp
index b36479eea03..47a1ff28199 100644
--- i/src/sw/noc_dev/GUICore/Utils/qcustomplot.cpp
+++ w/src/sw/noc_dev/GUICore/Utils/qcustomplot.cpp
@@ -3252,7 +3252,7 @@ Qt::Alignment QCPLayoutInset::insetAlignment(int index) const
     else
     {
         qDebug() << Q_FUNC_INFO << "Invalid element index:" << index;
-        return 0;
+        return Qt::AlignLeft;
     }
 }
 
@@ -6466,8 +6466,9 @@ QByteArray QCPAxisPainterPrivate::generateLabelParameterHash() const
     result.append(QByteArray::number(tickLabelRotation));
     result.append(QByteArray::number((int)substituteExponent));
     result.append(QByteArray::number((int)numberMultiplyCross));
-    result.append(tickLabelColor.name() + QByteArray::number(tickLabelColor.alpha(), 16));
-    result.append(tickLabelFont.toString());
+    result.append(tickLabelColor.name().toStdString().c_str());
+    result.append(QByteArray::number(tickLabelColor.alpha(), 16));
+    result.append(tickLabelFont.toString().toStdString().c_str());
     return result;
 }
 
@@ -7588,7 +7589,10 @@ QCPItemAnchor::QCPItemAnchor(QCustomPlot * parentPlot, QCPAbstractItem * parentI
 QCPItemAnchor::~QCPItemAnchor()
 {
     // unregister as parent at children:
-    QList<QCPItemPosition*> currentChildren(mChildren.toList());
+    QList<QCPItemPosition*> currentChildren;
+    for (auto itr = mChildren.begin(); itr != mChildren.end(); ++itr) {
+        currentChildren.push_back(*itr);
+    }
     for (int i = 0; i < currentChildren.size(); ++i)
         currentChildren.at(i)->setParentAnchor(0); // this acts back on this anchor and child removes itself from mChildren
 }
@@ -7696,7 +7700,10 @@ QCPItemPosition::~QCPItemPosition()
     // unregister as parent at children:
     // Note: this is done in ~QCPItemAnchor again, but it's important QCPItemPosition does it itself, because only then
     //       the setParentAnchor(0) call the correct QCPItemPosition::pixelPoint function instead of QCPItemAnchor::pixelPoint
-    QList<QCPItemPosition*> currentChildren(mChildren.toList());
+    QList<QCPItemPosition*> currentChildren;
+    for (auto itr = mChildren.begin(); itr != mChildren.end(); ++itr) {
+        currentChildren.push_back(*itr);
+    }
     for (int i = 0; i < currentChildren.size(); ++i)
         currentChildren.at(i)->setParentAnchor(0); // this acts back on this anchor and child removes itself from mChildren
       // unregister as child in parent:
@@ -10523,7 +10530,7 @@ void QCustomPlot::replot(QCustomPlot::RefreshPriority refreshPriority)
     painter.begin(&mPaintBuffer);
     if (painter.isActive())
     {
-        painter.setRenderHint(QPainter::HighQualityAntialiasing); // to make Antialiasing look good if using the OpenGL graphicssystem
+        //painter.setRenderHint(QPainter::HighQualityAntialiasing); // to make Antialiasing look good if using the OpenGL graphicssystem
         if (mBackgroundBrush.style() != Qt::SolidPattern && mBackgroundBrush.style() != Qt::NoBrush)
             painter.fillRect(mViewport, mBackgroundBrush);
         draw(&painter);
@@ -10751,7 +10758,8 @@ bool QCustomPlot::savePdf(const QString & fileName, bool noCosmeticPen, int widt
     printer.printEngine()->setProperty(QPrintEngine::PPK_DocumentName, pdfTitle);
     QRect oldViewport = viewport();
     setViewport(QRect(0, 0, newWidth, newHeight));
-    printer.setPaperSize(viewport().size(), QPrinter::DevicePixel);
+    //printer.setPaperSize(viewport().size(), QPrinter::DevicePixel);
+    //printer.setPaperSize(QPrinter::A4);
     QCPPainter printpainter;
     if (printpainter.begin(&printer))
     {
@@ -11120,7 +11128,7 @@ void QCustomPlot::wheelEvent(QWheelEvent * event)
     emit mouseWheel(event);
 
     // call event of affected layout element:
-    if (QCPLayoutElement * el = layoutElementAt(event->pos()))
+    if (QCPLayoutElement* el = layoutElementAt(event->position()))
         el->wheelEvent(event);
 
     QWidget::wheelEvent(event);
@@ -12834,18 +12842,18 @@ void QCPAxisRect::wheelEvent(QWheelEvent * event)
         {
             double factor;
             //qDebug() << "delta = " << event->delta();
-            double wheelSteps = event->delta() / 120.0; // a single step delta is +/-120 usually
+            double wheelSteps = event->angleDelta().y() / 120.0;  // a single step delta is +/-120 usually
             if (mRangeZoom.testFlag(Qt::Horizontal))
             {
                 factor = pow(mRangeZoomFactorHorz, wheelSteps);
                 if (mRangeZoomHorzAxis.data())
-                    mRangeZoomHorzAxis.data()->scaleRange(factor, mRangeZoomHorzAxis.data()->pixelToCoord(event->pos().x()));
+                    mRangeZoomHorzAxis.data()->scaleRange(factor, mRangeZoomHorzAxis.data()->pixelToCoord(event->position().x()));
             }
             if (mRangeZoom.testFlag(Qt::Vertical) && !mParentPlot->interactions().testFlag(QCP::iNotZoomVertically))
             {
                 factor = pow(mRangeZoomFactorVert, wheelSteps);
                 if (mRangeZoomVertAxis.data())
-                    mRangeZoomVertAxis.data()->scaleRange(factor, mRangeZoomVertAxis.data()->pixelToCoord(event->pos().y()));
+                    mRangeZoomVertAxis.data()->scaleRange(factor, mRangeZoomVertAxis.data()->pixelToCoord(event->position().y()));
             }
             mParentPlot->replot();
         }
@@ -14277,7 +14285,7 @@ void QCPColorScale::setRangeDrag(bool enabled)
     if (enabled)
         mAxisRect.data()->setRangeDrag(QCPAxis::orientation(mType));
     else
-        mAxisRect.data()->setRangeDrag(0);
+        mAxisRect.data()->setRangeDrag(Qt::Orientation(0));
 }
 
 /*!
@@ -14297,7 +14305,7 @@ void QCPColorScale::setRangeZoom(bool enabled)
     if (enabled)
         mAxisRect.data()->setRangeZoom(QCPAxis::orientation(mType));
     else
-        mAxisRect.data()->setRangeZoom(0);
+        mAxisRect.data()->setRangeZoom(Qt::Orientation(0));
 }
 
 /*!
@@ -14799,7 +14807,7 @@ void QCPGraph::setData(const QVector<float> & key, const QVector<float> & value)
     {
         newData.key = key[i];
         newData.value = value[i];
-        mData->insertMulti(newData.key, newData);
+        mData->insert(newData.key, newData);
     }
 }
 
@@ -14827,7 +14835,7 @@ void QCPGraph::setDataValueError(const QVector<double> & key, const QVector<doub
         newData.valueErrorMinus = valueError[i];
         newData.valueErrorPlus = valueError[i];
 #endif
-        mData->insertMulti(key[i], newData);
+        mData->insert(key[i], newData);
     }
 }
 
@@ -14856,7 +14864,7 @@ void QCPGraph::setDataValueError(const QVector<double> & key, const QVector<doub
         newData.valueErrorMinus = valueErrorMinus[i];
         newData.valueErrorPlus = valueErrorPlus[i];
 #endif
-        mData->insertMulti(key[i], newData);
+        mData->insert(key[i], newData);
     }
 }
 
@@ -14884,7 +14892,7 @@ void QCPGraph::setDataKeyError(const QVector<double> & key, const QVector<double
         newData.keyErrorMinus = keyError[i];
         newData.keyErrorPlus = keyError[i];
 #endif
-        mData->insertMulti(key[i], newData);
+        mData->insert(key[i], newData);
     }
 }
 
@@ -14913,7 +14921,7 @@ void QCPGraph::setDataKeyError(const QVector<double> & key, const QVector<double
         newData.keyErrorMinus = keyErrorMinus[i];
         newData.keyErrorPlus = keyErrorPlus[i];
 #endif
-        mData->insertMulti(key[i], newData);
+        mData->insert(key[i], newData);
     }
 }
 
@@ -14944,7 +14952,7 @@ void QCPGraph::setDataBothError(const QVector<double> & key, const QVector<doubl
         newData.valueErrorMinus = valueError[i];
         newData.valueErrorPlus = valueError[i];
 #endif
-        mData->insertMulti(key[i], newData);
+        mData->insert(key[i], newData);
     }
 }
 
@@ -14977,7 +14985,7 @@ void QCPGraph::setDataBothError(const QVector<double> & key, const QVector<doubl
         newData.valueErrorMinus = valueErrorMinus[i];
         newData.valueErrorPlus = valueErrorPlus[i];
 #endif
-        mData->insertMulti(key[i], newData);
+        mData->insert(key[i], newData);
     }
 }
 
@@ -15124,7 +15132,9 @@ void QCPGraph::setAdaptiveSampling(bool enabled)
 */
 void QCPGraph::addData(const QCPDataMap & dataMap)
 {
-    mData->unite(dataMap);
+    for (auto itr = dataMap.cbegin(); itr != dataMap.cend(); ++itr) {
+        mData->insert(itr.key(), itr.value());
+    }
 }
 
 /*! \overload
@@ -15137,7 +15147,7 @@ void QCPGraph::addData(const QCPDataMap & dataMap)
 */
 void QCPGraph::addData(const QCPData & data)
 {
-    mData->insertMulti(data.key, data);
+    mData->insert(data.key, data);
 }
 
 /*! \overload
@@ -15153,7 +15163,7 @@ void QCPGraph::addData(double key, double value)
     QCPData newData;
     newData.key = key;
     newData.value = value;
-    mData->insertMulti(newData.key, newData);
+    mData->insert(newData.key, newData);
 }
 
 /*! \overload
@@ -15172,7 +15182,7 @@ void QCPGraph::addData(const QVector<double> & keys, const QVector<double> & val
     {
         newData.key = keys[i];
         newData.value = values[i];
-        mData->insertMulti(newData.key, newData);
+        mData->insert(newData.key, newData);
     }
 }
 
@@ -15355,7 +15365,7 @@ void QCPGraph::draw(QCPPainter * painter)
     // check data validity if flag set:
 #ifdef QCUSTOMPLOT_CHECK_DATA
     QCPDataMap::const_iterator it;
-    for (it = mData->constBegin(); it != mData->constEnd(); ++it)
+    for (auto it = mData->constBegin(); it != mData->constEnd(); ++it)
     {
         if (QCP::isInvalidData(it.value().key, it.value().value) ||
             QCP::isInvalidData(it.value().keyErrorPlus, it.value().keyErrorMinus) ||
@@ -17126,7 +17136,7 @@ void QCPCurve::setData(const QVector<double> & t, const QVector<double> & key, c
         newData.t = t[i];
         newData.key = key[i];
         newData.value = value[i];
-        mData->insertMulti(newData.t, newData);
+        mData->insert(newData.t, newData);
     }
 }
 
@@ -17146,7 +17156,7 @@ void QCPCurve::setData(const QVector<double> & key, const QVector<double> & valu
         newData.t = i; // no t vector given, so we assign t the index of the key/value pair
         newData.key = key[i];
         newData.value = value[i];
-        mData->insertMulti(newData.t, newData);
+        mData->insert(newData.t, newData);
     }
 }
 
@@ -17180,7 +17190,9 @@ void QCPCurve::setLineStyle(QCPCurve::LineStyle style)
 */
 void QCPCurve::addData(const QCPCurveDataMap & dataMap)
 {
-    mData->unite(dataMap);
+    for (auto itr = dataMap.cbegin(); itr != dataMap.cend(); ++itr) {
+        mData->insert(itr.key(), itr.value());
+    }
 }
 
 /*! \overload
@@ -17189,7 +17201,7 @@ void QCPCurve::addData(const QCPCurveDataMap & dataMap)
 */
 void QCPCurve::addData(const QCPCurveData & data)
 {
-    mData->insertMulti(data.t, data);
+    mData->insert(data.t, data);
 }
 
 /*! \overload
@@ -17202,7 +17214,7 @@ void QCPCurve::addData(double t, double key, double value)
     newData.t = t;
     newData.key = key;
     newData.value = value;
-    mData->insertMulti(newData.t, newData);
+    mData->insert(newData.t, newData);
 }
 
 /*! \overload
@@ -17222,7 +17234,7 @@ void QCPCurve::addData(double key, double value)
         newData.t = 0;
     newData.key = key;
     newData.value = value;
-    mData->insertMulti(newData.t, newData);
+    mData->insert(newData.t, newData);
 }
 
 /*! \overload
@@ -17240,7 +17252,7 @@ void QCPCurve::addData(const QVector<double> & ts, const QVector<double> & keys,
         newData.t = ts[i];
         newData.key = keys[i];
         newData.value = values[i];
-        mData->insertMulti(newData.t, newData);
+        mData->insert(newData.t, newData);
     }
 }
 
@@ -17848,7 +17860,7 @@ void QCPBars::setData(const QVector<double> & key, const QVector<double> & value
     {
         newData.key = key[i];
         newData.value = value[i];
-        mData->insertMulti(newData.key, newData);
+        mData->insert(newData.key, newData);
     }
 }
 
@@ -17924,7 +17936,9 @@ void QCPBars::moveAbove(QCPBars * bars)
 */
 void QCPBars::addData(const QCPBarDataMap & dataMap)
 {
-    mData->unite(dataMap);
+    for (auto itr = dataMap.cbegin(); itr != dataMap.cend(); ++itr) {
+        mData->insert(itr.key(), itr.value());
+    }
 }
 
 /*! \overload
@@ -17933,7 +17947,7 @@ void QCPBars::addData(const QCPBarDataMap & dataMap)
 */
 void QCPBars::addData(const QCPBarData & data)
 {
-    mData->insertMulti(data.key, data);
+    mData->insert(data.key, data);
 }
 
 /*! \overload
@@ -17945,7 +17959,7 @@ void QCPBars::addData(double key, double value)
     QCPBarData newData;
     newData.key = key;
     newData.value = value;
-    mData->insertMulti(newData.key, newData);
+    mData->insert(newData.key, newData);
 }
 
 /*! \overload
@@ -17961,7 +17975,7 @@ void QCPBars::addData(const QVector<double> & keys, const QVector<double> & valu
     {
         newData.key = keys[i];
         newData.value = values[i];
-        mData->insertMulti(newData.key, newData);
+        mData->insert(newData.key, newData);
     }
 }
 
diff --git i/src/sw/noc_dev/GUICore/Utils/qcustomplot.h w/src/sw/noc_dev/GUICore/Utils/qcustomplot.h
index 165e18a53e4..fe07087b01f 100644
--- i/src/sw/noc_dev/GUICore/Utils/qcustomplot.h
+++ w/src/sw/noc_dev/GUICore/Utils/qcustomplot.h
@@ -43,6 +43,7 @@
 #include <QStack>
 #include <QCache>
 #include <QMargins>
+#include <QMultiMap>
 #include <qmath.h>
 #include <limits>
 #if QT_VERSION < QT_VERSION_CHECK(5, 0, 0)
@@ -2460,9 +2461,9 @@ Q_DECLARE_TYPEINFO(QCPData, Q_MOVABLE_TYPE);
   This is the container in which QCPGraph holds its data.
   \see QCPData, QCPGraph::setData
 */
-typedef QMap<float, QCPData> QCPDataMap;
-typedef QMapIterator<float, QCPData> QCPDataMapIterator;
-typedef QMutableMapIterator<float, QCPData> QCPDataMutableMapIterator;
+typedef QMultiMap<float, QCPData> QCPDataMap;
+typedef typename QCPDataMap::const_iterator QCPDataMapIterator;
+typedef typename QCPDataMap::iterator QCPDataMutableMapIterator;
 //NETSPD_HACK_QCPDATA typedef QMap<double, QCPData> QCPDataMap;
 //NETSPD_HACK_QCPDATA typedef QMapIterator<double, QCPData> QCPDataMapIterator;
 //NETSPD_HACK_QCPDATA typedef QMutableMapIterator<double, QCPData> QCPDataMutableMapIterator;
diff --git i/src/sw/noc_dev/GUICore/genericconsole.cpp w/src/sw/noc_dev/GUICore/genericconsole.cpp
index 15f9ec474f5..d8e20b2bbf0 100644
--- i/src/sw/noc_dev/GUICore/genericconsole.cpp
+++ w/src/sw/noc_dev/GUICore/genericconsole.cpp
@@ -6,6 +6,7 @@
 #include <QTabWidget>
 #include <QApplication>
 #include <QInputDialog>
+#include <QRegularExpression>
 
 #include "style.h"
 #include "genericconsole.h"
@@ -260,9 +261,8 @@ void MainConsole::onTabIndexChanged(int index)
         this->setFocus();
     } else if (index == NS::WARN) {
         QString tmp;
-        QVectorIterator<QString> iter(warningBuff.buff);
-        while (iter.hasNext()) {
-            tmp.append(iter.next());
+        for (auto itr = warningBuff.buff.begin(); itr != warningBuff.buff.end(); ++itr) {
+            tmp.append(*itr);
         }
         emit printWarning(tmp);
         warningBuff.clear();
@@ -324,7 +324,7 @@ void MainConsole::printOutput(const QString& message)
         return;
     }
 
-    QStringList messageList = QString(message).remove("ns_").split(QRegExp("(?=\\b(ERROR:|ERROR \\[|INTERNAL_ERROR:|WARN:|WARN \\[)\\b)"), QString::SkipEmptyParts);
+    QStringList messageList = QString(message).remove("ns_").split(QRegularExpression("(?=\\b(ERROR:|ERROR \\[|INTERNAL_ERROR:|WARN:|WARN \\[)\\b)"), Qt::SkipEmptyParts);
     for (auto s : messageList) {
         if (isErrorMessage(s) || isInternalErrorMessage(s)) {
             highlightErrorMessage(s);
diff --git i/src/sw/noc_dev/GUICore/genericdialog.cpp w/src/sw/noc_dev/GUICore/genericdialog.cpp
index b40fe6d1135..5936f23d027 100644
--- i/src/sw/noc_dev/GUICore/genericdialog.cpp
+++ w/src/sw/noc_dev/GUICore/genericdialog.cpp
@@ -9,7 +9,7 @@
 #include <QHeaderView>
 #include <QScrollArea>
 #include <QApplication>
-#include <QDesktopWidget>
+//#include <QDesktopWidget>
 #include <QProcessEnvironment>
 #include <QTextEdit>
 #include <QDebug>
@@ -30,7 +30,7 @@ LicenseWarningDialog::LicenseWarningDialog(const char* msg, QWidget* parent) : Q
     connect(okButton, SIGNAL(clicked()), this, SLOT(accept()));
 
     QGridLayout* buttonLayout = new QGridLayout;
-    buttonLayout->setMargin(5);
+    //buttonLayout->setMargin(5);
     buttonLayout->addWidget(okButton, 0, 0, Qt::AlignCenter);
     QHBoxLayout* layout = new QHBoxLayout;
     layout->setAlignment(Qt::AlignCenter);
@@ -49,8 +49,8 @@ LicenseWarningDialog::LicenseWarningDialog(const char* msg, QWidget* parent) : Q
     setWindowTitle("License Warning");
     setWindowIcon(QIcon(ICON_NOC_M1));
     resize(200, 50);
-    QRect scr = QApplication::desktop()->screenGeometry();
-    move(scr.center() - rect().center());
+    //QRect scr = QApplication::desktop()->screenGeometry();
+    //move(scr.center() - rect().center());
 }
 
 AboutDialog::AboutDialog(const char* productName, const std::string& licenseTxt, const char* ack, QWidget* parent) : QDialog(parent)
@@ -71,7 +71,7 @@ AboutDialog::AboutDialog(const char* productName, const std::string& licenseTxt,
     licensePath.append("<br>");
     titleText.append(licensePath);
     title->setText(titleText);
-    QStringList license = QString::fromStdString(licenseTxt).split("\n", QString::SkipEmptyParts);
+    QStringList license = QString::fromStdString(licenseTxt).split("\n", Qt::SkipEmptyParts);
     QTableWidget* tableWidget = new QTableWidget(license.count(), 2, this);
     int row = 0;
     QFont font;
@@ -255,9 +255,9 @@ void HelpMenuTreeWidget::wheelEvent(QWheelEvent* event)
     {
         if (auto mSlider = HelpAppDialog::getAbstractFontSlider())
         {
-            if (event->delta() > 0)
+            if (event->angleDelta().y() > 0)
                 mSlider->triggerAction(QAbstractSlider::SliderSingleStepAdd);
-            else if (event->delta() < 0)
+            else if (event->angleDelta().y() < 0)
                 mSlider->triggerAction(QAbstractSlider::SliderSingleStepSub);
         }
         event->accept();
@@ -270,9 +270,9 @@ void NsTextBrowser::wheelEvent(QWheelEvent* event)
 {
     if (event->modifiers().testFlag(Qt::ControlModifier)){
         savePosRatio();
-        if (event->delta() > 0){
+        if (event->angleDelta().y() > 0) {
             zoomIn();
-        } else if (event->delta() < 0){
+        } else if (event->angleDelta().y() < 0) {
             zoomOut();
         }
         updateImage();
@@ -492,7 +492,7 @@ CloseAppDialog::CloseAppDialog(QWidget* parent) : QDialog(parent)
     QGridLayout* buttonLayout = new QGridLayout;
     buttonLayout->addWidget(okButton, 0, 0, Qt::AlignRight);
     buttonLayout->addWidget(cancelButton, 0, 1, Qt::AlignLeft);
-    buttonLayout->setMargin(5);
+    //buttonLayout->setMargin(5);
 
     QVBoxLayout* mainLayout = new QVBoxLayout;
     mainLayout->addLayout(layout);
diff --git i/src/sw/noc_dev/GUICore/genericdialog.h w/src/sw/noc_dev/GUICore/genericdialog.h
index 1a79ea266f5..605dcc3a518 100644
--- i/src/sw/noc_dev/GUICore/genericdialog.h
+++ w/src/sw/noc_dev/GUICore/genericdialog.h
@@ -19,6 +19,7 @@
 #include <QDialogButtonBox>
 #include <QCheckBox>
 #include <QImageReader>
+#include <QRegExp>
 
 #include "global.h"
 #include "NsTypes.h"
@@ -512,7 +513,7 @@ void HelpAppDialog::updateHelpContents(T* guiHelp)
         connect(filterAction, &QAction::triggered, this, [this, guiHelp]() { itemFinderButtonSlot(guiHelp); });
         filterOptions->addAction(filterAction);
     }
-    for (int idx = 0; idx < items.count(); ++idx)  if (items.at(idx)->text(0).endsWith("Commands")) { items.swap(idx, 0); break; }
+    for (int idx = 0; idx < items.count(); ++idx)  if (items.at(idx)->text(0).endsWith("Commands")) { items.swapItemsAt(idx, 0); break; }
     tree->addTopLevelItems(items);
     tree->expandAll();
 }
@@ -625,7 +626,7 @@ void HelpAppDialog::itemFinderButtonSlot(T* guiHelp)
                         auto child = addTreeChild(parentNode, lineName, lineValue,
                                                   QString::fromStdString(line.html_help));
                         if (headerMatches && !itemFinderText.isEmpty()) {
-                            child->setBackgroundColor(0, QColor("#ffdab3"));
+                            child->setBackground(0, QColor("#ffdab3"));
                         }
                     }
                 }
@@ -641,7 +642,7 @@ void HelpAppDialog::itemFinderButtonSlot(T* guiHelp)
             if (headerMatches || valueMatches) {               
                 auto child = addTreeChild(treeRoot, lineName, lineValue, QString::fromStdString(line.html_help));
                 if (headerMatches && !itemFinderText.isEmpty()) {
-                    child->setBackgroundColor(0, QColor("#ffdab3"));
+                    child->setBackground(0, QColor("#ffdab3"));
                 }
             }
         }
@@ -674,7 +675,7 @@ void HelpAppDialog::itemFinderButtonSlot(T* guiHelp)
         });
     }
 
-    for (int idx = 0; idx < items.count(); ++idx)  if (items.at(idx)->text(0).endsWith("Commands")) { items.swap(idx, 0); break; }
+    for (int idx = 0; idx < items.count(); ++idx)  if (items.at(idx)->text(0).endsWith("Commands")) { items.swapItemsAt(idx, 0); break; }
     tree->addTopLevelItems(items);
     tree->expandAll();
     setUpdatesEnabled(true);
diff --git i/src/sw/noc_dev/GUICore/propertytab.cpp w/src/sw/noc_dev/GUICore/propertytab.cpp
index 3721655d889..e8f848cba28 100644
--- i/src/sw/noc_dev/GUICore/propertytab.cpp
+++ w/src/sw/noc_dev/GUICore/propertytab.cpp
@@ -20,7 +20,7 @@ void LazyLoader::clearData()
 void LazyLoader::wheelEvent(QWheelEvent* event)
 {
     // wheel down
-    if (event->delta() < 0) if (canLoadMore()) loadMore();
+    if (event->angleDelta().y() < 0) if (canLoadMore()) loadMore();
     QtTreePropertyBrowser::wheelEvent(event);
 }
 
diff --git i/src/sw/noc_dev/GUICore/propertytab.h w/src/sw/noc_dev/GUICore/propertytab.h
index 1e7fc3596d4..046df7395a3 100644
--- i/src/sw/noc_dev/GUICore/propertytab.h
+++ w/src/sw/noc_dev/GUICore/propertytab.h
@@ -116,8 +116,12 @@ public:
             addPropertyToBrowser(defaultPropertyEditor, i.value());
             ++i;
         }
-        auto keys = cateProp.keys().toVector().toStdVector();
-        setBoldProperty(defaultPropertyEditor, keys);
+        auto keys = cateProp.keys();
+        std::vector<QString> keys_vector;
+        for (auto itr = keys.begin(); itr != keys.end(); ++itr) {
+            keys_vector.push_back(*itr);
+        }
+        setBoldProperty(defaultPropertyEditor, keys_vector);
 
         // Add Property Items
         QtProperty* propertyItem = nullptr;
diff --git i/src/sw/noc_dev/IPStudio/CMakeLists.txt w/src/sw/noc_dev/IPStudio/CMakeLists.txt
index f16b0def465..0dfbbc529df 100755
--- i/src/sw/noc_dev/IPStudio/CMakeLists.txt
+++ w/src/sw/noc_dev/IPStudio/CMakeLists.txt
@@ -4,7 +4,12 @@ set(CMAKE_AUTORCC ON)
 set(CMAKE_AUTOUIC ON)
 set(CMAKE_PREFIX_PATH /usr/intel/pkgs/libqt/5.11.2/)
 
-find_package(Qt5 COMPONENTS Core Gui Widgets PrintSupport REQUIRED)
+
+if (NS_USE_QT6)
+  find_package(Qt6 COMPONENTS Core Gui Widgets PrintSupport REQUIRED)
+else()
+  find_package(Qt5 COMPONENTS Core Gui Widgets PrintSupport REQUIRED)
+endif()
 
 # prototype/
 file(GLOB ipgui_sources RELATIVE ${CMAKE_CURRENT_SOURCE_DIR}
@@ -23,4 +28,9 @@ list(FILTER ipgui_sources EXCLUDE REGEX "^qrc_.*[.]cpp")
 # setup executable target for NS-GUI
 add_executable(IPStudio ${ipgui_sources})
 target_include_directories(IPStudio PRIVATE ${ipgui_includes} ${CMAKE_BINARY_DIR})
-target_link_libraries(IPStudio PUBLIC noc_infra noc_core noc_config_ip ipcore tclvfs Qt5::Core Qt5::Gui Qt5::Widgets Qt5::PrintSupport pthread dl GUICore pugixml)
+
+if (NS_USE_QT6)
+  target_link_libraries(IPStudio PUBLIC noc_infra noc_core noc_config_ip ipcore tclvfs Qt6::Core Qt6::Gui Qt6::Widgets Qt6::PrintSupport pthread dl GUICore)
+else()
+  target_link_libraries(IPStudio PUBLIC noc_infra noc_core noc_config_ip ipcore tclvfs Qt5::Core Qt5::Gui Qt5::Widgets Qt5::PrintSupport pthread dl GUICore)
+endif()
diff --git i/src/sw/noc_dev/Infra/include/G.h w/src/sw/noc_dev/Infra/include/G.h
index 155817de95c..6b4d0d3084f 100644
--- i/src/sw/noc_dev/Infra/include/G.h
+++ w/src/sw/noc_dev/Infra/include/G.h
@@ -1525,7 +1525,7 @@ bool is_member(const C& c, const K& k) {
         if (c.empty()) return false;
         return c.find(k) != end(c);
     } else {
-        return std::find(begin(c),end(c),k) != end(c);
+        return std::find(std::cbegin(c), std::cend(c), k) != std::cend(c);
     }
 }
 
diff --git i/src/sw/noc_dev/NocCore/src/Port.cpp w/src/sw/noc_dev/NocCore/src/Port.cpp
index 0a095eee361..9d46ed646ef 100644
--- i/src/sw/noc_dev/NocCore/src/Port.cpp
+++ w/src/sw/noc_dev/NocCore/src/Port.cpp
@@ -5345,7 +5345,7 @@ std::string DomainCrosser_Write::instance_suffix() const {
 
 string bridge_to_rssb_pin_name(const string& bn);
 ////! return true if the given pin has base name containing s (or its translation into rssb base names)
-auto has_name = [](const Pin& p, string_view s) {
+static auto has_name = [](const Pin& p, string_view s) {
     string pin_base_name = bridge_to_rssb_pin_name(p.base_name);
     auto s2              = rssb::old_router_to_rssb_name(s);
     if (!s2.empty() && pin_base_name == std::string(s2) /*p.base_name.find(std::string(s2)) != string::npos*/)
@@ -5354,7 +5354,7 @@ auto has_name = [](const Pin& p, string_view s) {
 };
 
 //! return true if the given pin has base name containing s (or its translation into rssb base names)
-auto has_name_eq = [](const Pin& p, string_view s) {
+static auto has_name_eq = [](const Pin& p, string_view s) {
     string pin_base_name = bridge_to_rssb_pin_name(p.base_name);
     auto s2              = rssb::old_router_to_rssb_name(s);
     if (!s2.empty() && pin_base_name == s2) return true;
diff --git i/src/sw/noc_dev/SCFNocStudio/CMakeLists.txt w/src/sw/noc_dev/SCFNocStudio/CMakeLists.txt
index b9f11b603b8..dc6ac051f61 100755
--- i/src/sw/noc_dev/SCFNocStudio/CMakeLists.txt
+++ w/src/sw/noc_dev/SCFNocStudio/CMakeLists.txt
@@ -4,44 +4,12 @@ set(CMAKE_AUTORCC ON)
 set(CMAKE_AUTOUIC ON)
 set(CMAKE_PREFIX_PATH /usr/intel/pkgs/libqt/5.11.2/)
 
-find_package(Qt5 COMPONENTS Core Gui Widgets PrintSupport REQUIRED)
 
-file(GLOB gc_std_mocs RELATIVE ${CMAKE_CURRENT_SOURCE_DIR}
-    ${gc_path}/Qtproperty/[^.]*_p.h ${gc_path}/Qtproperty/*/[^.]*_p.h
-    )
-QT5_WRAP_CPP(gc_std_mocs)
-
-set(gc_includes ${gc_path}/DRC/ ${gc_path}/Gui/ ${gc_path}/Modeling/ ${gc_path}/Utils/ ${gc_path}/)
-
-# Qt property headers need special MOC handling as the X.cpp files include the generated moc_X.cpp
-file(GLOB qtp_hdrs RELATIVE ${CMAKE_CURRENT_SOURCE_DIR}
-    ${gc_path}/Qtproperty/[^.]*.h ${gc_path}/Qtproperty/*/[^.]*.h
-    )
-list(FILTER qtp_hdrs EXCLUDE REGEX "_p.h$")
-
-#Rule to generate moc files with .cpp extension
-function(qt5_manual_moc)
-  qt5_get_moc_flags(_moc_incs)
-  foreach(_current_file ${ARGN})
-    get_filename_component(_abs_file ${_current_file} ABSOLUTE)
-    if(EXISTS ${_abs_file})
-      file(READ ${_abs_file} _contents)
-      get_filename_component(_basename ${_abs_file} NAME_WE)
-      string(REGEX MATCH "Q_OBJECT" _match "${_contents}")
-      if(_match)
-        set(_moc "${CMAKE_CURRENT_BINARY_DIR}/moc_${_basename}.cpp")
-        qt5_create_moc_command(${_abs_file} ${_moc} "${_moc_incs}" "" "" "")
-        set_property(SOURCE ${_abs_file} PROPERTY SKIP_AUTOMOC ON) # disable automoc on this file
-        string(REGEX REPLACE "[.]h$" ".cpp" _cpp_file ${_current_file})
-        set_property(SOURCE "${CMAKE_CURRENT_SOURCE_DIR}/${_cpp_file}" APPEND PROPERTY OBJECT_DEPENDS ${_moc})
-#        message(STATUS "Added dep from ${CMAKE_CURRENT_SOURCE_DIR}/${_cpp_file} to ${_moc}")
-      endif(_match)
-    endif(EXISTS ${_abs_file})
-  endforeach (_current_file)
-endfunction(qt5_manual_moc)
-
-#message(STATUS "qtp_hdrs=${qtp_hdrs}")
-qt5_manual_moc(${qtp_hdrs})
+if (NS_USE_QT6)
+  find_package(Qt6 COMPONENTS Core Gui Widgets PrintSupport REQUIRED)
+else()
+  find_package(Qt5 COMPONENTS Core Gui Widgets PrintSupport REQUIRED)
+endif()
 
 # don't include any moc_/qrc_ files left lying around from Makefile build
 list(FILTER gc_sources EXCLUDE REGEX "^moc_.*[.]cpp")
@@ -65,8 +33,14 @@ list(FILTER gui_sources EXCLUDE REGEX "main.cpp")
 
 add_library(Centaurus-qt SHARED ${gui_sources})
 target_include_directories(Centaurus-qt PRIVATE ${gui_includes} ${CMAKE_BINARY_DIR})
-target_link_libraries(Centaurus-qt PUBLIC noc_infra noc_core_sh
+
+if (NS_USE_QT6)
+  target_link_libraries(Centaurus-qt PUBLIC noc_infra noc_core_sh
+    tclvfs Qt6::Core Qt6::Gui Qt6::Widgets Qt6::PrintSupport pthread dl)
+else()
+  target_link_libraries(Centaurus-qt PUBLIC noc_infra noc_core_sh
     tclvfs Qt5::Core Qt5::Gui Qt5::Widgets Qt5::PrintSupport pthread dl)
+endif()
 
 # setup executable target for Centaurus w/o FlexLM
 add_executable(Centaurus-dev main.cpp dockresource.qrc)
@@ -75,8 +49,15 @@ target_link_libraries(Centaurus-dev PRIVATE noc_isabelle noc_config_scf_i Centau
 
 add_executable(Centaurus main.cpp ${gui_sources} dockresource.qrc)
 target_include_directories(Centaurus PRIVATE ${gui_includes} ${CMAKE_BINARY_DIR})
-target_link_libraries(Centaurus PRIVATE noc_isabelle_obj noc_config_scf_i noc_infra noc_core ipcore
+
+
+if (NS_USE_QT6)
+  target_link_libraries(Centaurus PRIVATE noc_isabelle_obj noc_config_scf_i noc_infra noc_core ipcore
+    tclvfs Qt6::Core Qt6::Gui Qt6::Widgets Qt6::PrintSupport pthread dl)
+else()
+  target_link_libraries(Centaurus PRIVATE noc_isabelle_obj noc_config_scf_i noc_infra noc_core ipcore
     tclvfs Qt5::Core Qt5::Gui Qt5::Widgets Qt5::PrintSupport pthread dl)
+endif()
 
 
 # setup executable target for Centaurus w/ FlexLM
diff --git i/src/sw/noc_dev/prototype/CMakeLists.txt w/src/sw/noc_dev/prototype/CMakeLists.txt
index b7f48d4069b..588e785e106 100755
--- i/src/sw/noc_dev/prototype/CMakeLists.txt
+++ w/src/sw/noc_dev/prototype/CMakeLists.txt
@@ -4,7 +4,12 @@ set(CMAKE_AUTORCC ON)
 set(CMAKE_AUTOUIC ON)
 set(CMAKE_PREFIX_PATH /usr/intel/pkgs/libqt/5.11.2/)
 
-find_package(Qt5 COMPONENTS Core Gui Widgets PrintSupport REQUIRED)
+
+if (NS_USE_QT6)
+  find_package(Qt6 COMPONENTS Core Gui Widgets PrintSupport REQUIRED)
+else()
+  find_package(Qt5 COMPONENTS Core Gui Widgets PrintSupport REQUIRED)
+endif()
 find_package(OpenMP)
 
 # prototype/
@@ -23,4 +28,10 @@ list(FILTER gui_sources EXCLUDE REGEX "^qrc_.*[.]cpp")
 # setup executable target for NS-GUI
 add_executable(NocStudio-GUI ${gui_sources})
 target_include_directories(NocStudio-GUI PRIVATE ${gui_includes} ${CMAKE_BINARY_DIR})
-target_link_libraries(NocStudio-GUI PUBLIC noc_infra noc_core noc_config_ns ipcore tclvfs Qt5::Core Qt5::Gui Qt5::Widgets Qt5::PrintSupport pthread dl GUICore OpenMP::OpenMP_CXX)
+
+
+if (NS_USE_QT6)
+  target_link_libraries(NocStudio-GUI PUBLIC noc_infra noc_core noc_config_ns ipcore tclvfs Qt6::Core Qt6::Gui Qt6::Widgets Qt6::PrintSupport pthread dl GUICore OpenMP::OpenMP_CXX)
+else()
+  target_link_libraries(NocStudio-GUI PUBLIC noc_infra noc_core noc_config_ns ipcore tclvfs Qt5::Core Qt5::Gui Qt5::Widgets Qt5::PrintSupport pthread dl GUICore OpenMP::OpenMP_CXX)
+endif()
diff --git i/src/sw/noc_dev/prototype/Gui/Customized/tableview.cpp w/src/sw/noc_dev/prototype/Gui/Customized/tableview.cpp
index de16fe01453..54f03eb2b17 100644
--- i/src/sw/noc_dev/prototype/Gui/Customized/tableview.cpp
+++ w/src/sw/noc_dev/prototype/Gui/Customized/tableview.cpp
@@ -12,6 +12,7 @@
 #include <atomic>
 #include "tableview.h"
 #include "Property.h"
+#include <algorithm>
 
 extern std::atomic<bool> gIsRunCmd;
 static std::vector<QChar> specialCharList = { ' ', '\\', ':', '@' };
@@ -93,7 +94,8 @@ void TableView::handleCopyEvent(bool all, int row)
     QAbstractItemModel * abmodel = this->model();
     QItemSelectionModel * model = this->selectionModel();
     QModelIndexList list = model->selectedIndexes();
-    qSort(list);
+    //qSort(list);
+    std::sort(list.begin(), list.end());
     if (list.count() < 1)  return;
 
     QString copied_table;
diff --git i/src/sw/noc_dev/prototype/Gui/Dialogs/CustomHighLightDialog.cpp w/src/sw/noc_dev/prototype/Gui/Dialogs/CustomHighLightDialog.cpp
index 9214156ee7f..41d9a3c18d2 100644
--- i/src/sw/noc_dev/prototype/Gui/Dialogs/CustomHighLightDialog.cpp
+++ w/src/sw/noc_dev/prototype/Gui/Dialogs/CustomHighLightDialog.cpp
@@ -17,6 +17,7 @@
 #include "NsRouter.h"
 #include "NsVC.h"
 #include "Pifce.h"
+#include <algorithm>
 
 using std::vector;
 using NetSpeed::Rtlable;
@@ -377,7 +378,7 @@ void CustomHighLightDialog::createHlMap() {
             return false;
         }
     };
-    auto make_sort = [&](QList<QString>& list) -> void { qSort(list.begin(), list.end()); };
+    auto make_sort = [&](QList<QString>& list) -> void { std::sort(list.begin(), list.end()); };
 
     auto qos_rtl_filer = [&](QList<QString>& list, Rtlable* module) -> void {
         if (!module) return;
@@ -999,7 +1000,7 @@ void CustomHighLightDialog::refreshDialog() {
             listProto.append(QString::fromStdString(proto));
         }
     }
-    qSort(listProto.begin(), listProto.end());
+    std::sort(listProto.begin(), listProto.end());
     comboBoxBridgeType->addItems(listProto);
 
     QList<QString> list_qos;
diff --git i/src/sw/noc_dev/prototype/Gui/IniTxnItemModel.cpp w/src/sw/noc_dev/prototype/Gui/IniTxnItemModel.cpp
index 8f8676cf1d2..625279fef96 100644
--- i/src/sw/noc_dev/prototype/Gui/IniTxnItemModel.cpp
+++ w/src/sw/noc_dev/prototype/Gui/IniTxnItemModel.cpp
@@ -45,7 +45,7 @@ QVariant IniTxnItemModel::headerData(int section, Qt::Orientation orientation,
 Qt::ItemFlags IniTxnItemModel::flags(const QModelIndex & index) const
 {
     if (!index.isValid())
-        return 0;
+        return Qt::ItemFlags(0);
 
     Qt::ItemFlags flags = Qt::ItemIsEnabled | Qt::ItemIsSelectable;
 
diff --git i/src/sw/noc_dev/prototype/Gui/Item/NsBridge.cpp w/src/sw/noc_dev/prototype/Gui/Item/NsBridge.cpp
index 42cfe138a09..d2f86ef67e0 100644
--- i/src/sw/noc_dev/prototype/Gui/Item/NsBridge.cpp
+++ w/src/sw/noc_dev/prototype/Gui/Item/NsBridge.cpp
@@ -740,7 +740,8 @@ void NsNormalBridge::mouseReleaseEvent(QGraphicsSceneMouseEvent * event)
             setPos(anchorPoint);
             QPointF point = pos();
             if (point != anchorPoint) {
-                translate(-point.x() + anchorPoint.x(), -point.y() + anchorPoint.y());
+                //translate(-point.x() + anchorPoint.x(), -point.y() + anchorPoint.y());
+                setTransform(QTransform::fromTranslate(-point.x()+anchorPoint.x(), -point.y()+anchorPoint.y()));
             }
             update();
             nsWorkarea->clearMovedItems();
diff --git i/src/sw/noc_dev/prototype/Gui/Item/NsBridgeDiagram.cpp w/src/sw/noc_dev/prototype/Gui/Item/NsBridgeDiagram.cpp
index 67b427718e2..f7d22ac2aa6 100644
--- i/src/sw/noc_dev/prototype/Gui/Item/NsBridgeDiagram.cpp
+++ w/src/sw/noc_dev/prototype/Gui/Item/NsBridgeDiagram.cpp
@@ -228,17 +228,17 @@ void NsRouterDiagram::showFlowData(const NetSpeed::VC* vc, bool hasAnimation, bo
         path_flow.moveTo(startL);
 
         QPointF cpoint;
-        outLine.intersect(inLine, &cpoint);
+        outLine.intersects(inLine, &cpoint);
 
         if (cpoint != QPointF(0,0) && m_routerPolyGon->contains(cpoint)) {
             path_flow.quadTo(cpoint, endL);
         } else {
             QPointF c1point;
             QPointF c2point;
-            outLine.normalVector().intersect(inLine, &c1point);
+            outLine.normalVector().intersects(inLine, &c1point);
             c1point = (c1point + startL) / 2;
 
-            inLine.normalVector().intersect(outLine, &c2point);
+            inLine.normalVector().intersects(outLine, &c2point);
             c2point = (c2point + endL) / 2;
 
             if (m_routerPolyGon->contains(c1point) && m_routerPolyGon->contains(c2point)) {
@@ -392,7 +392,7 @@ void NsRouterDiagram::drawFeedBackArrow(int dir, QLineF & line, const NetSpeed::
     const QPointF arrowLength = QPointF(29, 0);
     auto arrowHeadLine = QLineF(path.pointAtPercent(0),
         path.pointAtPercent(0) + arrowLength);
-    QMatrix matrix;
+    QTransform matrix;
     QPoint start = line.p1().toPoint();
     matrix.translate(start.x(), start.y());
     // Rotate clockwise
@@ -514,7 +514,7 @@ void NsRouterDiagramVC::paint(QPainter * painter, const QStyleOptionGraphicsItem
     Q_UNUSED(widget);
 
     // To fix problem which makes QPainter does not draw arrow tail
-    painter->setRenderHint(QPainter::Qt4CompatiblePainting);
+    //painter->setRenderHint(QPainter::Qt4CompatiblePainting);
 
     auto arrowPath = path();
     if (isSelected() || hasFocus()) {
@@ -670,7 +670,7 @@ void NsRouterDiagram::drawVcLabel(QLineF & line, QString vcName, QPainterPath &
 
     QPainterPath p;
     p.addText(xMargin, yMargin, font, vcName);
-    QMatrix matrix;
+    QTransform matrix;
     auto transPoint = end + adjustPoint;
     matrix.translate(transPoint.x(), transPoint.y());
     matrix.rotate(rotationAngle);
@@ -837,14 +837,14 @@ void NsBridgeDiagram::initData()
 
     // max width of vc name
     for (const auto& vc : allVcs) {
-        int width = fontMetrics.width(QString::fromStdString(vc->name()));
+        int width = fontMetrics.tightBoundingRect(QString::fromStdString(vc->name())).width();
         maxWidthVcName = std::max(maxWidthVcName, width);
         maxVCsPenWidth = std::max(maxVCsPenWidth, vc->get_width());
     }
 
     //Get maximum width of ifce names
     for (auto const& ifce : allIfces) {
-        int width = fontMetrics.width(QString::fromStdString(ifce->if_name()));
+        int width = fontMetrics.tightBoundingRect(QString::fromStdString(ifce->if_name())).width();
         maxWidthIfceName = std::max(maxWidthIfceName, width);
         maxIFCEPenWidth = std::max(maxIFCEPenWidth, ifce->get_if_msg_width_cached());
     }
@@ -1061,7 +1061,7 @@ void NsRouterDiagram::initData()
             font.setPixelSize(nameSize);
             QString name = QString::fromStdString(vc.name());
 
-            int width = QFontMetrics(font).width(name) + vcLength;
+            int width = QFontMetrics(font).tightBoundingRect(name).width() + vcLength;
             qreal transition = qMin(vcBodyLine * id.as_int() + spacing, rp.size);
             QPoint startL, endL;
             NetSpeed::Port_id rp_id = (out) ?
@@ -1439,7 +1439,7 @@ void NsRouterPolyGon::drawTextRouterDiagram(QPainter & painter, NetSpeed::Port_i
             (rp.size / 2 - rp.north_port_length) *
             diagramTextFactor));
         painter.rotate(-45);
-        painter.drawText(painter.fontMetrics().width("North West (J)") *
+        painter.drawText(painter.fontMetrics().tightBoundingRect("North West (J)").width() *
             -diagramTextFactor, yOffsetMargin,
             QString("North West (J)"));
         painter.restore();
@@ -1453,7 +1453,7 @@ void NsRouterPolyGon::drawTextRouterDiagram(QPainter & painter, NetSpeed::Port_i
             (rp.size / 2 - rp.north_port_length) *
             diagramTextFactor));
         painter.rotate(45);
-        painter.drawText(painter.fontMetrics().width("North East (K)") *
+        painter.drawText(painter.fontMetrics().tightBoundingRect("North East (K)").width() *
             -diagramTextFactor, yOffsetMargin,
             QString("North East (K)"));
         painter.restore();
@@ -1468,7 +1468,7 @@ void NsRouterPolyGon::drawTextRouterDiagram(QPainter & painter, NetSpeed::Port_i
             (rp.size / 2 - rp.north_port_length) *
             diagramTextFactor));
         painter.rotate(-45);
-        painter.drawText(painter.fontMetrics().width("South East (H)") *
+        painter.drawText(painter.fontMetrics().tightBoundingRect("South East (H)").width() *
             -diagramTextFactor, -tolerance,
             QString("South East (H)"));
         painter.restore();
@@ -1483,7 +1483,7 @@ void NsRouterPolyGon::drawTextRouterDiagram(QPainter & painter, NetSpeed::Port_i
             (rp.size / 2 - rp.north_port_length) *
             diagramTextFactor));
         painter.rotate(45);
-        painter.drawText(painter.fontMetrics().width("South West (I)") *
+        painter.drawText(painter.fontMetrics().tightBoundingRect("South West (I)").width() *
             -diagramTextFactor, -tolerance,
             QString("South West (I)"));
         painter.restore();
@@ -1724,8 +1724,8 @@ void NsRegbusRing::initData() {
     QString masterName = QString::fromStdString(rb->name());
 
     // Calculate width and heigth for pop up box
-    const int labelWidth          = metric.width(label);
-    const int ringMasterNameWidth = normalMetric.width(masterName);
+    const int labelWidth          = metric.tightBoundingRect(label).width();
+    const int ringMasterNameWidth = normalMetric.tightBoundingRect(masterName).width();
 
     int maxScaleFactor = 0;
     vector<int> ringPos;
@@ -1734,7 +1734,7 @@ void NsRegbusRing::initData() {
         ringPos.push_back(maxAllRingWidth);
         int maxRingWidth = 0;
         for (auto const& it : ring_slaves.second){
-            maxRingWidth = std::max(ringTextMetric.width(QString::fromStdString(it.second->name())) + ringNameMargin, maxRingWidth);
+            maxRingWidth = std::max(ringTextMetric.tightBoundingRect(QString::fromStdString(it.second->name())).width() + ringNameMargin, maxRingWidth);
         }
         maxAllRingWidth += maxRingWidth + ringSpacing;
         maxScaleFactor = std::max(isize(ring_slaves.second), maxScaleFactor);
@@ -2200,7 +2200,7 @@ void NsMeshSplitDiagram::generateChildrenItems()
         ingressForwardArrowPath = drawNormalArrow(line);
         //Ingress text
         ingressPath.addText(0, 0, font, ingressText);
-        QMatrix iMatrix;
+        QTransform iMatrix;
         auto transPoint = line.p2() + QPointF(-fontSize / 2, fontSize);
         iMatrix.translate(transPoint.x(), transPoint.y());
         iMatrix.rotate(90);
@@ -2214,7 +2214,7 @@ void NsMeshSplitDiagram::generateChildrenItems()
         arrowOutPath = drawNormalArrow(line);
         arrowOutTt = QString::fromStdString(router->get_tx_port(NetSpeed::NORTH_PORT)->get_adj_rx_port()->get_vc(NetSpeed::VC_id(0)).get_tooltip());
         //Egress text
-        QMatrix eMatrix;
+        QTransform eMatrix;
         egressPath.addText(0, 0, font, egressText);
         transPoint = QPointF(arrowOutStartPoint.x() - fontSize / 2,
             routerRecBox.center().y());
@@ -2254,7 +2254,7 @@ void NsMeshSplitDiagram::generateChildrenItems()
         ingressForwardArrowPath = drawNormalArrow(line);
         //Ingress text
         ingressPath.addText(0, 0, font, ingressText);
-        QMatrix iMatrix;
+        QTransform iMatrix;
         auto transPoint = line.p2() + QPointF(fontSize / 2, -fontSize);
         iMatrix.translate(transPoint.x(), transPoint.y());
         iMatrix.rotate(-90);
@@ -2263,7 +2263,7 @@ void NsMeshSplitDiagram::generateChildrenItems()
         linePath.moveTo(arrowInStartPoint);
         linePath.quadTo(controlPoint, arrowOutStartPoint);
         //Egress text
-        QMatrix eMatrix;
+        QTransform eMatrix;
         egressPath.addText(0, 0, font, egressText);
         transPoint = QPointF(arrowOutStartPoint.x() + fontSize / 2,
             routerRecBox.center().y());
@@ -2296,7 +2296,7 @@ void NsMeshSplitDiagram::generateChildrenItems()
         ingressForwardArrowPath = drawNormalArrow(line);
         //Ingress text
         ingressPath.addText(0, 0, font, ingressText);
-        QMatrix iMatrix;
+        QTransform iMatrix;
         auto transPoint = line.p2() + QPointF(-fontSize, fontSize / 2)
             - QPointF(ingressPath.boundingRect().width(), 0);
         iMatrix.translate(transPoint.x(), transPoint.y());
@@ -2310,7 +2310,7 @@ void NsMeshSplitDiagram::generateChildrenItems()
         linePath.moveTo(arrowInStartPoint);
         linePath.quadTo(controlPoint, arrowOutStartPoint);
         //Egress text
-        QMatrix eMatrix;
+        QTransform eMatrix;
         egressPath.addText(0, 0, font, egressText);
         transPoint = QPointF(routerRecBox.center().x() -
             fontSize - egressPath.boundingRect().width(),
@@ -2348,12 +2348,12 @@ void NsMeshSplitDiagram::generateChildrenItems()
         ingressForwardArrowPath = drawNormalArrow(line);
         //Ingress text
         ingressPath.addText(0, 0, font, ingressText);
-        QMatrix iMatrix;
+        QTransform iMatrix;
         auto transPoint = line.p2() + QPointF(fontSize, -fontSize / 2);
         iMatrix.translate(transPoint.x(), transPoint.y());
         ingressPath = iMatrix.map(ingressPath);
         //Egress text
-        QMatrix eMatrix;
+        QTransform eMatrix;
         egressPath.addText(0, 0, font, egressText);
         transPoint = QPointF(routerRecBox.center().x() -
             fontSize,
@@ -2456,7 +2456,7 @@ void NsLinkDiagram::initData()
         if (!vc || !vc->is_active()) continue;
         vcs.push_back(vc);
         maxVCsPenWidth = std::max(maxVCsPenWidth, vc->get_width());
-        const int txtSize = metric.width(QString::fromStdString(vc->name()));
+        const int txtSize = metric.tightBoundingRect(QString::fromStdString(vc->name())).width();
         maxVCNameLength = std::max(maxVCNameLength, txtSize);
     }
 
@@ -2899,24 +2899,24 @@ void NsRSSBDiagram::initRssbBridgeData()
     const int wMargin = 30;
     const int hMargin = 40;
     const int headerTextSize = 15;
-    const int maxItemsEachSideRSSB  = std::max(isize(allVCRssb2Br), allVcPhys2Rssb.size());
+    const int maxItemsEachSideRSSB  = std::max(isize(allVCRssb2Br), (int)allVcPhys2Rssb.size());
     auto fontMetrics = QFontMetrics(QFont());
 
     // max width of ifce names
     for (auto const& ifce : allIfces) {
-        int width = fontMetrics.width(QString::fromStdString(ifce->if_name()));
+        int width = fontMetrics.tightBoundingRect(QString::fromStdString(ifce->if_name())).width();
         maxWidthIfceName = std::max(maxWidthIfceName, width);
         maxIFCEPenWidth = std::max(maxIFCEPenWidth, ifce->get_if_msg_width_cached());
     }
 
     // max width of VcPhys name
     for (const auto& vc : allVcPhys2Rssb) {
-        int width      = fontMetrics.width(QString::fromStdString(vc->name()));
+        int width      = fontMetrics.tightBoundingRect(QString::fromStdString(vc->name())).width();
         maxWidthVcName = std::max(maxWidthVcName, width);
         maxVcPhys2RssbPenWidth = std::max(maxVcPhys2RssbPenWidth, vc->get_width());
     }
     for (const auto& vc : allVcPhys2Br) {
-        int width      = fontMetrics.width(QString::fromStdString(vc->name()));
+        int width      = fontMetrics.tightBoundingRect(QString::fromStdString(vc->name())).width();
         maxWidthVcName = std::max(maxWidthVcName, width);
         maxVcPhys2BrPenWidth = std::max(maxVcPhys2BrPenWidth, vc->get_width());
     }
@@ -3284,18 +3284,18 @@ QPainterPath NsRSSBDiagram::getPathFlow(QLineF inLine, QLineF outLine)
     path_flow.moveTo(startL);
 
     QPointF cpoint;
-    outLine.intersect(inLine, &cpoint);
+    outLine.intersects(inLine, &cpoint);
 
     if (cpoint != QPointF(0,0)) {
         path_flow.quadTo(cpoint, endL);
     } else {
         QPointF c1point;
         QPointF c2point;
-        outLine.normalVector().intersect(inLine, &c1point);
+        outLine.normalVector().intersects(inLine, &c1point);
         c1point = (c1point + startL) / 2;
 
         QLineF inlineReverse = QLineF(inLine.p2(), inLine.p1());
-        inlineReverse.normalVector().intersect(outLine, &c2point);
+        inlineReverse.normalVector().intersects(outLine, &c2point);
         c2point = (c2point + endL) / 2;
 
         path_flow.cubicTo(c1point, c2point, endL);
diff --git i/src/sw/noc_dev/prototype/Gui/Item/NsHost.cpp w/src/sw/noc_dev/prototype/Gui/Item/NsHost.cpp
index 7ce25a6bfff..7811497434f 100644
--- i/src/sw/noc_dev/prototype/Gui/Item/NsHost.cpp
+++ w/src/sw/noc_dev/prototype/Gui/Item/NsHost.cpp
@@ -864,7 +864,7 @@ NsStorageComponents::NsStorageComponents(const std::vector<std::unique_ptr<NetSp
     const qreal cosmeticMargin = (BRIDGE_SIZE - metric.height()) / 2;
     for(auto const& component : components){
         auto name = QString::fromStdString(component->full_name());
-        auto const nameWidth = metric.width(name);
+        auto const nameWidth = metric.tightBoundingRect(name).width();
         if(nameWidth >= maxWidth) {
             name = metric.elidedText(name, Qt::ElideRight, maxWidth);
             textWidth = maxWidth;
diff --git i/src/sw/noc_dev/prototype/Gui/Item/NsMesh.cpp w/src/sw/noc_dev/prototype/Gui/Item/NsMesh.cpp
index 4f37a0d3f5a..7f2061c5609 100644
--- i/src/sw/noc_dev/prototype/Gui/Item/NsMesh.cpp
+++ w/src/sw/noc_dev/prototype/Gui/Item/NsMesh.cpp
@@ -25,6 +25,7 @@
 #include <QStaticText>
 #include <QApplication>
 #include <QGraphicsSceneContextMenuEvent>
+#include <QTransform>
 
  //extern const int NODE_SIZE;
 using namespace NetSpeed;
@@ -440,15 +441,15 @@ void NsMesh::drawRowColId() {
         for (NetSpeed::Col_id i : grid->get_cols()) {
             QPainterPath path;
             QString val = QString::number(grid->get_col_width_um(i));
-            path.addText(QPointF(i * NODE_SIZE + NODE_SIZE / 2 - metric.width(val) / 2, layerEndPoint.ry() + metric.height()), physFont, val);
+            path.addText(QPointF(i * NODE_SIZE + NODE_SIZE / 2 - (metric.tightBoundingRect(val).width())/ 2, layerEndPoint.ry() + metric.height()), physFont, val);
             new NsCellDimension(path, i, true, this);
         }
         for (NetSpeed::Row_id i : grid->get_rows()) {
             QPainterPath path;
             QString val = QString::number(grid->get_row_height_um(i));
             path.addText(QPointF(), physFont, val);
-            QMatrix matrix;
-            matrix.translate(layerEndPoint.x() + 5, i * NODE_SIZE + NODE_SIZE / 2 - metric.width(val) / 2);
+            QTransform matrix;
+            matrix.translate(layerEndPoint.x() + 5, i * NODE_SIZE + NODE_SIZE / 2 - (metric.tightBoundingRect(val).width()) / 2);
             matrix.rotate(90);
             path = matrix.map(path);
             new NsCellDimension(path, i, false, this);
@@ -649,7 +650,7 @@ void NsMesh::displayLayerInfo()
     }
 
     // get width of text
-    auto layerNameWidth = layerNameFontMetric.width(layerNameLeftSide);
+    auto layerNameWidth = layerNameFontMetric.tightBoundingRect(layerNameLeftSide).width();
 
     // get rectangle to draw text
     QPoint bufferStartPoint, bufferEndPoint, currentTextStopPoint;
@@ -680,7 +681,7 @@ void NsMesh::displayLayerInfo()
         auto textStartPoint = currentTextStopPoint.rx() + textMargin;
         layerNamePath.addText(QPointF(textStartPoint, rectText.y() + layerNameFontMetric.height()),
                               layerNameFontTop, textMode);
-        currentTextStopPoint.setX(textStartPoint + layerNameFontMetric.width(textMode));
+        currentTextStopPoint.setX(textStartPoint + layerNameFontMetric.tightBoundingRect(textMode).width());
     }
     layerInfoLeft->setPath(layerNamePath);
     layerInfoLeft->setBrush(QColor(127, 127, 127));
@@ -696,12 +697,12 @@ void NsMesh::displayLayerInfo()
         if (maxColumn > 1 && maxRow >= 1) {
             linkBufferFont.setPixelSize(BUFFER_TEXT_SIZE);
             const int currentStop = currentTextStopPoint.rx();
-            while ((currentStop + textMargin + QFontMetricsF(linkBufferFont).width(linkBufferCost)) > bufferEndPoint.rx()) {
+            while ((currentStop + textMargin + QFontMetricsF(linkBufferFont).tightBoundingRect(linkBufferCost).width()) > bufferEndPoint.rx()) {
                 auto pixel = linkBufferFont.pixelSize() - 1;
                 if (pixel < 1) break;
                 linkBufferFont.setPixelSize(pixel);
             }
-            auto const linkBufferCostWidth = QFontMetricsF(linkBufferFont).width(linkBufferCost);
+            auto const linkBufferCostWidth = QFontMetricsF(linkBufferFont).tightBoundingRect(linkBufferCost).width();
             if ((currentTextStopPoint.rx() + textMargin) > bufferEndPoint.rx())
                 costPath.addText(currentTextStopPoint.rx() + linkBufferCostWidth + textMargin, rectText.y() + textMargin +
                     QFontMetricsF(linkBufferFont).height(), linkBufferFont, linkBufferCost);
@@ -887,10 +888,10 @@ NsSectorName::NsSectorName(const std::string& sName, const Node_id &tLeft, int w
         textFont.setPixelSize(qMax(15, qMin(30, (h * NODE_SIZE) / 10)));
         QFontMetricsF metric(textFont);
         auto sectorH = sector.height();
-        if(metric.width(sectorName) > sectorH) sectorName = metric.elidedText(sectorName, Qt::ElideRight, sectorH);
-        auto textWidth = metric.width(sectorName);
+        if(metric.tightBoundingRect(sectorName).width() > sectorH) sectorName = metric.elidedText(sectorName, Qt::ElideRight, sectorH);
+        auto textWidth = metric.tightBoundingRect(sectorName).width();
         namePath.addText(QPointF(0, 0), textFont, sectorName);
-        QMatrix matrix;
+        QTransform matrix;
         auto point = (angle < 0) ? startPoint - (sectorH - textWidth)/2 : startPoint + (sectorH - textWidth)/2;
         matrix.translate(distance, point);
         matrix.rotate(angle);
diff --git i/src/sw/noc_dev/prototype/Gui/Item/NsMultipleBridges.cpp w/src/sw/noc_dev/prototype/Gui/Item/NsMultipleBridges.cpp
index 62d4bc0d31f..52d816f74e7 100644
--- i/src/sw/noc_dev/prototype/Gui/Item/NsMultipleBridges.cpp
+++ w/src/sw/noc_dev/prototype/Gui/Item/NsMultipleBridges.cpp
@@ -58,7 +58,7 @@ NsMultipleBridges::NsMultipleBridges(const QPoint pos, const QVector<NetSpeed::B
     QPoint start(STRECH_MUL_BRI / 2, HEADER_MUL_BRI_HIG + STRECH_MUL_BRI / 2 + DIAGRAM_NAME_SIZE);
     for (auto const& br : br_temp) {
         QString name = QString::fromStdString(br->name());
-        int w = fm.width(name) + BRIDGE_SIZE + 2;
+        int w = fm.tightBoundingRect(name).width() + BRIDGE_SIZE + 2;
         width = width > w ? width : w;
         /* Create Bridge item */
         QGraphicsRectItem *bridge = nullptr;
@@ -423,7 +423,7 @@ NsSocViewMultipleBridges::NsSocViewMultipleBridges(const std::vector<NetSpeed::B
     for (auto br : bridges)
     {
         QString name = QString::fromStdString(br->name());
-        int w = fm.width(name) + bridge_edge_len * SOC_VIEW_UNIT + 2;
+        int w = fm.tightBoundingRect(name).width() + bridge_edge_len * SOC_VIEW_UNIT + 2;
         width = width > w ? width : w;
         /* Create Bridge item */
         NsSocViewBridge* bridge = new NsSocViewBridge(br);
diff --git i/src/sw/noc_dev/prototype/Gui/Item/NsSocViewBoundingBox.cpp w/src/sw/noc_dev/prototype/Gui/Item/NsSocViewBoundingBox.cpp
index 084de73d966..060c61b5712 100644
--- i/src/sw/noc_dev/prototype/Gui/Item/NsSocViewBoundingBox.cpp
+++ w/src/sw/noc_dev/prototype/Gui/Item/NsSocViewBoundingBox.cpp
@@ -143,7 +143,7 @@ void NsSocViewBoundingBox::sceneScaleChanged(double newScale)
     auto r = rect();
     int maxDimension = std::max(r.width(), r.height());
     // measure size of text to get closest that ticks can be packed
-    const auto labelWidth = QFontMetrics(scaleFont).width(QString("00%1").arg(maxDimension));
+    const auto labelWidth = QFontMetrics(scaleFont).tightBoundingRect(QString("00%1").arg(maxDimension)).width();
 
     // target step size is widest dimension of label at new scale (zoom level)
     const auto targetStep = roundUpToMultiple((labelWidth + 20) / newScale,
diff --git i/src/sw/noc_dev/prototype/Gui/Item/NsSocViewHost.cpp w/src/sw/noc_dev/prototype/Gui/Item/NsSocViewHost.cpp
index d06f3ebc8fe..cd2363ea379 100644
--- i/src/sw/noc_dev/prototype/Gui/Item/NsSocViewHost.cpp
+++ w/src/sw/noc_dev/prototype/Gui/Item/NsSocViewHost.cpp
@@ -131,7 +131,7 @@ void NsSocViewHost::mouseReleaseEvent(QGraphicsSceneMouseEvent * event)
     if (false && event->modifiers().testFlag(Qt::ControlModifier)) {
         QString clone_name;
         bool ok;
-        Qt::WindowFlags flags = 0;
+        Qt::WindowFlags flags = Qt::Widget;
         auto mw = socView->getMainWindow();
         if (mw && !mw->isHiddenDesignReview())
             flags |= Qt::WindowStaysOnTopHint;
diff --git i/src/sw/noc_dev/prototype/Gui/Item/NsVC.cpp w/src/sw/noc_dev/prototype/Gui/Item/NsVC.cpp
index 66bc9d8bdb3..6ea5b9ef9a1 100644
--- i/src/sw/noc_dev/prototype/Gui/Item/NsVC.cpp
+++ w/src/sw/noc_dev/prototype/Gui/Item/NsVC.cpp
@@ -770,16 +770,16 @@ NsILDCLAbel::NsILDCLAbel(const QString text, const QLineF& line, NsVC *parent) :
     f.setPixelSize(fontSize);
     setFont(f);
     QFontMetricsF fm(f);
-    const qreal txtWidth = fm.width(text);
+    const qreal txtWidth = fm.tightBoundingRect(text).width();
     const int limit = line.length() / 2;
     if(txtWidth > limit) setPlainText(fm.elidedText(text, Qt::ElideRight, limit));
     const int angle = line.angle();
     QPointF p;
     if (isVertical(angle)) { //Is vertical
         setTransform(QTransform().rotate(270), true);
-        p = line.center() + QPointF(-boundingRect().height(), fm.width(toPlainText()) / 2);
+        p = line.center() + QPointF(-boundingRect().height(), fm.tightBoundingRect(toPlainText()).width() / 2);
     }
-    else p = line.center() - QPointF(fm.width(toPlainText()) / 2, 2);
+    else p = line.center() - QPointF(fm.tightBoundingRect(toPlainText()).width() / 2, 2);
     setPos(p);
 }
 
diff --git i/src/sw/noc_dev/prototype/Gui/LintDashboard.cpp w/src/sw/noc_dev/prototype/Gui/LintDashboard.cpp
index 9e800b19fe7..3ee682756c7 100644
--- i/src/sw/noc_dev/prototype/Gui/LintDashboard.cpp
+++ w/src/sw/noc_dev/prototype/Gui/LintDashboard.cpp
@@ -192,7 +192,7 @@ void LintDashboard::reFocusAct() {
     if (!isParent) {
         int childIndex = std::get<2>(row4ReFocus);
         table->expand(parentModel);
-        scrollAndFocus(parentModel.child(childIndex, 0));
+        scrollAndFocus(parentModel.model()->index(childIndex, 0));
     }
     else scrollAndFocus(parentModel);
 }
@@ -306,7 +306,7 @@ void LintDashboard::upgradeIdSlot()
     /* Apply upgrade_warning cmd for selected warning items */
     if (mainWindow && mainWindow->getConsole())
     {
-        QString cmd = QString(CMD_UPGRADE_WARNING) + tr(" -id %1").arg(QStringList(ids.toList()).join(" "));
+        QString cmd = QString(CMD_UPGRADE_WARNING) + tr(" -id %1").arg(QStringList(ids.begin(), ids.end()).join(" "));
         mainWindow->getConsole()->applyCmd(cmd);
     }
 }
@@ -326,7 +326,7 @@ void LintDashboard::downgradeIdSlot()
     /* Apply upgrade_warning cmd for selected warning items */
     if (mainWindow && mainWindow->getConsole())
     {
-        QString cmd = QString(CMD_RESET_UPGRADE_WARNING) + tr(" -id %1").arg(QStringList(ids.toList()).join(" "));
+        QString cmd = QString(CMD_RESET_UPGRADE_WARNING) + tr(" -id %1").arg(QStringList(ids.begin(), ids.end()).join(" "));
         mainWindow->getConsole()->applyCmd(cmd);
     }
 }
@@ -342,7 +342,7 @@ void LintDashboard::waiveItemSlot()
     foreach(QModelIndex row, idIndexes)
     {
         QString msg = row.data().toString();
-        QStringList list = msg.split(QRegExp("[\r\n]"));
+        QStringList list = msg.split(QRegularExpression("[\r\n]"));
         auto txt = list.at(0);
         strings.insert(QString("add_%1r -string {%2}")
             .arg(prefix.toLower())
@@ -353,7 +353,7 @@ void LintDashboard::waiveItemSlot()
     if (!mainWindow) return;
     auto console = mainWindow->getConsole();
     if (console) {
-        QString cmds = QStringList(strings.toList()).join("\n");
+        QString cmds = QStringList(strings.begin(), strings.end()).join("\n");
         console->applyCmd(cmds);
     }
 }
@@ -374,7 +374,7 @@ void LintDashboard::waiveIdSlot()
     /* Apply waive/unwaive cmd for IDs */
     if (mainWindow && mainWindow->getConsole())
     {
-        QString cmd = tr("add_%1r -id ").arg(prefix.toLower()) + QStringList(ids.toList()).join(" ");
+        QString cmd = tr("add_%1r -id ").arg(prefix.toLower()) + QStringList(ids.begin(), ids.end()).join(" ");
         mainWindow->getConsole()->applyCmd(cmd);
     }
 }
@@ -386,7 +386,7 @@ void LintDashboard::waiveCategorySlot() {
 
     // apply waive/unwaive cmd for categories
     if (mainWindow && mainWindow->getConsole()) {
-        QString cmd = tr("add_%1r -cat ").arg(prefix.toLower()) + QStringList(categories.toList()).join(" ");
+        QString cmd = tr("add_%1r -cat ").arg(prefix.toLower()) + QStringList(categories.begin(), categories.end()).join(" ");
         mainWindow->getConsole()->applyCmd(cmd);
     }
 }
@@ -451,7 +451,7 @@ void LintDashboard::waiveButtonClicked()
                 if (row.column() == LINT_MES)
                 {
                     QString msg = row.data().toString();
-                    QStringList list = msg.split(QRegExp("[\r\n]"));
+                    QStringList list = msg.split(QRegularExpression("[\r\n]"));
                     auto txt = list.at(0);
                     if (listCmd.contains(txt)) continue;
                     string << (" {" + txt + "}");
@@ -760,7 +760,7 @@ TitleBar::TitleBar(bool addClose, QWidget * parent)
 
     QHBoxLayout* layout = new QHBoxLayout(this);
     layout->setSpacing(0);
-    layout->setMargin(0);
+    //layout->setMargin(0);
     layout->setContentsMargins(0, 0, 0, 0);
     layout->addWidget(floatBt, 0, Qt::AlignRight);
     if (addClose)
@@ -922,9 +922,9 @@ void NSTreeView::wheelEvent(QWheelEvent* event)
 {
     if (event->modifiers().testFlag(Qt::ControlModifier)) {
         if (auto zoomSlider = ResizeDialog::getResizeDialog()->getPSlider()) {
-            if (event->delta() > 0)
+            if (event->angleDelta().y() > 0)
                 zoomSlider->triggerAction(QAbstractSlider::SliderSingleStepAdd);
-            else if (event->delta() < 0)
+            else if (event->angleDelta().y() < 0)
                 zoomSlider->triggerAction(QAbstractSlider::SliderSingleStepSub);
         }
         event->accept();
diff --git i/src/sw/noc_dev/prototype/Gui/NsSortFilterProxyModel.cpp w/src/sw/noc_dev/prototype/Gui/NsSortFilterProxyModel.cpp
index a964057b842..344dc297220 100644
--- i/src/sw/noc_dev/prototype/Gui/NsSortFilterProxyModel.cpp
+++ w/src/sw/noc_dev/prototype/Gui/NsSortFilterProxyModel.cpp
@@ -1,4 +1,5 @@
 #include <QtWidgets>
+#include <QRegularExpression>
 
 #include "NsSortFilterProxyModel.h"
 #include "LintDashboard.h"
@@ -153,7 +154,7 @@ bool NsSortFilterProxyModel::filterAcceptsRow(int sourceRow,
             {
                 QModelIndex sourceIndex = sourceModel()->index(sourceRow, column, sourceParent);
                 QString key = sourceIndex.data().toString();
-                if (key.contains(iter.value()))
+                if (key.contains(QRegularExpression(iter.value().pattern())))
                 {
                     result = true;
                     break;
@@ -165,7 +166,7 @@ bool NsSortFilterProxyModel::filterAcceptsRow(int sourceRow,
         {
             QModelIndex index = sourceModel()->index(sourceRow, col, sourceParent);
             if (!index.isValid() //! the column may not exist
-                || !index.data().toString().contains(iter.value()))
+                || !index.data().toString().contains(QRegularExpression(iter.value().pattern())))
             {
                 result = false;
                 break;
diff --git i/src/sw/noc_dev/prototype/Gui/NsSortFilterProxyModel.h w/src/sw/noc_dev/prototype/Gui/NsSortFilterProxyModel.h
index 9060b3e836e..6f31bfe7cd2 100644
--- i/src/sw/noc_dev/prototype/Gui/NsSortFilterProxyModel.h
+++ w/src/sw/noc_dev/prototype/Gui/NsSortFilterProxyModel.h
@@ -2,6 +2,7 @@
 #define NSSORTFILTERPROXYMODEL_H
 
 #include <QSortFilterProxyModel>
+#include <QRegExp>
 
 enum Sim_Header { SIM_CB, SIM_KEY, SIM_SCALE };
 class NsSortFilterProxyModel : public QSortFilterProxyModel
diff --git i/src/sw/noc_dev/prototype/Gui/View/NsChipView.cpp w/src/sw/noc_dev/prototype/Gui/View/NsChipView.cpp
index 234a8d441d7..e56606353b9 100644
--- i/src/sw/noc_dev/prototype/Gui/View/NsChipView.cpp
+++ w/src/sw/noc_dev/prototype/Gui/View/NsChipView.cpp
@@ -53,11 +53,11 @@ void NsChipView::mouseReleaseEvent(QMouseEvent *event)
 void NsChipView::wheelEvent(QWheelEvent* event) {
     if (event->modifiers().testFlag(Qt::ControlModifier)) {
         if (getFocusPoint() == QPointF()) {
-            setFocusPoint(mapToScene(event->posF().x(), event->posF().y()));
+            setFocusPoint(mapToScene(event->position().x(), event->position().y()));
         }
-        if (event->delta() > 0) {
+        if (event->angleDelta().y() > 0) {
             mainWindow->zoomInAct();
-        } else if (event->delta() < 0) {
+        } else if (event->angleDelta().y() < 0) {
             mainWindow->zoomOutAct();
         }
     } else {
diff --git i/src/sw/noc_dev/prototype/Gui/View/NsChopview.cpp w/src/sw/noc_dev/prototype/Gui/View/NsChopview.cpp
index b5cd44e1ea9..c4d596258e9 100644
--- i/src/sw/noc_dev/prototype/Gui/View/NsChopview.cpp
+++ w/src/sw/noc_dev/prototype/Gui/View/NsChopview.cpp
@@ -131,7 +131,7 @@ NsChopView::~NsChopView(){}
 void NsChopView::mouseReleaseEvent(QMouseEvent *event)
 {
     if (event->button() & Qt::LeftButton) {
-        selectedPoint = event->posF();
+        selectedPoint = event->position();
     } else {
         selectedPoint = QPointF();
     }
@@ -151,10 +151,10 @@ void NsChopView::wheelEvent(QWheelEvent *event)
 {
     if(event->modifiers().testFlag(Qt::ControlModifier)){
         if (getFocusPoint() == QPointF()) {
-            setFocusPoint(mapToScene(event->posF().x(), event->posF().y()));
+            setFocusPoint(mapToScene(event->position().x(), event->position().y()));
         }
-        if(event->delta() > 0) zoom(ZOOM_STEP); // zoom in
-        if(event->delta() < 0) zoom(-ZOOM_STEP); // zoon out
+        if (event->angleDelta().y() > 0) zoom(ZOOM_STEP);  // zoom in
+        if (event->angleDelta().y() < 0) zoom(-ZOOM_STEP);  // zoon out
     }else NsView::wheelEvent(event);
 }
 
@@ -183,7 +183,7 @@ NsSector::NsSector(Sector* s, NetSpeed::Grid* grid, QGraphicsItem *parent, NsWor
      name(s->name), topLeft(s->topLeftSector), bottomRight(s->bottomRightSector), cols(s->chopCols), rows(s->chopRows), offset(s->offset),
      grid(grid), m_nsWorkArea(nsWorkArea)
 {
-    setAcceptsHoverEvents(true);
+    setAcceptHoverEvents(true);
     setZValue(NsChopView::SECTOR_ORDER);
     auto cmp = [](auto& c1, auto& c2){ return c1.id < c2.id; };
     std::sort(cols.begin(), cols.end(), cmp);
@@ -220,7 +220,7 @@ void NsSector::drawTransmissionQueue() {
     QFont font;
     font.setPixelSize(15);
     QFontMetricsF metric(font);
-    const qreal start = metric.width(text);
+    const qreal start = metric.tightBoundingRect(text).width();
     for(int shiftVal = 0; shiftVal <= delta.first; ++shiftVal){
         auto nodeShift = topLeft.shift(NetSpeed::Col_delta(shiftVal), NetSpeed::Row_delta(0));
         auto col = nodeShift.x();
@@ -233,7 +233,7 @@ void NsSector::drawTransmissionQueue() {
         path.moveTo(start, 0);
         path.lineTo(QPointF(length, 0));
         QPointF startPoint = QPointF(x, 0);
-        QMatrix matrix;
+        QTransform matrix;
         matrix.translate(startPoint.rx(), startPoint.ry());
         matrix.rotate(90);
         auto item = new NsTransmissionQueue(matrix.map(path), this);
@@ -315,9 +315,9 @@ void NsSector::drawNodeTexts(QPainterPath& path, const NetSpeed::Node_id& node,
     const QFontMetricsF metric(font);
     const double leftMargin = NODE_SIZE/2;
     const double fontHeight = metric.height();
-    if(metric.width(text) > leftMargin) text = metric.elidedText(text, Qt::ElideRight, leftMargin);
-    if(metric.width(stopIdText) > leftMargin) stopIdText = metric.elidedText(stopIdText, Qt::ElideRight, leftMargin);
-    if(metric.width(stopIdText) > leftMargin) instanceSuffix = metric.elidedText(instanceSuffix, Qt::ElideRight, leftMargin);
+    if(metric.tightBoundingRect(text).width() > leftMargin) text = metric.elidedText(text, Qt::ElideRight, leftMargin);
+    if(metric.tightBoundingRect(stopIdText).width() > leftMargin) stopIdText = metric.elidedText(stopIdText, Qt::ElideRight, leftMargin);
+    if(metric.tightBoundingRect(stopIdText).width() > leftMargin) instanceSuffix = metric.elidedText(instanceSuffix, Qt::ElideRight, leftMargin);
     const NetSpeed::orient orient = (router) ? router->get_orientation() : NetSpeed::orient::MX;
     switch (orient) {
     case NetSpeed::orient::R0: //Router at bottom left
@@ -347,7 +347,7 @@ void NsSector::updateSectorNameFontSize()
     QFontMetricsF metric(textFont);
     const qreal marginSectorNameX = 40;
     QString sName = name;
-    auto textWidth = metric.width(sName);
+    auto textWidth = metric.tightBoundingRect(sName).width();
     qreal sectorDisplayHeight = (bottomRight.y() - topLeft.y() - rows.size() + 1) * NODE_SIZE;
     qreal posY = 0;
     if(textWidth >= sectorDisplayHeight){
@@ -355,7 +355,7 @@ void NsSector::updateSectorNameFontSize()
         posY = sectorDisplayHeight;
     } else posY = (sectorDisplayHeight + textWidth)/2;
     qreal posX =  (-offset * NODE_SIZE) - marginSectorNameX;
-    QMatrix matrix;
+    QTransform matrix;
     matrix.translate(posX, posY);
     matrix.rotate(-90);
     QPainterPath path;
@@ -539,7 +539,7 @@ NetSpeed::Node_id NsSector::parentPosToNodeId(QPointF& p)
 
 NsChopViewBoundingBox::NsChopViewBoundingBox(NetSpeed::Grid *grid, Topo* topo, NsWorkArea* nsWorkArea) : grid(grid), topo(topo), nsWorkArea(nsWorkArea)
 {
-    setAcceptsHoverEvents(true);
+    setAcceptHoverEvents(true);
     initData();
     if (!chopName) {
         QFont font;
@@ -653,7 +653,7 @@ void NsChopViewBoundingBox::createVirtualRouterAndVC(){
             NsTurnBackVcItem* turnBackVcItem = new NsTurnBackVcItem(vc, pos, true);
             turnBackVcItem->setZValue(NsChopView::LINK_ORDER);
             auto path = sector->lineUTurn(pos, vc);
-            QMatrix matrix;
+            QTransform matrix;
             auto pos = sector->pos();
             matrix.translate(pos.rx(), pos.ry());
             turnBackVcItem->setPath(matrix.map(path));
diff --git i/src/sw/noc_dev/prototype/Gui/View/NsNocViewScene.cpp w/src/sw/noc_dev/prototype/Gui/View/NsNocViewScene.cpp
index 907a80baea2..f5d777a2a36 100644
--- i/src/sw/noc_dev/prototype/Gui/View/NsNocViewScene.cpp
+++ w/src/sw/noc_dev/prototype/Gui/View/NsNocViewScene.cpp
@@ -15,6 +15,7 @@
 #include <QGraphicsSceneMouseEvent>
 #include <QRubberBand>
 #include <QInputDialog>
+#include <QTransform>
 #include "myconsole.h"
 #include "mainwindow.h"
 #include "NsNocViewScene.h"
@@ -999,7 +1000,7 @@ void NsNocViewScene::mousePressEvent(QGraphicsSceneMouseEvent* event)
             {
                 auto propPanel = mw->getPropertyPanel();
                 /* Get first point of agent */
-                auto clicked_item = itemAt(event->scenePos());
+                auto clicked_item = itemAt(event->scenePos(), QTransform());
                 if (!clicked_item) break;
                 if ((!instrumentMediator) && (clicked_item->type() == HOST)) {
                     auto nsHost = dynamic_cast<NsHost*>(clicked_item);
@@ -1824,7 +1825,7 @@ bool NsNocViewScene::applyCmd(QPointF scenePos)
 
     // for design view mode
     bool ok;
-    Qt::WindowFlags flags = 0;
+    Qt::WindowFlags flags = Qt::Widget;
     auto mw = nsWorkArea->getMainWindow();
     if (mw && !mw->isHiddenDesignReview()) flags |= Qt::WindowStaysOnTopHint;
 
diff --git i/src/sw/noc_dev/prototype/Gui/View/NsScene.cpp w/src/sw/noc_dev/prototype/Gui/View/NsScene.cpp
index 143d9966cf1..0b79332b721 100644
--- i/src/sw/noc_dev/prototype/Gui/View/NsScene.cpp
+++ w/src/sw/noc_dev/prototype/Gui/View/NsScene.cpp
@@ -191,7 +191,7 @@ inline QPainterPath constructPowerPatternPath(const QRectF& parentRect, float si
     path.lineTo(parentRect.bottomLeft() + QPointF(patternWidth, -patternHeight));
     path.closeSubpath();
     if (mapToRight) {
-        QMatrix matrix;
+        QTransform matrix;
         matrix.translate(parentRect.width() - patternWidth, 0);
         path = matrix.map(path);
     }
@@ -1991,7 +1991,7 @@ QImage NsMeshViewScene::makeColorLegend()
         auto calculateWorkPage = [&](auto& domains) {
             maxHeight += headerMargin.y() + metric.height();
             for (auto const& it : domains) {
-                maxWidth = std::max(maxWidth, rectangleSize.width() + textPadding + metric.width(QString::fromStdString(it.first)));
+                maxWidth = std::max(maxWidth, rectangleSize.width() + textPadding + metric.tightBoundingRect(QString::fromStdString(it.first)).width());
                 maxHeight += (metric.height() + legendMargin.y());
             }
         };
@@ -2192,7 +2192,7 @@ QImage NsMeshViewScene::makeRTLColorLegend()
         painter.drawRect(p.x(), p.y(), 20, 20);
         QString elidedName = metric.elidedText(name, Qt::ElideRight, 950);
         painter.drawText(p.x() + 30, p.y() + 20, elidedName);
-        int textWidth = metric.width(elidedName);
+        int textWidth = metric.tightBoundingRect(elidedName).width();
         p += QPoint(0, 30);
         maxWidth = std::max(textWidth + 30, maxWidth);
     };
@@ -2474,7 +2474,7 @@ void NsMeshViewScene::mousePressEvent(QGraphicsSceneMouseEvent * event)
         QList<QGraphicsItem*> itemList = items(event->scenePos());
         vector<QGraphicsItem*> to_be_deleted;
         for (auto& item : items()) {
-            if ((item->type() == RING_VISUALIZATION) && (!NetSpeed::is_member(itemList.toStdList(), item)) &&
+            if ((item->type() == RING_VISUALIZATION) && (!NetSpeed::is_member(QList<QGraphicsItem*>(itemList.begin(), itemList.end()), item)) &&
                 (!NsRouterDiagramManager::manager(this)->contains(item))) {
                 to_be_deleted.push_back(item);
             }                
diff --git i/src/sw/noc_dev/prototype/Gui/View/NsSocView.cpp w/src/sw/noc_dev/prototype/Gui/View/NsSocView.cpp
index 57de6e6f53c..321fcc23ec7 100644
--- i/src/sw/noc_dev/prototype/Gui/View/NsSocView.cpp
+++ w/src/sw/noc_dev/prototype/Gui/View/NsSocView.cpp
@@ -193,10 +193,10 @@ void NsSocView::wheelEvent(QWheelEvent * event)
 {
     if (event->modifiers().testFlag(Qt::ControlModifier))
     {
-        if (event->delta() > 0) {
+        if (event->angleDelta().y() > 0) {
             mainWindow->zoomInAct();
         }
-        else if (event->delta() < 0) {
+        else if (event->angleDelta().y() < 0) {
             mainWindow->zoomOutAct();
         }
     }
diff --git i/src/sw/noc_dev/prototype/Gui/View/NsSocViewScene.cpp w/src/sw/noc_dev/prototype/Gui/View/NsSocViewScene.cpp
index 23e5466a901..f01ca45958d 100644
--- i/src/sw/noc_dev/prototype/Gui/View/NsSocViewScene.cpp
+++ w/src/sw/noc_dev/prototype/Gui/View/NsSocViewScene.cpp
@@ -1,3 +1,4 @@
+#include <algorithm>
 #include "NsSocViewScene.h"
 #include "../Item/NsSocViewVirBridge.h"
 #include "../Item/NsSocViewHost.h"
@@ -373,7 +374,7 @@ void NsSocViewScene::createHosts()
             {
                 return b1.first.size() > b2.first.size();
             };
-            qSort(overlapRectList.begin(), overlapRectList.end(), sortSizeList);
+            std::sort(overlapRectList.begin(), overlapRectList.end(), sortSizeList);
             //Store background only item's ID number
             QList<int> backGroundOnly;
             //Counting current overlap item
@@ -456,7 +457,7 @@ void NsSocViewScene::createRouterLinks()
 void NsSocViewScene::createPlusItem(QVector<NetSpeed::Bridge*> overlappedbridgeList, NetSpeed::rect_t overlappedRect, int zPos, QGraphicsItem *hostItem)
 {
     auto* plus = new NsSocViewPlusItem(overlappedRect, overlappedbridgeList);
-    auto* mulBris = new NsSocViewMultipleBridges(overlappedbridgeList.toStdVector());
+    auto* mulBris = new NsSocViewMultipleBridges(std::vector<NetSpeed::Bridge *>(overlappedbridgeList.begin(), overlappedbridgeList.end()));
 
     plus->setChecked(false);
     plus->setZValue(zPos);
@@ -776,9 +777,9 @@ void NsSocViewScene::createRegionItems()
     regionColors.clear();
     if (!console || !console->get_container().get_grid()) return;
     int color = 1;
-    auto usedColors = regionColors.values().toSet();
+    auto usedColors = QSet<int>(regionColors.values().begin(), regionColors.values().end());
     //store region map
-    QMap<std::string, NsSocViewRegion*> regionMap;
+    QMultiMap<std::string, NsSocViewRegion*> regionMap;
     for (const auto& region : console->get_container().get_grid()->get_phy_regions()) {
         /* Set region color */
         if (regionColors.contains(region.name))
@@ -794,7 +795,7 @@ void NsSocViewScene::createRegionItems()
         for (auto rect : region.phy_poss) {
             auto regionItem = new NsSocViewRegion(QString::fromStdString(region.name), region, rect, rgbToColor(NetSpeed::color_choices[color].second));
             //store region Item for handling overlap
-            regionMap.insertMulti(region.name, regionItem);
+            regionMap.insert(region.name, regionItem);
             if (NetSpeed::Grid::region_view_show == NetSpeed::RegionShowForeground || imageSaving)
                 regionItem->setZValue(SocViewZValue::RegionForegroundZ);
             else if (NetSpeed::Grid::region_view_show == NetSpeed::RegionShowBackground)
@@ -836,7 +837,7 @@ void NsSocViewScene::createRegionItems()
                 }
             }
             addItem(regionItem);
-            regions.insertMulti(it->data(), regionItem);
+            regions.insert(it->data(), regionItem);
         }
     }
     /* Re-use colors of deleted regions */
@@ -1078,7 +1079,7 @@ bool NsSocViewScene::applyCmd(QPointF positionF)
             NetSpeed::clamp(&position.rx(), 0, grid->get_soc_phy_size_x() - phy_width);
             NetSpeed::clamp(&position.ry(), 0, grid->get_soc_phy_size_y() - phy_height);
             bool ok;
-            Qt::WindowFlags flags = 0;
+            Qt::WindowFlags flags = Qt::Widget;
             auto mw = socView->getMainWindow();
             if (mw && !mw->isHiddenDesignReview())
                 flags |= Qt::WindowStaysOnTopHint;
diff --git i/src/sw/noc_dev/prototype/Gui/View/NsSocViewScene.h w/src/sw/noc_dev/prototype/Gui/View/NsSocViewScene.h
index 8ca0f89f73d..9afa95b1e2a 100644
--- i/src/sw/noc_dev/prototype/Gui/View/NsSocViewScene.h
+++ w/src/sw/noc_dev/prototype/Gui/View/NsSocViewScene.h
@@ -186,7 +186,7 @@ private:
     const float heigthLimit;
 
     QMap<std::string, int> regionColors;
-    QMap<std::string, QGraphicsItem*> regions;
+    QMultiMap<std::string, QGraphicsItem*> regions;
     QMap<NetSpeed::Host_idx, QGraphicsItem*> hostItems;
     QMap<NetSpeed::Bridge_id, NsSocViewBridge*> briItems;
     QMap<NetSpeed::Node_id, QGraphicsItem*> routerItems;
diff --git i/src/sw/noc_dev/prototype/Gui/View/NsView.cpp w/src/sw/noc_dev/prototype/Gui/View/NsView.cpp
index 86eded394bc..e8a82af665b 100644
--- i/src/sw/noc_dev/prototype/Gui/View/NsView.cpp
+++ w/src/sw/noc_dev/prototype/Gui/View/NsView.cpp
@@ -57,7 +57,7 @@ double NsView::getZoomFactor() const
 void NsView::setZoomFactor(qreal value)
 {
     setAutoFit(false);
-    resetMatrix();
+    resetTransform();
     scale(value, value);
 }
 
@@ -99,7 +99,7 @@ QRect NsView::visibleRect() const
 
 void NsView::sceneScaleChanged(double newScale)
 {
-    resetMatrix();
+    resetTransform();
     scale(newScale, newScale);
 }
 
diff --git i/src/sw/noc_dev/prototype/Gui/View/NsWorkArea.cpp w/src/sw/noc_dev/prototype/Gui/View/NsWorkArea.cpp
index a7d4e23cd99..795f2309fe7 100644
--- i/src/sw/noc_dev/prototype/Gui/View/NsWorkArea.cpp
+++ w/src/sw/noc_dev/prototype/Gui/View/NsWorkArea.cpp
@@ -336,12 +336,12 @@ void NsWorkArea::wheelEvent(QWheelEvent * event)
     if (event->modifiers().testFlag(Qt::ControlModifier))
     {
         if (getFocusPoint() == QPointF()) {
-            setFocusPoint(mapToScene(event->posF().x(), event->posF().y()));
+            setFocusPoint(mapToScene(event->position().x(), event->position().y()));
         }
-        if (event->delta() > 0) {
+        if (event->angleDelta().y() > 0) {
             mainWindow->zoomInAct();
         }
-        else if (event->delta() < 0) {
+        else if (event->angleDelta().y() < 0) {
             mainWindow->zoomOutAct();
         }
     }
diff --git i/src/sw/noc_dev/prototype/Gui/dialogs.cpp w/src/sw/noc_dev/prototype/Gui/dialogs.cpp
index 9ac6d40fb9f..4750ced0479 100644
--- i/src/sw/noc_dev/prototype/Gui/dialogs.cpp
+++ w/src/sw/noc_dev/prototype/Gui/dialogs.cpp
@@ -24,6 +24,8 @@
 #include "FlowList.h"
 #include "qtcolorpushbutton.h"
 #include "Customized/tableview.h"
+#include <QRegularExpression>
+#include <QGuiApplication>
 
 namespace NetSpeed {
     DECLARE_FLAG_T(max_layers, int)
@@ -507,7 +509,7 @@ TuneLinkDialog::TuneLinkDialog(QWidget * parent) : QDialog(parent)
     QGridLayout* buttonLayout = new QGridLayout;
     buttonLayout->addWidget(okButton, 0, 0, Qt::AlignRight);
     buttonLayout->addWidget(cancelButton, 0, 1, Qt::AlignLeft);
-    buttonLayout->setMargin(5);
+    //buttonLayout->setMargin(5);
 
     QVBoxLayout* mainLayout = new QVBoxLayout;
     mainLayout->addLayout(layout);
@@ -654,7 +656,7 @@ ContDialog::ContDialog(QWidget * parent) : QDialog(parent)
     QGridLayout * buttonLayout = new QGridLayout;
     buttonLayout->addWidget(okButton, 0, 0, Qt::AlignRight);
     buttonLayout->addWidget(cancelButton, 0, 1, Qt::AlignLeft);
-    buttonLayout->setMargin(5);
+    //buttonLayout->setMargin(5);
 
     QVBoxLayout * mainLayout = new QVBoxLayout;
     mainLayout->addLayout(layout);
@@ -729,7 +731,7 @@ QString SizeDialog::getValues()
     if (strSizeDialog.toInt() == 0) {   //If the conversion fails.
         return QString("0");
     }
-    return (strSizeDialog.remove(QRegExp("^[0]*")));
+    return (strSizeDialog.remove(QRegularExpression("^[0]*")));
 }
 
 CreateTraceFilesDialog::CreateTraceFilesDialog(QWidget * parent) : QDialog(parent)
@@ -1083,7 +1085,7 @@ AnalyzeLinksDialog::AnalyzeLinksDialog(QWidget * parent, const NetSpeed::Grid *
     QGridLayout* buttonLayout = new QGridLayout;
     buttonLayout->addWidget(okButton, 0, 0, Qt::AlignRight);
     buttonLayout->addWidget(cancelButton, 0, 1, Qt::AlignLeft);
-    buttonLayout->setMargin(5);
+    //buttonLayout->setMargin(5);
 
     QVBoxLayout* mainLayout = new QVBoxLayout;
     mainLayout->addLayout(layout);
@@ -1136,7 +1138,7 @@ ConfirmCreateHostDialog::ConfirmCreateHostDialog(QString mes, QWidget * parent)
     QGridLayout* buttonLayout = new QGridLayout;
     buttonLayout->addWidget(okButton, 0, 0, Qt::AlignRight);
     buttonLayout->addWidget(cancelButton, 0, 1, Qt::AlignLeft);
-    buttonLayout->setMargin(5);
+    //buttonLayout->setMargin(5);
 
     QVBoxLayout* mainLayout = new QVBoxLayout;
     mainLayout->addLayout(layout);
@@ -1214,7 +1216,7 @@ CreateHostFailureDialog::CreateHostFailureDialog(QString mes, QWidget * parent)
     QGridLayout* buttonLayout = new QGridLayout;
     buttonLayout->addWidget(okButton, 0, 0, Qt::AlignRight);
     buttonLayout->addWidget(cancelButton, 0, 1, Qt::AlignLeft);
-    buttonLayout->setMargin(5);
+    //buttonLayout->setMargin(5);
 
     QVBoxLayout* mainLayout = new QVBoxLayout;
     mainLayout->addLayout(layout);
@@ -1284,7 +1286,7 @@ AddHostWarningAppDialog::AddHostWarningAppDialog(QString text, bool enableCheckB
     {
         QScrollArea* m_scrollArea = new QScrollArea;
         QLabel* content_msg = new QLabel(text);
-        content_msg->setMargin(5);
+        //content_msg->setMargin(5);
 
         m_scrollArea->setWidget(content_msg);
         m_scrollArea->setSizePolicy(QSizePolicy::Expanding, QSizePolicy::Expanding);
@@ -1468,7 +1470,7 @@ AliasDialog::AliasDialog(QWidget * parent) : QDialog(parent)
     QGridLayout * buttonLayout = new QGridLayout;
     buttonLayout->addWidget(okButton, 0, 0, Qt::AlignRight);
     buttonLayout->addWidget(cancelButton, 0, 1, Qt::AlignLeft);
-    buttonLayout->setMargin(5);
+    //buttonLayout->setMargin(5);
 
     QVBoxLayout * mainLayout = new QVBoxLayout;
     mainLayout->addLayout(layout);
@@ -1627,7 +1629,8 @@ DesignReviewDialog::DesignReviewDialog(const QString& scripts, INIConsole * con)
     setWindowIcon(QIcon(ICON_NOC_M1));
     setWindowFlags(getFlagsDialog());
     //move(QApplication::desktop()->screenGeometry().right(),QApplication::desktop()->screenGeometry().top());
-    move(QApplication::desktop()->screenGeometry().right() - size().width() - 10, QApplication::desktop()->screenGeometry().top() + 10);
+    //move(QApplication::desktop()->screenGeometry().right() - size().width() - 10, QApplication::desktop()->screenGeometry().top() + 10);
+    move(QGuiApplication::primaryScreen()->geometry().right() - size().width() - 10, QGuiApplication::primaryScreen()->geometry().top() + 10);
 
     /* Add scripts into treeView (and check valid also) */
     QStringList arr = scripts.split("\n");
@@ -1865,14 +1868,14 @@ void DesignReviewDialog::resetHighLight()
     for (int i = 0; i < treeViewWidget->topLevelItemCount(); i++)
     {
         QTreeWidgetItem* treeItem = treeViewWidget->topLevelItem(i);
-        if (treeItem->columnCount() > 0) treeItem->setTextColor(0, QColor("black"));
+        //if (treeItem->columnCount() > 0) treeItem->setTextColor(0, QColor("black"));
         treeItem->setDisabled(false);
         for (int j = 0; j < treeItem->childCount(); j++)
         {
             QTreeWidgetItem* child = treeItem->child(j);
             if (child->columnCount() < 2) continue;
             child->setDisabled(false);
-            child->setTextColor(0, QColor("black"));
+            //child->setTextColor(0, QColor("black"));
         }
     }
     currentItem = treeViewWidget->topLevelItem(0);
@@ -1915,17 +1918,17 @@ void DesignReviewDialog::hightLightItem(int idx)
             if (child->columnCount() < 2) continue;
             if (!found && idx > 0)
             {
-                child->setTextColor(0, QColor("gray"));
+                //child->setTextColor(0, QColor("gray"));
                 child->setSelected(false);
                 if (child->parent())
                 {
-                    child->parent()->setTextColor(0, QColor("gray"));
+                    //child->parent()->setTextColor(0, QColor("gray"));
                     child->parent()->setSelected(false);
                 }
             }
             else
             {
-                child->setTextColor(0, QColor("black"));
+                //child->setTextColor(0, QColor("black"));
                 child->setDisabled(false);
                 if (child->parent())
                 {
@@ -1936,12 +1939,12 @@ void DesignReviewDialog::hightLightItem(int idx)
             if (child->text(1).toInt() == (idx1))
             {
                 found = true;
-                child->setTextColor(0, QColor("blue"));
+                //child->setTextColor(0, QColor("blue"));
                 emit currentItemChanged(child);
                 child->setDisabled(false);
                 if (child->parent())
                 {
-                    child->parent()->setTextColor(0, QColor("blue"));
+                    //child->parent()->setTextColor(0, QColor("blue"));
                     child->parent()->setDisabled(false);
                 }
                 treeViewWidget->scrollToItem(child);
@@ -1975,7 +1978,7 @@ QTreeWidgetItem* DesignReviewDialog::addTreeChild(QTreeWidgetItem * parent, QStr
     QTreeWidgetItem* treeItem = new QTreeWidgetItem();
     treeItem->setText(0, name);
     treeItem->setText(1, QString::number(index));
-    treeItem->setTextColor(0, QColor("black"));
+    //treeItem->setTextColor(0, QColor("black"));
     parent->addChild(treeItem);
     return treeItem;
 }
@@ -2049,7 +2052,7 @@ AliasMsg::AliasMsg(QWidget * parent) : QDialog(parent)
 
     QGridLayout* buttonLayout = new QGridLayout;
     buttonLayout->addWidget(okButton, 0, 0, Qt::AlignCenter);
-    buttonLayout->setMargin(5);
+    //buttonLayout->setMargin(5);
 
     QVBoxLayout* mainLayout = new QVBoxLayout;
     mainLayout->addLayout(layout);
@@ -2100,8 +2103,8 @@ AddRangeToAXISlavesDialog::AddRangeToAXISlavesDialog(NetSpeed::Grid * grid, QWid
     //set some default values here
     for (int i = 0; i < slaveNames.size(); i++)
         slaveName->addItem(slaveNames.at(i));
-    connect(slaveName, SIGNAL(currentIndexChanged(QString)), this, SLOT(slaveNameChanged(QString)));
-    emit slaveName->currentIndexChanged(slaveName->currentText());
+    connect(slaveName, SIGNAL(currentTextChanged(QString)), this, SLOT(slaveNameChanged(QString)));
+    emit slaveName->currentTextChanged(slaveName->currentText());
 
     rangeName->setText("");
     address->setText("");
@@ -2134,7 +2137,7 @@ AddRangeToAXISlavesDialog::AddRangeToAXISlavesDialog(NetSpeed::Grid * grid, QWid
     layout->addWidget(new QLabel("Region ID: "), row, 0, Qt::AlignRight);
     layout->addWidget(region, row++, 1);
 
-    rangeType->addItems(QString("enabled, disabled, readonly, writeonly").split(", ", QString::SkipEmptyParts));
+    rangeType->addItems(QString("enabled, disabled, readonly, writeonly").split(", ", Qt::SkipEmptyParts));
     layout->addWidget(rangeType, row++, 1);
     priv->setToolTip("priv");
     layout->addWidget(new QLabel(tr("%1: ").arg(priv->toolTip())), row, 0, Qt::AlignRight);
@@ -2311,7 +2314,7 @@ AddRangeToAXIMasterDialog::AddRangeToAXIMasterDialog(QWidget * parent, QStringLi
     layout->addWidget(new QLabel("Master Name: "), row, 0, Qt::AlignRight);
     layout->addWidget(masterName, row++, 1);
 
-    rangeType->addItems(QString("enabled, disabled, readonly, writeonly").split(", ", QString::SkipEmptyParts));
+    rangeType->addItems(QString("enabled, disabled, readonly, writeonly").split(", ", Qt::SkipEmptyParts));
     layout->addWidget(rangeType, row++, 1);
     priv->setToolTip("priv");
     layout->addWidget(new QLabel(tr("%1: ").arg(priv->toolTip())), row, 0, Qt::AlignRight);
@@ -2523,7 +2526,7 @@ RangeNameItemControl::RangeNameItemControl(QWidget * parent, QStringList rangeNa
     layout->addWidget(rangeNamesComboBox);
     layout->addWidget(removeButton);
     setLayout(layout);
-    layout->setMargin(0);
+    //layout->setMargin(0);
     connect(removeButton, SIGNAL(clicked()), this, SLOT(selfRemove()));
 }
 
@@ -4155,7 +4158,7 @@ StepDialog::StepDialog(QWidget * parent) : QDialog(parent)
     stepCountInput = new QLineEdit;
     //set some default values here
     stepCountInput->setText((step_count != -1) ? QString::number(step_count) : "1");
-    stepCountInput->setValidator(new QRegExpValidator(QRegExp("[0-9]*")));
+    stepCountInput->setValidator(new QRegularExpressionValidator(QRegularExpression("[0-9]*")));
     okButton = new QPushButton("OK");
     cancelButton = new QPushButton("Cancel");
 
@@ -4166,7 +4169,7 @@ StepDialog::StepDialog(QWidget * parent) : QDialog(parent)
     QGridLayout * buttonLayout = new QGridLayout;
     buttonLayout->addWidget(okButton, 0, 0, Qt::AlignRight);
     buttonLayout->addWidget(cancelButton, 0, 1, Qt::AlignLeft);
-    buttonLayout->setMargin(5);
+    //buttonLayout->setMargin(5);
 
     mainLayout->addLayout(layout);
     mainLayout->addLayout(buttonLayout);
@@ -4254,7 +4257,8 @@ LicenseWarningSoonDialog::LicenseWarningSoonDialog(QWidget * parent) : QDialog(p
         auto parentRect = parent->geometry();
         move(parentRect.center() - rect().center());
     } else {
-        QRect screenGeometry = QApplication::desktop()->screenGeometry();
+        //QRect screenGeometry = QApplication::desktop()->screenGeometry();
+        QRect screenGeometry = QGuiApplication::primaryScreen()->geometry();
         int x = (screenGeometry.width() - width()) / 2;
         int y = (screenGeometry.height() - height()) / 2;
         move(x, y);
@@ -4277,7 +4281,7 @@ FinalizeDialog::FinalizeDialog(QWidget * parent) : QDialog(parent)
     QGridLayout* buttonLayout = new QGridLayout;
     buttonLayout->addWidget(okButton, 0, 0, Qt::AlignLeft);
     buttonLayout->addWidget(cancelButton, 0, 1, Qt::AlignRight);
-    buttonLayout->setMargin(5);
+    //buttonLayout->setMargin(5);
 
     QVBoxLayout* mainLayout = new QVBoxLayout;
     mainLayout->addLayout(layout);
@@ -4558,7 +4562,7 @@ OpenRecentlyDialog::OpenRecentlyDialog(QWidget* parent) : QDialog(parent)
     QWidget* sourceWidget = new QWidget(this);
     QLabel* lbl = new QLabel("Enter Minutes: ", this);
     timeSrc = new QLineEdit(this);
-    timeSrc->setValidator(new QRegExpValidator(QRegExp("[0-9]*"), timeSrc));
+    timeSrc->setValidator(new QRegularExpressionValidator(QRegularExpression("[0-9]*"), timeSrc));
     timeSrc->setMaxLength(6);
     timeLayout->addWidget(lbl);
     timeLayout->addWidget(timeSrc);
@@ -4615,7 +4619,7 @@ AddSpineGatingRegionDialog::AddSpineGatingRegionDialog(QWidget* parent) {
         }
     }
 
-    QRegExpValidator* validNodes = new QRegExpValidator(QRegExp("^ *\\d+( *, *\\d+)*"), nodes);
+    QRegularExpressionValidator* validNodes = new QRegularExpressionValidator(QRegularExpression("^ *\\d+( *, *\\d+)*"), nodes);
     nodes->setPlaceholderText("Ex: 0, 15, 32, 64");
     nodes->setValidator(validNodes);
 
@@ -4726,7 +4730,7 @@ void AddSpineGatingRegionDialog::validateAndExecute() {
     if (!nodes->text().isEmpty()) {
         /* Format the node field */
         QString str = nodes->text().replace(',', ' ');
-        QStringList opts = str.split(u' ', QString::SkipEmptyParts);
+        QStringList opts = str.split(u' ', Qt::SkipEmptyParts);
         QString text     = opts.join(' ');
         if (opts.size() > 0) {
             nodes->setText(text);
@@ -4749,7 +4753,7 @@ void AddSpineGatingRegionDialog::validateAndExecute() {
     /* Format the element field */
     if (!elements->text().isEmpty()) {
         QString str = elements->text().replace(',', ' ');
-        QStringList opts = str.split(u' ', QString::SkipEmptyParts);
+        QStringList opts = str.split(u' ', Qt::SkipEmptyParts);
         QString text     = opts.join(' ');
         elements->setText("{" + text + "}");
     }
diff --git i/src/sw/noc_dev/prototype/Gui/mainwindow.cpp w/src/sw/noc_dev/prototype/Gui/mainwindow.cpp
index b86cb5bc858..0d20ce29920 100644
--- i/src/sw/noc_dev/prototype/Gui/mainwindow.cpp
+++ w/src/sw/noc_dev/prototype/Gui/mainwindow.cpp
@@ -189,7 +189,7 @@ MainWindow::MainWindow(NetSpeed::NocConsole* c, QWidget* parent)
     progressBar->setMinimum(0);
     progressBar->setMaximum(100);
     setPrgrBarValue(100);
-    consoleDock = new NSDockWidget(OBJ_CONSOLE_MAINWINDOW, this, 0);
+    consoleDock = new NSDockWidget(OBJ_CONSOLE_MAINWINDOW, this, Qt::Widget);
     connect(consoleDock, SIGNAL(consoleFinderSignal()), this, SLOT(consoleFinderFocus()));
     connect(consoleDock, &NSDockWidget::topLevelChanged, this, [this]() { console->setFocus(); });
     consoleDock->setObjectName(OBJ_CONSOLE_DOCK);
@@ -262,7 +262,7 @@ MainWindow::MainWindow(NetSpeed::NocConsole* c, QWidget* parent)
     containerLayout->addWidget(floatingButt);
     containerLayout->addWidget(closeTabButt);
     containerLayout->setContentsMargins(0, 0, 0, 0);
-    containerLayout->setMargin(0);
+    //containerLayout->setMargin(0);
     containerLayout->setSpacing(0);
     container->setLayout(containerLayout);
     container->setStyleSheet("border:2px;");
@@ -312,7 +312,7 @@ MainWindow::MainWindow(NetSpeed::NocConsole* c, QWidget* parent)
     connect(this, &MainWindow::resizeWindow, this, [this](int width, int height) {
         //Set state to prevent problems when windows is at full screen then resize      
         setWindowState(Qt::WindowNoState);
-        auto rect = QDesktopWidget().availableGeometry();
+        auto rect = QGuiApplication::primaryScreen()->geometry();  // QDesktopWidget().availableGeometry();
         const int maxWidth = rect.width();
         const int maxHeight = rect.height();
         width = std::min(maxWidth, width);
@@ -1186,7 +1186,7 @@ void MainWindow::createLayerButtons(NetSpeed::Grid * grid)
         }
         else {
             QString t = "Shift+A";
-            t[t.length() - 1] = t[t.length() - 1].unicode() + l - 10;
+            t[t.length() - 1] = QChar(t[t.length() - 1].unicode() + l - 10);
             shortCut = layerShortcut.arg(t);
             layerPb->setShortcut(shortCut);
         }
@@ -3279,9 +3279,10 @@ bool MainWindow::saveProjectAct()
     }
 
     QJsonDocument saveDoc(loadDoc.object());
-    saveFile.write(fileName.endsWith(".json")
-        ? saveDoc.toJson()
-        : saveDoc.toBinaryData());
+    //saveFile.write(fileName.endsWith(".json")
+    //    ? saveDoc.toJson()
+    //    : saveDoc.toBinaryData());
+    saveFile.write(saveDoc.toJson());
 
 #endif
     return true;
@@ -3306,9 +3307,10 @@ bool MainWindow::openProjectAct()
 
     QByteArray saveData = loadFile.readAll();
 
-    QJsonDocument loadDoc(fileName.endsWith(".json")
-        ? QJsonDocument::fromJson(saveData)
-        : QJsonDocument::fromBinaryData(saveData));
+    //QJsonDocument loadDoc(fileName.endsWith(".json")
+    //    ? QJsonDocument::fromJson(saveData)
+    //    : QJsonDocument::fromBinaryData(saveData));
+    QJsonDocument loadDoc(QJsonDocument::fromJson(saveData));
 
     //! TODO: Read data from Json Objects
     qDebug() << loadDoc.toJson() << loadDoc.object().keys();
@@ -3859,10 +3861,10 @@ void MainWindow::wheelEvent(QWheelEvent * event)
         if (!displayPanel || (displayPanel->currentIndex() != 0 && !isDisplayingChipView())) return;
         QWidget * widget = displayPanel->widget(0);
         if (!widget || (!widget->underMouse() && !isDisplayingChipView())) return;
-        if (event->delta() > 0) {
+        if (event->angleDelta().y() > 0) {
             zoomInAct();
         }
-        else if (event->delta() < 0) {
+        else if (event->angleDelta().y() < 0) {
             zoomOutAct();
         }
     }
@@ -4929,7 +4931,7 @@ void MainWindow::delTypeDomainAct()
         }
     }
     if (allDomains.isEmpty()) return;
-    Qt::WindowFlags flags = 0;
+    Qt::WindowFlags flags = Qt::Widget;
     flags |= Qt::WindowCloseButtonHint;
     flags |= Qt::Window;
     flags |= Qt::WindowTitleHint;
@@ -6613,7 +6615,8 @@ void MainWindow::readSettings()
     QSettings settings(settingFilePath, QSettings::IniFormat);
 
     if (!settings.childGroups().contains(viewOptionList)) {
-        QRect screenGeometry = QApplication::desktop()->screenGeometry();
+        //QRect screenGeometry = QApplication::desktop()->screenGeometry();
+        QRect screenGeometry = QGuiApplication::primaryScreen()->geometry();
         int x = (screenGeometry.width() - width()) / 2;
         int y = (screenGeometry.height() - height()) / 2;
         move(x, y);
@@ -6829,7 +6832,7 @@ QVBoxLayout* MainWindow::createChartTabLayout(QMap<QString, QCustomPlot*>& plots
 {
     QVBoxLayout* mainLayout = new QVBoxLayout();
     mainLayout->setSpacing(6);
-    mainLayout->setMargin(0);
+    //mainLayout->setMargin(0);
     // Display normal plots
     for (const auto& chart : chs.charts) {
         // Init chart
@@ -6845,12 +6848,12 @@ QVBoxLayout* MainWindow::createChartTabLayout(QMap<QString, QCustomPlot*>& plots
         QVBoxLayout* plotLayout;
         plotLayout = new QVBoxLayout();
         plotLayout->setSpacing(0);
-        plotLayout->setMargin(0);
+        //plotLayout->setMargin(0);
         plotLayout->addWidget(customPlot);
 
         QVBoxLayout* verticalLayout = new QVBoxLayout();
         verticalLayout->addLayout(plotLayout);
-        verticalLayout->setMargin(10);
+        //verticalLayout->setMargin(10);
         widget->setLayout(verticalLayout);
 
         // Add to main layout
diff --git i/src/sw/noc_dev/prototype/Gui/myconsole.cpp w/src/sw/noc_dev/prototype/Gui/myconsole.cpp
index b059f449f78..9d195642ebf 100644
--- i/src/sw/noc_dev/prototype/Gui/myconsole.cpp
+++ w/src/sw/noc_dev/prototype/Gui/myconsole.cpp
@@ -418,10 +418,10 @@ void INIConsole::wheelEvent(QWheelEvent* event)
     if (event->modifiers().testFlag(Qt::ControlModifier))
     {
         QSlider* cSlider = ResizeDialog::getResizeDialog()->getCSlider();
-        if (event->delta() > 0) {
+        if (event->angleDelta().y() > 0) {
             cSlider->triggerAction(QAbstractSlider::SliderSingleStepAdd);
         }
-        else if (event->delta() < 0) {
+        else if (event->angleDelta().y() < 0) {
             cSlider->triggerAction(QAbstractSlider::SliderSingleStepSub);
         }
         event->accept();
@@ -484,7 +484,7 @@ void INIConsole::handlePasteEvent()
 
     // Delete characters/ selected text which user inputed
     if (min >= beginOfCurrentTyping) {
-        if ((blkCmd.trimmed().size() > 0) && blkCmd.contains(QRegExp("[\r\n]"))) {
+        if ((blkCmd.trimmed().size() > 0) && blkCmd.contains(QRegularExpression("[\r\n]"))) {
             mainWindow->closeCreationIns();
             textCursor().deleteChar();
             moveCursor(QTextCursor::End);
diff --git i/src/sw/noc_dev/prototype/Gui/propertypanel.cpp w/src/sw/noc_dev/prototype/Gui/propertypanel.cpp
index ad44fc271db..bcd233d7567 100644
--- i/src/sw/noc_dev/prototype/Gui/propertypanel.cpp
+++ w/src/sw/noc_dev/prototype/Gui/propertypanel.cpp
@@ -155,7 +155,7 @@ template <> QString getPropCmd<NetSpeed::Bridge>(QtProperty * p, const NetSpeed:
     auto propName = (helpTxtEmpty) ? p->propertyName() : helpTxt;
     auto value = p->valueText();
     if (!helpTxtEmpty) {
-        auto nameList = value.split(QRegExp("/"));
+        auto nameList = value.split(QRegularExpression("/"));
         if (!nameList.empty()) value = nameList.last();
     }
     return QString("bridge_prop {%1} %2 {%3}").arg(QString::fromStdString(h->name()), propName, value);
@@ -257,7 +257,7 @@ PropertyPanel::PropertyPanel(MainWindow * mw)
     , selectionPropertyEditor(static_cast<LazyLoadPortGroup*>(selectionBrowser)), mw(mw)
 {
     Q_ASSERT(mw);
-    dockLint = new NSDockWidget(OBJ_LINT_DOCK, mw, 0);
+    dockLint = new NSDockWidget(OBJ_LINT_DOCK, mw, Qt::Widget);
     connect(this, SIGNAL(onClearTransactionList()), this, SLOT(clearTransactionList()));
 
     /* add button for adding host by tool */
@@ -4959,12 +4959,12 @@ QString PropertyPanel::wrapTextForTooltip(QString text, int width)
     static int colLen = 0;
     if (localWidth != width)
     {
-        int numRow = fm.width(text) / width;
+        int numRow = fm.tightBoundingRect(text).width() / width;
         if (numRow <= 1) return text;
         colLen = text.length() / numRow;
         while (colLen < text.length())
         {
-            if (fm.width(text.left(++colLen + 1)) > width)
+            if (fm.tightBoundingRect(text.left(++colLen + 1)).width() > width)
                 break;
         }
         localWidth = width;
@@ -6688,7 +6688,9 @@ void PropertyPanel::createMeshPropertyItems(const NetSpeed::Grid * g, QtTreeProp
         addPropertyToBrowser(propTree, i.value());
         ++i;
     }
-    auto keys = cateProp.keys().toVector().toStdVector();
+    //std::vector<QString> keys(cateProp.keys().begin(), cateProp.keys().end());
+    QStringList keyList = cateProp.keys();
+    std::vector<QString> keys(keyList.begin(), keyList.end());
     setBoldProperty(propTree, keys);
     // Add Property Items
     QtProperty* propertyItem = nullptr;
@@ -7152,22 +7154,22 @@ void PropertyPanel::wheelOnCustomPlot(QWheelEvent * event)
             if (auto widget = graphSplitter->parentWidget()) scroll = widget->parentWidget();
         QSharedPointer<StatTab> statTab = mw->getTabStatTabMap().value(scroll, nullptr);
         if (!statTab) return;
-        QCPAxisRect* axisRect = dynamic_cast<QCPAxisRect*>(customPlot->layoutElementAt(event->pos()));
+        QCPAxisRect* axisRect = dynamic_cast<QCPAxisRect*>(customPlot->layoutElementAt(event->position()));
         if (axisRect)
         {
             QCPAxis* xAxis = axisRect->axis(QCPAxis::atBottom, 0);
             if (xAxis)
             {
-                double wheelStep = event->delta() / 120.0;
+                double wheelStep = (event->angleDelta().y()) / 120.0;
                 double factor = pow(axisRect->rangeZoomFactor(Qt::Horizontal), wheelStep);
                 // Scale the range
-                xAxis->scaleRange(factor, xAxis->pixelToCoord(event->pos().x()));
+                xAxis->scaleRange(factor, xAxis->pixelToCoord(event->position().x()));
                 bool haveData = customPlot->haveDataInRange(xAxis->range().lower, xAxis->range().upper);
                 if (haveData == false) // No data
                 {
                     // Undo range change
                     factor = pow(axisRect->rangeZoomFactor(Qt::Horizontal), -wheelStep);
-                    xAxis->scaleRange(factor, xAxis->pixelToCoord(event->pos().x()));
+                    xAxis->scaleRange(factor, xAxis->pixelToCoord(event->position().x()));
                     return;
                 }
                 else //Have data
@@ -8218,9 +8220,9 @@ void PropertyTreeWidget::wheelEvent(QWheelEvent* event)
 {
     if (event->modifiers().testFlag(Qt::ControlModifier)) {
         if (auto zoomSlider = ResizeDialog::getResizeDialog()->getPSlider()) {
-            if (event->delta() > 0)
+            if (event->angleDelta().y() > 0)
                 zoomSlider->triggerAction(QAbstractSlider::SliderSingleStepAdd);
-            else if (event->delta() < 0)
+            else if (event->angleDelta().y() < 0)
                 zoomSlider->triggerAction(QAbstractSlider::SliderSingleStepSub);
         }
         event->accept();
@@ -8245,9 +8247,9 @@ void SimTableView::wheelEvent(QWheelEvent* event)
 {
     if (event->modifiers().testFlag(Qt::ControlModifier)) {
         if (auto zoomSlider = ResizeDialog::getResizeDialog()->getPSlider()) {
-            if (event->delta() > 0)
+            if (event->angleDelta().y() > 0)
                 zoomSlider->triggerAction(QAbstractSlider::SliderSingleStepAdd);
-            else if (event->delta() < 0)
+            else if (event->angleDelta().y() < 0)
                 zoomSlider->triggerAction(QAbstractSlider::SliderSingleStepSub);
         }
         event->accept();
@@ -8263,9 +8265,9 @@ void TooltipWindowTab::wheelEvent(QWheelEvent* event)
 {
     if (event->modifiers().testFlag(Qt::ControlModifier)) {
         if (auto zoomSlider = ResizeDialog::getResizeDialog()->getMSlider()) {
-            if (event->delta() > 0)
+            if (event->angleDelta().y() > 0)
                 zoomSlider->triggerAction(QAbstractSlider::SliderSingleStepAdd);
-            else if (event->delta() < 0)
+            else if (event->angleDelta().y() < 0)
                 zoomSlider->triggerAction(QAbstractSlider::SliderSingleStepSub);
         }
         event->accept();
diff --git i/src/sw/noc_dev/prototype/Gui/statsview.cpp w/src/sw/noc_dev/prototype/Gui/statsview.cpp
index 006123ce542..8b5d35211c6 100644
--- i/src/sw/noc_dev/prototype/Gui/statsview.cpp
+++ w/src/sw/noc_dev/prototype/Gui/statsview.cpp
@@ -336,10 +336,10 @@ void StatsView::refresh()
         zoomAutofit(layer_columns);
     }
 
-    QMatrix matrix;
+    QTransform matrix;
     matrix.scale(zoomFactor, zoomFactor);
 
-    setMatrix(matrix);
+    setTransform(matrix);
     int active_layer_cnt = 0; // count active layers for positioning
     for (int i = 0; i < isize(layer_groups); ++i) {
         auto lg = layer_groups[i];
@@ -588,12 +588,12 @@ void StatsView::wheelEvent(QWheelEvent * event)
     if (event->modifiers().testFlag(Qt::ControlModifier))
     {
         if (getFocusPoint() == QPointF()) {
-            setFocusPoint(mapToScene(event->posF().x(), event->posF().y()));
+            setFocusPoint(mapToScene(event->position().x(), event->position().y()));
         }
-        if (event->delta() > 0) {
+        if (event->angleDelta().y() > 0) {
             mw->zoomInAct();
         }
-        else if (event->delta() < 0) {
+        else if (event->angleDelta().y() < 0) {
             mw->zoomOutAct();
         }
     }
@@ -1037,7 +1037,8 @@ void stats_box_data_t::paint(QPainter * painter, const QStyleOptionGraphicsItem*
         const int n2 = STATS_NODE_SIZE * 2 / 4;
         const int n3 = STATS_NODE_SIZE * 3 / 4;
         const int n4 = STATS_NODE_SIZE;
-        const QVector<QLine> lines = QVector<QLine>::fromStdVector({
+        //const QVector<QLine> lines = QVector<QLine>::fromStdVector({
+        std::vector<QLine> vector_lines = {
             // Horizontal lines
             QLine(n0, n2, n4, n2),
             QLine(n2, n1, n4, n1),
@@ -1047,14 +1048,16 @@ void stats_box_data_t::paint(QPainter * painter, const QStyleOptionGraphicsItem*
                 QLine(n2, n0, n2, n4),
                 QLine(n1, n0, n1, n2),
                 QLine(n3, n2, n3, n4),
-            });
+            };
+        const QVector<QLine> lines(vector_lines.begin(), vector_lines.end());
         painter->drawLines(lines);
 
         QPoint p1, p2;
 
         // Gray lines
         painter->setPen(Qt::gray);
-        const QVector<QLine> lines2 = QVector<QLine>::fromStdVector({
+        //const QVector<QLine> lines2 = QVector<QLine>::fromStdVector({
+        std::vector<QLine> vector_lines2 = {
             // Horizontal lines
             QLine(n0, n1, n2, n1),
             QLine(n2, n3, n4, n3),
@@ -1062,7 +1065,8 @@ void stats_box_data_t::paint(QPainter * painter, const QStyleOptionGraphicsItem*
             // Vertical lines
             QLine(n1, n2, n1, n4),
             QLine(n3, n0, n3, n2),
-            });
+            };
+        const QVector<QLine> lines2(vector_lines2.begin(), vector_lines2.end());
         painter->drawLines(lines2);
         painter->restore();
 
diff --git i/src/sw/noc_dev/prototype/Gui/treemodel.cpp w/src/sw/noc_dev/prototype/Gui/treemodel.cpp
index 471cf03afdb..74e80cb494a 100644
--- i/src/sw/noc_dev/prototype/Gui/treemodel.cpp
+++ w/src/sw/noc_dev/prototype/Gui/treemodel.cpp
@@ -135,7 +135,7 @@ QVariant TreeModel::data(const QModelIndex& index, int role) const
 Qt::ItemFlags TreeModel::flags(const QModelIndex & index) const
 {
     if (!index.isValid())
-        return 0;
+        return Qt::ItemFlags(0);
 
     Qt::ItemFlags flags = Qt::ItemIsEnabled | Qt::ItemIsSelectable;
 
diff --git i/src/sw/noc_dev/prototype/Utils/stattab.cpp w/src/sw/noc_dev/prototype/Utils/stattab.cpp
index 10e037320be..50808f3b6b5 100644
--- i/src/sw/noc_dev/prototype/Utils/stattab.cpp
+++ w/src/sw/noc_dev/prototype/Utils/stattab.cpp
@@ -513,7 +513,8 @@ void EventGroup::get_graphs_points(QSharedPointer<StatTab> st, double bin_size,
             }
             else {
                 QCPData data(et, static_cast<float>(e.data_size) / 8);
-                pkt_size_points[et] = data;
+                pkt_size_points.insert(et, data);
+                //pkt_size_points[et] = data;
                 if (data.value > maxDataSize) maxDataSize = data.value;
                 total_datasize += data.value;
             }
@@ -551,9 +552,12 @@ void EventGroup::get_graphs_points(QSharedPointer<StatTab> st, double bin_size,
         QCPData latency_data(it.key(), latency);
         QCPData idle_latency_data(it.key(), idle_latency);
 
-        latency_points[it.key()] = latency_data;
-        throughput_points[it.key()] = throughput_data;
-        idle_latency_points[it.key()] = idle_latency_data;
+        //latency_points[it.key()] = latency_data;
+        latency_points.insert(it.key(), latency_data);
+        //throughput_points[it.key()] = throughput_data;
+        throughput_points.insert(it.key(), throughput_data);
+        //idle_latency_points[it.key()] = idle_latency_data;
+        idle_latency_points.insert(it.key(), idle_latency_data);
         if (throughput > maxThroughput) maxThroughput = throughput;
         if (latency > maxLatency) maxLatency = latency;
         if (idle_latency > maxLatency) maxLatency = idle_latency;
diff --git i/src/sw/noc_dev/prototype/Utils/worker.cpp w/src/sw/noc_dev/prototype/Utils/worker.cpp
index 549b8a3d754..dd4e7f1937d 100644
--- i/src/sw/noc_dev/prototype/Utils/worker.cpp
+++ w/src/sw/noc_dev/prototype/Utils/worker.cpp
@@ -4,6 +4,8 @@
 
 #include "Grid.h"
 
+#include <QRegularExpression>
+
 Worker::Worker(NetSpeed::NocConsole* c, INIConsole* ini, MainWindow* parent) :
     c(c)
 {
@@ -15,7 +17,7 @@ Worker::Worker(NetSpeed::NocConsole* c, INIConsole* ini, MainWindow* parent) :
 void Worker::processBlkCmd(QString blkCmd, bool isDesignRevMode)
 {
     bool res = false;
-    QStringList cmds = blkCmd.split(QRegExp("[\r\n]"));   
+    QStringList cmds = blkCmd.split(QRegularExpression("[\r\n]"));
     if (cmds.isEmpty()) {
         return;
     }
