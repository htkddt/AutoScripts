 src/sw/noc_dev/GUICore_qt6/NSDockWidget.cpp     |  4 +++
 src/sw/noc_dev/prototype_qt6/Gui/mainwindow.cpp | 42 ++++++++++++++++++++++++-
 2 files changed, 45 insertions(+), 1 deletion(-)

diff --git a/src/sw/noc_dev/GUICore_qt6/NSDockWidget.cpp b/src/sw/noc_dev/GUICore_qt6/NSDockWidget.cpp
index b685ef12acf..d5e233edcf2 100644
--- a/src/sw/noc_dev/GUICore_qt6/NSDockWidget.cpp
+++ b/src/sw/noc_dev/GUICore_qt6/NSDockWidget.cpp
@@ -6,11 +6,15 @@
 NSDockWidget::NSDockWidget(const QString& title, QWidget* parent, Qt::WindowFlags flags)
     : QDockWidget(title, parent, flags)
 {
+    QFont font;
+    font.setFamily("Consolas");
+
     _parent = parent;
     setObjectName(title);
     setWindowTitle(title);
 
     menu = new QMenu(title, this);
+    menu->setFont(font);
     toggleViewAction()->setText("Show");
     menu->addAction(toggleViewAction());
     menu->addAction(tr("Raise"), this, [this]() {
diff --git a/src/sw/noc_dev/prototype_qt6/Gui/mainwindow.cpp b/src/sw/noc_dev/prototype_qt6/Gui/mainwindow.cpp
index b6e9884ee9c..240fbc3ee4e 100644
--- a/src/sw/noc_dev/prototype_qt6/Gui/mainwindow.cpp
+++ b/src/sw/noc_dev/prototype_qt6/Gui/mainwindow.cpp
@@ -1277,37 +1277,52 @@ void MainWindow::revertLastLayersState() {
     }
 }
 
-void MainWindow::createMenus() {
+void MainWindow::createMenus()
+{
+    QFont font;
+    font.setFamily("Consolas");
+
     menuBar = new NsMenuBar;
+    menuBar->setFont(font);
     fileMenu = menuBar->addMenu(MENU_FILE);
+    fileMenu->setFont(font);
     createFileMenu();
 
     const bool bridges_supported = NetSpeed::are_bridges_supported();
     addMenu = menuBar->addMenu(MENU_SPECIFY);
+    addMenu->setFont(font);
     createSpecificMenu();
 
     if (bridges_supported) {
         designMenu = menuBar->addMenu(MENU_DESIGN);
+        designMenu->setFont(font);
         createDesignMenu();
 
         simulateMenu = menuBar->addMenu(MENU_SIMULATE);
+        simulateMenu->setFont(font);
         createSimulateMenu();
     }
     generateMenu = menuBar->addMenu(MENU_GENERATE);
+    generateMenu->setFont(font);
     createGenerateMenu();
 
     // Add high light menu
     highLightMenu = menuBar->addMenu(MENU_HIGHLIGHT);
+    highLightMenu->setFont(font);
     createHighLightMenu();
 
     //Add View menu
     viewMenu = menuBar->addMenu(MENU_VIEW);
+    viewMenu->setFont(font);
     createViewMenu();
 
     // Add Windows menu
     windowsMenu = menuBar->addMenu(MENU_WINDOWS);
+    windowsMenu->setFont(font);
 
     designReviewMenu = menuBar->addMenu(MENU_DESIGN_REVIEW);
+    designReviewMenu->setFont(font);
+
     sessionMenu = new QMenu(MENU_SESSIONS, this);
     scanSession(sessionMenu, MENU_DESIGN_REVIEW);
     QAction* acConvert = instrumentsActMap[CONVERT_NCF_TO_DS];
@@ -1316,6 +1331,7 @@ void MainWindow::createMenus() {
 
     // Create Help menu
     helpMenu = menuBar->addMenu(MENU_HELP);
+    helpMenu->setFont(font);
     createHelpMenu();
     menuBar->setCornerWidget(new QLabel("CFG_NoCStudio"));
 
@@ -1334,14 +1350,19 @@ void MainWindow::createMenus() {
 
 void MainWindow::createFileMenu()
 {
+    QFont font;
+    font.setFamily("Consolas");
+
     fileMenu->addAction(instrumentsActMap[NEW_MESH_CUSTON_NO_ICON]);
     fileMenu->addAction(instrumentsActMap[OPEN_SOURCE_FILE]);
     fileMenu->addAction(instrumentsActMap[LOAD_STAT]);
     fileMenu->addAction(instrumentsActMap[EXIT_FULLSCREEN]);
     fileMenu->addSeparator();
     recentlySourcedMenu = new QMenu("Recently Sourced", this);
+    recentlySourcedMenu->setFont(font);
     recentlySourcedAction = fileMenu->addMenu(recentlySourcedMenu);
     recentlyLoadedStatsMenu = new QMenu("Recently Loaded Stats", this);
+    recentlyLoadedStatsMenu->setFont(font);
     recentlyLoadedStatsAction = fileMenu->addMenu(recentlyLoadedStatsMenu);
     fileMenu->addAction(recentlySourcedAction);
     fileMenu->addAction(recentlyLoadedStatsAction);
@@ -1351,6 +1372,9 @@ void MainWindow::createFileMenu()
 
 void MainWindow::createSpecificMenu()
 {
+    QFont font;
+    font.setFamily("Consolas");
+
     for (const auto& ins : specifyMenu)
     {
         if (ins == ADD_IDI2CMI) {
@@ -1383,6 +1407,7 @@ void MainWindow::createSpecificMenu()
     if (command_present(CMD_RESET_CONNECT)) addMenu->addAction(instrumentsActMap[RESET_CONNECT]);
     addMenu->addSeparator();
     QMenu* addDomain = new QMenu("Add Domains", this);
+    addDomain->setFont(font);
     if (command_present(CMD_ADD_CLOCK_DOMAIN))
         addDomain->addAction(instrumentsActMap[ADD_CLOCK_DOMAIN_IN_MENU]);
     if (command_present(CMD_ADD_POWER_DOMAIN))
@@ -1396,6 +1421,7 @@ void MainWindow::createSpecificMenu()
     addActionsOnSpecifyMenu->setIcon(QIcon(ICON_ADD_CIRCLE));
     addMenu->addAction(addActionsOnSpecifyMenu);
     QMenu* delDomain = new QMenu("Delete Domains", this);
+    delDomain->setFont(font);
     if (command_present(CMD_DEL_CLOCK_DOMAIN)) delDomain->addAction(instrumentsActMap[DEL_CLOCK_DOMAIN]);
     if (command_present(CMD_DEL_POWER_DOMAIN)) delDomain->addAction(instrumentsActMap[DEL_POWER_DOMAIN]);
     if (command_present(CMD_DEL_VOLTAGE_DOMAIN)) delDomain->addAction(instrumentsActMap[DEL_VOTAGE_DOMAIN]);
@@ -1455,6 +1481,9 @@ void MainWindow::createHighLightMenu()
 
 void MainWindow::createViewMenu()
 {
+    QFont font;
+    font.setFamily("Consolas");
+
     const bool bridges_supported = NetSpeed::are_bridges_supported();
 
     viewMenu->addAction(instrumentsActMap[RESIZE_FONT_ICON_ACTION]);
@@ -1473,22 +1502,29 @@ void MainWindow::createViewMenu()
     QMenu* menu = new QMenu(this);
     QMenu* subMenu;
     subMenu = createPropMenu(TITLE_HOST_PROPS, HOST_PROP, NetSpeed::Property::host_props);
+    subMenu->setFont(font);
     menu->addMenu(subMenu);
     subMenu = createPropMenu(TITLE_BRIDGE_PROPS, BRIDGE_PROP, NetSpeed::Property::bridge_props);
+    subMenu->setFont(font);
     subMenu->setVisible(bridges_supported);
     menu->addMenu(subMenu);
     subMenu = createPropMenu(TITLE_IFCE_PROPS, IFCE_PROP, NetSpeed::Property::ifce_props);
+    subMenu->setFont(font);
     subMenu->setVisible(bridges_supported);
     menu->addMenu(subMenu);
     subMenu = createPropMenu(TITLE_VC_PROPS, VC_PROP, NetSpeed::Property::vc_props);
+    subMenu->setFont(font);
     subMenu->setVisible(bridges_supported);
     menu->addMenu(subMenu);
     subMenu = createPropMenu(TITLE_LINKS_PROPS, LINK_PROP, NetSpeed::Property::link_props);
+    subMenu->setFont(font);
     subMenu->setVisible(bridges_supported);
     menu->addMenu(subMenu);
     subMenu = createPropMenu(TITLE_ROUTER_PROPS, ROUTER_PROP, NetSpeed::Property::router_props);
+    subMenu->setFont(font);
     subMenu->setVisible(bridges_supported);
     menu->addMenu(subMenu);
+    menu->setFont(font);
 
     propTbl = viewMenu->addMenu(menu);
     propTbl->setIcon(QIcon(ICON_PROP_TBLS));
@@ -1501,9 +1537,12 @@ void MainWindow::createViewMenu()
         QMenu* newMenu = new QMenu(this);
         QMenu* newSubMenu;
         newSubMenu = createNewRouteMenu(NEW_ROUTE_TBL_TITLE, NEW_ROUTE_TBL);
+        newSubMenu->setFont(font);
         newMenu->addMenu(newSubMenu);
         newSubMenu = createNewRouteMenu(POLARITY_TBL_TITLE, POLARITY_TBL);
+        newSubMenu->setFont(font);
         newMenu->addMenu(newSubMenu);
+        newMenu->setFont(font);
 
         newTbl = viewMenu->addMenu(newMenu);
         newTbl->setIcon(QIcon(ICON_ROUTE_TABLE));
@@ -1517,6 +1556,7 @@ void MainWindow::createViewMenu()
     viewMenu->addAction(instrumentsActMap[RESET_TOOLBARS]);
     viewMenu->addSeparator();
     QMenu* enableMenu = new QMenu("Enable Starting Dialogs" ,this);
+    enableMenu->setFont(font);
     for (const auto& ins : viewMenuEnum)
     {
         if (ins == CLOSE_ALL_TOOLTIP_DIALOGS) continue;
