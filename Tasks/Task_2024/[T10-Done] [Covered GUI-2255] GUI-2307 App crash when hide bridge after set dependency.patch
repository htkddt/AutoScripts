 src/sw/noc_dev/prototype/Gui/View/NsScene.cpp  | 8 ++++++++
 src/sw/noc_dev/prototype/Gui/propertypanel.cpp | 5 +++++
 src/sw/noc_dev/prototype/Gui/propertypanel.h   | 1 +
 3 files changed, 14 insertions(+)

diff --git a/src/sw/noc_dev/prototype/Gui/View/NsScene.cpp b/src/sw/noc_dev/prototype/Gui/View/NsScene.cpp
index 8782188c46f..a90a40bd7d5 100644
--- a/src/sw/noc_dev/prototype/Gui/View/NsScene.cpp
+++ b/src/sw/noc_dev/prototype/Gui/View/NsScene.cpp
@@ -739,6 +739,14 @@ void NsMeshViewScene::load() {
         }
     }
 
+    if (mw && (isViewMode(NOC)) && (getInsType() != NONE_INSTRUMENT)) {
+        instrumentMediator = nullptr;
+        auto prop = mw->getPropertyPanel();
+        if (prop) {
+            prop->refreshPropertyPanel();
+        }
+    }
+
     box.clear();
     layers.clear();
     chopViews.clear();
diff --git a/src/sw/noc_dev/prototype/Gui/propertypanel.cpp b/src/sw/noc_dev/prototype/Gui/propertypanel.cpp
index 34315233d61..47a8aba6e34 100644
--- a/src/sw/noc_dev/prototype/Gui/propertypanel.cpp
+++ b/src/sw/noc_dev/prototype/Gui/propertypanel.cpp
@@ -7885,6 +7885,11 @@ void PropertyPanel::showAddDependencyInstruction(bool addDep)
         "draw dependency between two bridges.");
 }
 
+void PropertyPanel::refreshPropertyPanel()
+{
+    emit resetButton->clicked();
+}
+
 void PropertyPanel::resetButtonClickedMeshView()
 {
     if (!mw->isDisplayingMeshView()) return;
diff --git a/src/sw/noc_dev/prototype/Gui/propertypanel.h b/src/sw/noc_dev/prototype/Gui/propertypanel.h
index 685ef398107..0a98c61e074 100644
--- a/src/sw/noc_dev/prototype/Gui/propertypanel.h
+++ b/src/sw/noc_dev/prototype/Gui/propertypanel.h
@@ -228,6 +228,7 @@ class PropertyPanel : public PropertyTab
 
 public:
     bool bIsStatTabCurrentTab = false;
+    void refreshPropertyPanel();
 
 private:
     LintDialog* waiveDialog = nullptr;
